(()=>{"use strict";var t={74:(t,n,e)=>{e.d(n,{Z:()=>s});var r=e(537),a=e.n(r),i=e(645),o=e.n(i)()(a());o.push([t.id,".restaurant-filter-container {\n  display: none;\n}\n\n.restaurant-filter-container--open {\n  display: flex;\n  justify-content: space-between;\n\n  padding: 0 16px;\n  margin-top: 24px;\n}\n\n.restaurant-filter-container select {\n  height: 44px;\n  min-width: 125px;\n\n  border: 1px solid #d0d5dd;\n  border-radius: 8px;\n  background: transparent;\n\n  font-size: 16px;\n  text-align: center;\n}\n\n.restaurant-filter {\n  padding: 8px;\n}\n","",{version:3,sources:["webpack://./css/filter.css"],names:[],mappings:"AAAA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,8BAA8B;;EAE9B,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,gBAAgB;;EAEhB,yBAAyB;EACzB,kBAAkB;EAClB,uBAAuB;;EAEvB,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,YAAY;AACd",sourcesContent:[".restaurant-filter-container {\n  display: none;\n}\n\n.restaurant-filter-container--open {\n  display: flex;\n  justify-content: space-between;\n\n  padding: 0 16px;\n  margin-top: 24px;\n}\n\n.restaurant-filter-container select {\n  height: 44px;\n  min-width: 125px;\n\n  border: 1px solid #d0d5dd;\n  border-radius: 8px;\n  background: transparent;\n\n  font-size: 16px;\n  text-align: center;\n}\n\n.restaurant-filter {\n  padding: 8px;\n}\n"],sourceRoot:""}]);const s=o},248:(t,n,e)=>{e.d(n,{Z:()=>s});var r=e(537),a=e.n(r),i=e(645),o=e.n(i)()(a());o.push([t.id,".gnb {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 64px;\n\n  padding: 0 16px;\n\n  background-color: var(--primary-color);\n}\n\n.gnb__title {\n  color: #fcfcfd;\n  cursor: pointer;\n}\n\n.gnb__button {\n  height: 40px;\n\n  border: none;\n  border-radius: 8px;\n  background: transparent;\n\n  font-size: 24px;\n  cursor: pointer;\n}\n\n.gnb__button img {\n  display: block;\n  width: 40px;\n  height: 40px;\n  object-fit: contain;\n}\n","",{version:3,sources:["webpack://./css/header.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,YAAY;;EAEZ,eAAe;;EAEf,sCAAsC;AACxC;;AAEA;EACE,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,YAAY;;EAEZ,YAAY;EACZ,kBAAkB;EAClB,uBAAuB;;EAEvB,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,WAAW;EACX,YAAY;EACZ,mBAAmB;AACrB",sourcesContent:[".gnb {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 64px;\n\n  padding: 0 16px;\n\n  background-color: var(--primary-color);\n}\n\n.gnb__title {\n  color: #fcfcfd;\n  cursor: pointer;\n}\n\n.gnb__button {\n  height: 40px;\n\n  border: none;\n  border-radius: 8px;\n  background: transparent;\n\n  font-size: 24px;\n  cursor: pointer;\n}\n\n.gnb__button img {\n  display: block;\n  width: 40px;\n  height: 40px;\n  object-fit: contain;\n}\n"],sourceRoot:""}]);const s=o},639:(t,n,e)=>{e.d(n,{Z:()=>s});var r=e(537),a=e.n(r),i=e(645),o=e.n(i)()(a());o.push([t.id,".modal {\n  display: none;\n}\n\n.modal--open {\n  display: block;\n  height: 100%;\n}\n\n.modal-backdrop {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  height: 100%;\n\n  background: rgba(0, 0, 0, 0.35);\n}\n","",{version:3,sources:["webpack://./css/modal.css"],names:[],mappings:"AAAA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;EACd,YAAY;AACd;;AAEA;EACE,eAAe;EACf,MAAM;EACN,QAAQ;EACR,SAAS;EACT,OAAO;EACP,YAAY;;EAEZ,+BAA+B;AACjC",sourcesContent:[".modal {\n  display: none;\n}\n\n.modal--open {\n  display: block;\n  height: 100%;\n}\n\n.modal-backdrop {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  height: 100%;\n\n  background: rgba(0, 0, 0, 0.35);\n}\n"],sourceRoot:""}]);const s=o},922:(t,n,e)=>{e.d(n,{Z:()=>s});var r=e(537),a=e.n(r),i=e(645),o=e.n(i)()(a());o.push([t.id,"nav {\n  height: 64px;\n}\n\n.nav-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n}\n\n.text-button-container {\n  display: flex;\n  justify-content: center;\n  align-items: end;\n  height: 90%;\n  width: 100%;\n}\n\n.bar-button-container {\n  display: flex;\n  justify-content: center;\n  align-items: end;\n  height: 10%;\n  width: 100%;\n}\n\n.nav-button {\n  width: 47%;\n\n  border: none;\n  cursor: pointer;\n}\n\n.text-button {\n  height: 32px;\n  background: transparent;\n\n  font-size: 16px;\n  font-weight: 600;\n  color: var(--grey-300);\n}\n\n.bar-button {\n  border: 1px solid var(--grey-200);\n}\n\n.selected-text {\n  color: var(--primary-color);\n}\n\n.selected-bar {\n  border: 1px solid var(--primary-color);\n}\n","",{version:3,sources:["webpack://./css/nav.css"],names:[],mappings:"AAAA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,gBAAgB;EAChB,WAAW;EACX,WAAW;AACb;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,gBAAgB;EAChB,WAAW;EACX,WAAW;AACb;;AAEA;EACE,UAAU;;EAEV,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,uBAAuB;;EAEvB,eAAe;EACf,gBAAgB;EAChB,sBAAsB;AACxB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,sCAAsC;AACxC",sourcesContent:["nav {\n  height: 64px;\n}\n\n.nav-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n}\n\n.text-button-container {\n  display: flex;\n  justify-content: center;\n  align-items: end;\n  height: 90%;\n  width: 100%;\n}\n\n.bar-button-container {\n  display: flex;\n  justify-content: center;\n  align-items: end;\n  height: 10%;\n  width: 100%;\n}\n\n.nav-button {\n  width: 47%;\n\n  border: none;\n  cursor: pointer;\n}\n\n.text-button {\n  height: 32px;\n  background: transparent;\n\n  font-size: 16px;\n  font-weight: 600;\n  color: var(--grey-300);\n}\n\n.bar-button {\n  border: 1px solid var(--grey-200);\n}\n\n.selected-text {\n  color: var(--primary-color);\n}\n\n.selected-bar {\n  border: 1px solid var(--primary-color);\n}\n"],sourceRoot:""}]);const s=o},558:(t,n,e)=>{e.d(n,{Z:()=>s});var r=e(537),a=e.n(r),i=e(645),o=e.n(i)()(a());o.push([t.id,".restaurant-add-backdrop {\n  position: fixed;\n  z-index: 2;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  height: 100%;\n\n  background: rgba(0, 0, 0, 0.35);\n}\n\n.restaurant-add-container {\n  position: fixed;\n  z-index: 2;\n  bottom: 0;\n  height: 90%;\n  width: 100%;\n\n  padding: 32px 16px;\n\n  overflow-y: auto;\n  border-radius: 8px 8px 0px 0px;\n  background: var(--grey-100);\n}\n\n.modal-title {\n  margin-bottom: 36px;\n}\n\n.form-item {\n  display: flex;\n  flex-direction: column;\n\n  margin-bottom: 36px;\n}\n\n.form-item label {\n  color: var(--grey-400);\n  font-size: 14px;\n}\n\n.form-item--required label::after {\n  padding-left: 4px;\n\n  color: var(--primary-color);\n  content: '*';\n}\n\n.form-item .help-text {\n  color: var(--grey-300);\n}\n\n.form-item input,\n.form-item textarea,\n.form-item select {\n  padding: 8px;\n  margin: 6px 0;\n\n  border: 1px solid var(--grey-200);\n  border-radius: 8px;\n\n  font-size: 16px;\n}\n\n.form-item textarea {\n  resize: none;\n}\n\n.form-item select {\n  height: 44px;\n\n  padding: 8px;\n\n  border: 1px solid var(--grey-200);\n  border-radius: 8px;\n\n  color: var(--grey-300);\n}\n\ninput[name='name'],\ninput[name='link'] {\n  height: 44px;\n}\n\n.button-container {\n  display: flex;\n}\n\n.button {\n  width: 100%;\n  height: 44px;\n\n  margin-right: 16px;\n\n  border: none;\n  border-radius: 8px;\n\n  font-weight: 600;\n  cursor: pointer;\n}\n\n.button:last-child {\n  margin-right: 0;\n}\n\n.button--secondary {\n  border: 1px solid var(--grey-300);\n  background: transparent;\n\n  color: var(--grey-300);\n}\n\n.button--primary {\n  background: var(--primary-color);\n\n  color: var(--grey-100);\n}\n","",{version:3,sources:["webpack://./css/restaurant-add-container.css"],names:[],mappings:"AAAA;EACE,eAAe;EACf,UAAU;EACV,MAAM;EACN,QAAQ;EACR,SAAS;EACT,OAAO;EACP,YAAY;;EAEZ,+BAA+B;AACjC;;AAEA;EACE,eAAe;EACf,UAAU;EACV,SAAS;EACT,WAAW;EACX,WAAW;;EAEX,kBAAkB;;EAElB,gBAAgB;EAChB,8BAA8B;EAC9B,2BAA2B;AAC7B;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;;EAEtB,mBAAmB;AACrB;;AAEA;EACE,sBAAsB;EACtB,eAAe;AACjB;;AAEA;EACE,iBAAiB;;EAEjB,2BAA2B;EAC3B,YAAY;AACd;;AAEA;EACE,sBAAsB;AACxB;;AAEA;;;EAGE,YAAY;EACZ,aAAa;;EAEb,iCAAiC;EACjC,kBAAkB;;EAElB,eAAe;AACjB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;;EAEZ,YAAY;;EAEZ,iCAAiC;EACjC,kBAAkB;;EAElB,sBAAsB;AACxB;;AAEA;;EAEE,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,WAAW;EACX,YAAY;;EAEZ,kBAAkB;;EAElB,YAAY;EACZ,kBAAkB;;EAElB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,iCAAiC;EACjC,uBAAuB;;EAEvB,sBAAsB;AACxB;;AAEA;EACE,gCAAgC;;EAEhC,sBAAsB;AACxB",sourcesContent:[".restaurant-add-backdrop {\n  position: fixed;\n  z-index: 2;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  height: 100%;\n\n  background: rgba(0, 0, 0, 0.35);\n}\n\n.restaurant-add-container {\n  position: fixed;\n  z-index: 2;\n  bottom: 0;\n  height: 90%;\n  width: 100%;\n\n  padding: 32px 16px;\n\n  overflow-y: auto;\n  border-radius: 8px 8px 0px 0px;\n  background: var(--grey-100);\n}\n\n.modal-title {\n  margin-bottom: 36px;\n}\n\n.form-item {\n  display: flex;\n  flex-direction: column;\n\n  margin-bottom: 36px;\n}\n\n.form-item label {\n  color: var(--grey-400);\n  font-size: 14px;\n}\n\n.form-item--required label::after {\n  padding-left: 4px;\n\n  color: var(--primary-color);\n  content: '*';\n}\n\n.form-item .help-text {\n  color: var(--grey-300);\n}\n\n.form-item input,\n.form-item textarea,\n.form-item select {\n  padding: 8px;\n  margin: 6px 0;\n\n  border: 1px solid var(--grey-200);\n  border-radius: 8px;\n\n  font-size: 16px;\n}\n\n.form-item textarea {\n  resize: none;\n}\n\n.form-item select {\n  height: 44px;\n\n  padding: 8px;\n\n  border: 1px solid var(--grey-200);\n  border-radius: 8px;\n\n  color: var(--grey-300);\n}\n\ninput[name='name'],\ninput[name='link'] {\n  height: 44px;\n}\n\n.button-container {\n  display: flex;\n}\n\n.button {\n  width: 100%;\n  height: 44px;\n\n  margin-right: 16px;\n\n  border: none;\n  border-radius: 8px;\n\n  font-weight: 600;\n  cursor: pointer;\n}\n\n.button:last-child {\n  margin-right: 0;\n}\n\n.button--secondary {\n  border: 1px solid var(--grey-300);\n  background: transparent;\n\n  color: var(--grey-300);\n}\n\n.button--primary {\n  background: var(--primary-color);\n\n  color: var(--grey-100);\n}\n"],sourceRoot:""}]);const s=o},715:(t,n,e)=>{e.d(n,{Z:()=>s});var r=e(537),a=e.n(r),i=e(645),o=e.n(i)()(a());o.push([t.id,".restaurant-bottom-sheet-backdrop {\n  position: fixed;\n  z-index: 2;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  height: 100%;\n\n  background: rgba(0, 0, 0, 0.35);\n}\n\n.restaurant-bottom-sheet-container {\n  position: fixed;\n  z-index: 2;\n  bottom: 0;\n  height: 70%;\n  width: 100%;\n\n  padding: 32px 16px;\n\n  overflow-y: auto;\n  border-radius: 8px 8px 0px 0px;\n  background: var(--grey-100);\n}\n\n.head-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: start;\n}\n\n.head-info .restaurant__name {\n  margin: 10px 0;\n}\n\n.restaurant-bottom-sheet-container .restaurant__description {\n  display: block;\n}\n\n.restaurant-link {\n  display: block;\n  margin: 20px 0;\n\n  color: black;\n  text-decoration: underline;\n}\n\n.restaurant-link:visited {\n  color: black;\n}\n\n.button-container-info-modal {\n  display: flex;\n  justify-self: center;\n  align-items: end;\n}\n","",{version:3,sources:["webpack://./css/restaurant-bottom-sheet.css"],names:[],mappings:"AAAA;EACE,eAAe;EACf,UAAU;EACV,MAAM;EACN,QAAQ;EACR,SAAS;EACT,OAAO;EACP,YAAY;;EAEZ,+BAA+B;AACjC;;AAEA;EACE,eAAe;EACf,UAAU;EACV,SAAS;EACT,WAAW;EACX,WAAW;;EAEX,kBAAkB;;EAElB,gBAAgB;EAChB,8BAA8B;EAC9B,2BAA2B;AAC7B;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,kBAAkB;AACpB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;EACd,cAAc;;EAEd,YAAY;EACZ,0BAA0B;AAC5B;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,oBAAoB;EACpB,gBAAgB;AAClB",sourcesContent:[".restaurant-bottom-sheet-backdrop {\n  position: fixed;\n  z-index: 2;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  height: 100%;\n\n  background: rgba(0, 0, 0, 0.35);\n}\n\n.restaurant-bottom-sheet-container {\n  position: fixed;\n  z-index: 2;\n  bottom: 0;\n  height: 70%;\n  width: 100%;\n\n  padding: 32px 16px;\n\n  overflow-y: auto;\n  border-radius: 8px 8px 0px 0px;\n  background: var(--grey-100);\n}\n\n.head-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: start;\n}\n\n.head-info .restaurant__name {\n  margin: 10px 0;\n}\n\n.restaurant-bottom-sheet-container .restaurant__description {\n  display: block;\n}\n\n.restaurant-link {\n  display: block;\n  margin: 20px 0;\n\n  color: black;\n  text-decoration: underline;\n}\n\n.restaurant-link:visited {\n  color: black;\n}\n\n.button-container-info-modal {\n  display: flex;\n  justify-self: center;\n  align-items: end;\n}\n"],sourceRoot:""}]);const s=o},444:(t,n,e)=>{e.d(n,{Z:()=>s});var r=e(537),a=e.n(r),i=e(645),o=e.n(i)()(a());o.push([t.id,".restaurant-list-container {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n\n  padding: 0 16px;\n  margin: 16px 0;\n}\n\n.restaurant {\n  display: flex;\n  align-items: flex-start;\n  height: 100%;\n  width: 100%;\n\n  padding: 16px 8px;\n\n  border-bottom: 1px solid #e9eaed;\n}\n\n.restaurant__category {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 64px;\n  height: 64px;\n  min-width: 64px;\n  min-height: 64px;\n\n  margin-right: 16px;\n\n  border-radius: 50%;\n  background: var(--lighten-color);\n}\n\n.category-icon {\n  width: 36px;\n  height: 36px;\n}\n\n.restaurant__info {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  position: relative;\n  height: 100%;\n  width: 100%;\n}\n\n.restaurant-info-open-button {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n\n  border: none;\n  background: transparent;\n}\n\n.info-top {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.favorite-icon-container {\n  z-index: 1;\n  height: 32px;\n  width: 32px;\n\n  cursor: pointer;\n}\n\n.favorite-icon-lined {\n  position: absolute;\n}\n\n.favorite-icon-filled {\n  display: none;\n}\n\n.favorite-icon-filled--open {\n  display: block;\n  position: absolute;\n}\n\n.restaurant__name {\n  margin: 0;\n}\n\n.restaurant__distance {\n  color: var(--primary-color);\n}\n\n.restaurant__description {\n  display: -webkit-box;\n\n  padding-top: 8px;\n\n  overflow: hidden;\n  text-overflow: ellipsis;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n","",{version:3,sources:["webpack://./css/restaurant-list.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,YAAY;EACZ,WAAW;;EAEX,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,YAAY;EACZ,WAAW;;EAEX,iBAAiB;;EAEjB,gCAAgC;AAClC;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,WAAW;EACX,YAAY;EACZ,eAAe;EACf,gBAAgB;;EAEhB,kBAAkB;;EAElB,kBAAkB;EAClB,gCAAgC;AAClC;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,2BAA2B;EAC3B,kBAAkB;EAClB,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,WAAW;;EAEX,YAAY;EACZ,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,WAAW;AACb;;AAEA;EACE,UAAU;EACV,YAAY;EACZ,WAAW;;EAEX,eAAe;AACjB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,oBAAoB;;EAEpB,gBAAgB;;EAEhB,gBAAgB;EAChB,uBAAuB;EACvB,qBAAqB;EACrB,4BAA4B;AAC9B",sourcesContent:[".restaurant-list-container {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n\n  padding: 0 16px;\n  margin: 16px 0;\n}\n\n.restaurant {\n  display: flex;\n  align-items: flex-start;\n  height: 100%;\n  width: 100%;\n\n  padding: 16px 8px;\n\n  border-bottom: 1px solid #e9eaed;\n}\n\n.restaurant__category {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 64px;\n  height: 64px;\n  min-width: 64px;\n  min-height: 64px;\n\n  margin-right: 16px;\n\n  border-radius: 50%;\n  background: var(--lighten-color);\n}\n\n.category-icon {\n  width: 36px;\n  height: 36px;\n}\n\n.restaurant__info {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  position: relative;\n  height: 100%;\n  width: 100%;\n}\n\n.restaurant-info-open-button {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n\n  border: none;\n  background: transparent;\n}\n\n.info-top {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.favorite-icon-container {\n  z-index: 1;\n  height: 32px;\n  width: 32px;\n\n  cursor: pointer;\n}\n\n.favorite-icon-lined {\n  position: absolute;\n}\n\n.favorite-icon-filled {\n  display: none;\n}\n\n.favorite-icon-filled--open {\n  display: block;\n  position: absolute;\n}\n\n.restaurant__name {\n  margin: 0;\n}\n\n.restaurant__distance {\n  color: var(--primary-color);\n}\n\n.restaurant__description {\n  display: -webkit-box;\n\n  padding-top: 8px;\n\n  overflow: hidden;\n  text-overflow: ellipsis;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n"],sourceRoot:""}]);const s=o},174:(t,n,e)=>{e.d(n,{Z:()=>s});var r=e(537),a=e.n(r),i=e(645),o=e.n(i)()(a());o.push([t.id,"* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nul,\nli {\n  list-style: none;\n}\n\nhtml,\nbody {\n  font-family: sans-serif;\n  font-size: 16px;\n}\n\n/* Colors *****************************************/\n:root {\n  --primary-color: #ec4a0a;\n  --lighten-color: #f6a88a;\n  --grey-100: #ffffff;\n  --grey-200: #d0d5dd;\n  --grey-300: #667085;\n  --grey-400: #344054;\n  --grey-500: #000000;\n}\n\n/* Typography *************************************/\n.text-title {\n  font-size: 20px;\n  line-height: 24px;\n  font-weight: 600;\n}\n\n.text-subtitle {\n  font-size: 18px;\n  line-height: 28px;\n  font-weight: 600;\n}\n\n.text-body {\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 400;\n}\n\n.text-caption {\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n}\n","",{version:3,sources:["webpack://./css/style.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;AACxB;;AAEA;;EAEE,gBAAgB;AAClB;;AAEA;;EAEE,uBAAuB;EACvB,eAAe;AACjB;;AAEA,mDAAmD;AACnD;EACE,wBAAwB;EACxB,wBAAwB;EACxB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA,mDAAmD;AACnD;EACE,eAAe;EACf,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,gBAAgB;AAClB",sourcesContent:["* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nul,\nli {\n  list-style: none;\n}\n\nhtml,\nbody {\n  font-family: sans-serif;\n  font-size: 16px;\n}\n\n/* Colors *****************************************/\n:root {\n  --primary-color: #ec4a0a;\n  --lighten-color: #f6a88a;\n  --grey-100: #ffffff;\n  --grey-200: #d0d5dd;\n  --grey-300: #667085;\n  --grey-400: #344054;\n  --grey-500: #000000;\n}\n\n/* Typography *************************************/\n.text-title {\n  font-size: 20px;\n  line-height: 24px;\n  font-weight: 600;\n}\n\n.text-subtitle {\n  font-size: 18px;\n  line-height: 28px;\n  font-weight: 600;\n}\n\n.text-body {\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 400;\n}\n\n.text-caption {\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n}\n"],sourceRoot:""}]);const s=o},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",r=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),r&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),r&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,r,a,i){"string"==typeof t&&(t=[[null,t,void 0]]);var o={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(o[A]=!0)}for(var c=0;c<t.length;c++){var l=[].concat(t[c]);r&&o[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},537:t=>{t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(a," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:t=>{var n=[];function e(t){for(var e=-1,r=0;r<n.length;r++)if(n[r].identifier===t){e=r;break}return e}function r(t,r){for(var i={},o=[],s=0;s<t.length;s++){var A=t[s],c=r.base?A[0]+r.base:A[0],l=i[c]||0,d="".concat(c," ").concat(l);i[c]=l+1;var u=e(d),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var f=a(p,r);r.byIndex=s,n.splice(s,0,{identifier:d,updater:f,references:1})}o.push(d)}return o}function a(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,a){var i=r(t=t||[],a=a||{});return function(t){t=t||[];for(var o=0;o<i.length;o++){var s=e(i[o]);n[s].references--}for(var A=r(t,a),c=0;c<i.length;c++){var l=e(i[c]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=A}}},569:t=>{var n={};t.exports=function(t,e){var r=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},565:(t,n,e)=>{t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},795:t=>{t.exports=function(t){var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,a&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},589:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}}},n={};function e(r){var a=n[r];if(void 0!==a)return a.exports;var i=n[r]={id:r,exports:{}};return t[r](i,i.exports,e),i.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var r=n.getElementsByTagName("script");r.length&&(t=r[r.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})(),e.nc=void 0,(()=>{var t=e(379),n=e.n(t),r=e(795),a=e.n(r),i=e(569),o=e.n(i),s=e(565),A=e.n(s),c=e(216),l=e.n(c),d=e(589),u=e.n(d),p=e(174),f={};f.styleTagTransform=u(),f.setAttributes=A(),f.insert=o().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=l(),n()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;const h=window.localStorage;function m(t,n){h.setItem(t,JSON.stringify(n))}function E(t){const n=h.getItem(t);return n?Object.values(JSON.parse(n)):[]}const b=/[^ㄱ-ㅎ가-힣a-zA-Z0-9\s]/,g="restaurantList",v="favoriteList",x=[{number:0,category:"한식",name:"피양콩할마니",distance:"10",description:"평양 출신의 할머니가 수십 년간 운영해온 비지 전문점 피양콩\n    할마니. 두부를 빼지 않은 되비지를 맛볼 수 있는 곳으로, ‘피양’은\n    평안도 사투리로 ‘평양’을 의미한다. 딸과 함께 운영하는 이곳에선\n    맷돌로 직접 간 콩만을 사용하며, 일체의 조미료를 넣지 않은\n    건강식을 선보인다. 콩비지와 피양 만두가 이곳의 대표 메뉴지만,\n    할머니가 옛날 방식을 고수하며 만들어내는 비지전골 또한 이 집의\n    역사를 느낄 수 있는 특별한 메뉴다. 반찬은 손님들이 먹고 싶은\n    만큼 덜어 먹을 수 있게 준비돼 있다.",link:"https://naver.me/G6DyD9tg",isFavorite:!1},{number:1,category:"중식",name:"친친",distance:"5",description:"Since 2004 편리한 교통과 주차, 그리고 관록만큼 깊은 맛과\n    정성으로 정통 중식의 세계를 펼쳐갑니다.",link:"https://naver.me/Go5peogX",isFavorite:!1},{number:2,category:"일식",name:"잇쇼우",distance:"10",description:"잇쇼우는 정통 자가제면 사누끼 우동이 대표메뉴입니다. 기술은\n    정성을 이길 수 없다는 신념으로 모든 음식에 최선을 다하는\n    잇쇼우는 고객 한분 한분께 최선을 다하겠습니다.",link:"https://naver.me/5wHSPO4R",isFavorite:!1},{number:3,category:"양식",name:"이태리키친",distance:"20",description:"늘 변화를 추구하는 이태리키친입니다.",link:"https://naver.me/GBlmLj08",isFavorite:!1},{number:4,category:"아시안",name:"호아빈 삼성점",distance:"15",description:"푸짐한 양에 국물이 일품인 쌀국수",link:"https://naver.me/FBDHGoUe",isFavorite:!1},{number:5,category:"기타",name:"도스타코스 선릉점",distance:"5",description:"멕시칸 캐주얼 그릴",link:"https://naver.me/F1MkvTwc",isFavorite:!1}];class C{constructor(){this.restaurantList=[],this.favoriteList=[],C.instance||(C.instance=this)}static getInstance(){return C.instance||(C.instance=new C),C.instance}initRestaurantList(){const t=E(g).length,n=E(g).length;this.restaurantList=t?E(g):x,this.favoriteList=n?E(v):[],m(g,this.restaurantList),m(v,this.favoriteList)}addNewRestaurant(t){const n=this.getNewRestaurant(t);try{return(t=>{if(b.test(t))throw new Error("이름에 특수문자는 입력할 수 없습니다.")})(e=n.name),(t=>{if(t.length<1||t.length>15)throw new Error("1 ~ 15자 사이의 이름을 입력해 주세요.")})(e),(t=>{if(E(g).find((n=>n.name===t)))throw new Error("이미 존재하는 음식점 이름입니다.")})(e),n.number=this.restaurantList.length,n.isFavorite=!1,this.updateRestaurantList([...this.restaurantList,n]),!0}catch(t){return alert(t.message),!1}var e}getNewRestaurant(t){const n=(t=>[...new FormData(t.target)])(t).map((([t,n])=>[t,String(n).trim()]));return Object.fromEntries(n)}updateRestaurantList(t){this.restaurantList=t,m(g,this.restaurantList)}updateFavoriteList(t){this.favoriteList=t,m(v,this.favoriteList)}}const B=C;var y=e(248),w={};w.styleTagTransform=u(),w.setAttributes=A(),w.insert=o().bind(null,"head"),w.domAPI=a(),w.insertStyleElement=l(),n()(y.Z,w),y.Z&&y.Z.locals&&y.Z.locals,e.p;const k=t=>document.querySelector(t);var T,L,j,Y=function(t,n,e,r){if("a"===e&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof n?t!==n||!r:!n.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?r:"a"===e?r.call(t):r?r.value:n.get(t)};L=new WeakMap,T=new WeakSet,j=function(){return`\n\t\t\t<h1 class="gnb__title text-title">${Y(this,L,"f").title}</h1>\n\t\t\t<button type="button" class="gnb__button" aria-label="음식점 추가">\n\t\t\t\t<img src="./add-button.png" alt="음식점 추가" />\n\t\t\t</button>\n\t\t`};var Z=e(922),_={};_.styleTagTransform=u(),_.setAttributes=A(),_.insert=o().bind(null,"head"),_.domAPI=a(),_.insertStyleElement=l(),n()(Z.Z,_),Z.Z&&Z.Z.locals&&Z.Z.locals;var S,$,W,M=function(t,n,e,r){if("a"===e&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof n?t!==n||!r:!n.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?r:"a"===e?r.call(t):r?r.value:n.get(t)};$=new WeakMap,S=new WeakSet,W=function(){return`\n\t\t\t<div class=${M(this,$,"f").class}>\n\t\t\t\t<div class="text-button-container">\n\t\t\t\t\t<button class="selected-text nav-button text-button text-button--primary" aria-label="all-restaurants">모든 음식점</button>\n\t\t\t\t\t<button class="nav-button text-button text-button--secondary" aria-label="favorite-restaurants">자주 가는 음식점</button>\n\t\t\t\t</div>\n\t\t\t\t<div class="bar-button-container">\n\t\t\t\t\t<button class="selected-bar nav-button bar-button bar-button--primary" aria-label="all-restaurants"/>\n\t\t\t\t\t<button class="nav-button bar-button bar-button--secondary" aria-label="favorite-restaurants"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`};var R=e(74),z={};z.styleTagTransform=u(),z.setAttributes=A(),z.insert=o().bind(null,"head"),z.domAPI=a(),z.insertStyleElement=l(),n()(R.Z,z),R.Z&&R.Z.locals&&R.Z.locals;var P,F,H,I=function(t,n,e,r){if("a"===e&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof n?t!==n||!r:!n.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?r:"a"===e?r.call(t):r?r.value:n.get(t)};F=new WeakMap,P=new WeakSet,H=function(){return`\n\t\t\t\t<label\n\t\t\t\t\tfor="${I(this,F,"f").id}"\n\t\t\t\t/>\n\t\t\t\t<select\n\t\t\t\t\tname="${I(this,F,"f").name}"\n\t\t\t\t\tid="${I(this,F,"f").id}"\n\t\t\t\t\tclass="${I(this,F,"f").class}">\n\t\t\t\t\t${I(this,F,"f").optionList.map((t=>`<option value="${t.value}">${t.text}</option>`)).join("")}\n\t\t\t\t</select>\n\t\t`};const N=class{constructor(t){P.add(this),F.set(this,{selector:"",id:"",name:"",class:"",optionList:[]}),function(t,n,e,r,a){if("m"===r)throw new TypeError("Private method is not writable");if("a"===r&&!a)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof n?t!==n||!a:!n.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");"a"===r?a.call(t,e):a?a.value=e:n.set(t,e)}(this,F,t,"f")}render(){k(I(this,F,"f").selector).insertAdjacentHTML("beforeend",I(this,P,"m",H).call(this)),this.show()}show(){k(I(this,F,"f").selector).classList.add("restaurant-filter-container--open")}hide(){k(I(this,F,"f").selector).classList.remove("restaurant-filter-container--open")}};var O=e(444),U={};U.styleTagTransform=u(),U.setAttributes=A(),U.insert=o().bind(null,"head"),U.domAPI=a(),U.insertStyleElement=l(),n()(O.Z,U),O.Z&&O.Z.locals&&O.Z.locals,e.p,e.p,e.p,e.p,e.p,e.p,e.p,e.p;const X={한식:"korean",중식:"chinese",일식:"japanese",양식:"western",아시안:"asian",기타:"etc"};var D,q,G,V=function(t,n,e,r){if("a"===e&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof n?t!==n||!r:!n.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?r:"a"===e?r.call(t):r?r.value:n.get(t)};q=new WeakMap,D=new WeakSet,G=function({number:t,category:n,name:e,distance:r,description:a,isFavorite:i}){return`\n\t\t\t<li class="restaurant">\n    \t\t<div class="restaurant__category">\n    \t\t\t<img\n    \t\t\t\tsrc="./category-${X[n]}.png"\n    \t\t\t\talt="${n}"\n    \t\t\t\tclass="category-icon"\n    \t\t\t/>\n    \t\t</div>\n    \t\t<div class="restaurant__info">\n\t\t\t\t\t<div class="info-top">\n\t\t\t\t\t\t<div>\n    \t\t\t\t\t<h3 class="restaurant__name text-subtitle">\n\t\t\t\t\t\t\t\t${e}\n\t\t\t\t\t\t\t</h3>\n    \t\t\t\t\t<span class="restaurant__distance text-body">\n\t\t\t\t\t\t\t\t캠퍼스부터 ${r}분 내\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="favorite-icon-container">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc="./favorite-icon-lined.png"\n\t\t\t\t\t\t\t\talt="즐겨찾기"\n\t\t\t\t\t\t\t\tclass="favorite-icon-lined favorite-icon-lined-${t}"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc="./favorite-icon-filled.png"\n\t\t\t\t\t\t\t\talt="즐겨찾기"\n\t\t\t\t\t\t\t\tclass="favorite-icon-filled favorite-icon-filled-${t} ${i?"favorite-icon-filled--open":""}"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p class="restaurant__description text-body">\n\t\t\t\t\t${a}\n\t\t\t\t\t</p>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass="restaurant-info-open-button"\n\t\t\t\t\t\tname="${t}"\n\t\t\t\t\t\taria-label="open-restaurant-info"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n    \t</li>\n\t\t`};var Q=e(639),J={};J.styleTagTransform=u(),J.setAttributes=A(),J.insert=o().bind(null,"head"),J.domAPI=a(),J.insertStyleElement=l(),n()(Q.Z,J),Q.Z&&Q.Z.locals&&Q.Z.locals;var K,tt,nt,et=function(t,n,e,r){if("a"===e&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof n?t!==n||!r:!n.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?r:"a"===e?r.call(t):r?r.value:n.get(t)};tt=new WeakMap,K=new WeakSet,nt=function(){return`\n\t\t\t<div class="modal" id="${et(this,tt,"f").id}">\n\t\t\t\t<div class="${et(this,tt,"f").backdrop}"></div>\n\t\t\t\t<div class="${et(this,tt,"f").container}">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`};const rt=class{constructor(t){K.add(this),tt.set(this,{selector:"",id:"",backdrop:"",container:""}),function(t,n,e,r,a){if("m"===r)throw new TypeError("Private method is not writable");if("a"===r&&!a)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof n?t!==n||!a:!n.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");"a"===r?a.call(t,e):a?a.value=e:n.set(t,e)}(this,tt,t,"f")}render(){k(et(this,tt,"f").selector).insertAdjacentHTML("beforeend",et(this,K,"m",nt).call(this))}};var at=e(558),it={};it.styleTagTransform=u(),it.setAttributes=A(),it.insert=o().bind(null,"head"),it.domAPI=a(),it.insertStyleElement=l(),n()(at.Z,it),at.Z&&at.Z.locals&&at.Z.locals;const ot=[{value:"",text:"선택해 주세요"},{value:"한식",text:"한식"},{value:"중식",text:"중식"},{value:"일식",text:"일식"},{value:"양식",text:"양식"},{value:"아시안",text:"아시안"},{value:"기타",text:"기타"}],st=[{value:"",text:"선택해 주세요"},{value:"5",text:"5분 내"},{value:"10",text:"10분 내"},{value:"15",text:"15분 내"},{value:"20",text:"20분 내"},{value:"30",text:"30분 내"}];var At,ct,lt,dt=function(t,n,e,r){if("a"===e&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof n?t!==n||!r:!n.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?r:"a"===e?r.call(t):r?r.value:n.get(t)};ct=new WeakMap,At=new WeakSet,lt=function(){return`\n\t\t\t<h2 class="modal-title text-title">새로운 음식점</h2>\n\t\t\t<form id="new-restaurant-form">\n\t\t\t\t\x3c!-- 카테고리 --\x3e\n\t\t\t\t<div class="form-item form-item--required">\n\t\t\t\t\t<label for="category">카테고리</label>\n\t\t\t\t\t<select name="category" id="category" required>\n\t\t\t\t\t\t${ot.map((t=>`<option value="${t.value}">${t.text}</option>`)).join("")}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\n\t\t\t\t\x3c!-- 음식점 이름 --\x3e\n\t\t\t\t<div class="form-item form-item--required">\n\t\t\t\t\t<label for="name">이름</label>\n\t\t\t\t\t<input type="text" name="name" id="name" required />\n\t\t\t\t\t<span class="help-text text-caption">1~15자 사이의 이름을 입력해 주세요.</span>\n\t\t\t\t</div>\n\n\t\t\t\t\x3c!-- 거리 --\x3e\n\t\t\t\t<div class="form-item form-item--required">\n\t\t\t\t\t<label for="distance">거리(도보 이동 시간)</label>\n\t\t\t\t\t<select name="distance" id="distance" required>\n\t\t\t\t\t\t${st.map((t=>`<option value="${t.value}">${t.text}</option>`))}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\n\t\t\t\t\x3c!-- 설명 --\x3e\n\t\t\t\t<div class="form-item">\n\t\t\t\t\t<label for="description">설명</label>\n\t\t\t\t\t<textarea name="description" id="description" cols="30" rows="5"></textarea>\n\t\t\t\t\t<span class="help-text text-caption">메뉴 등 추가 정보를 입력해 주세요.</span>\n\t\t\t\t</div>\n\n\t\t\t\t\x3c!-- 링크 --\x3e\n\t\t\t\t<div class="form-item">\n\t\t\t\t\t<label for="link">참고 링크</label>\n\t\t\t\t\t<input type="url" name="link" id="link" placeholder="https://example.com" />\n\t\t\t\t\t<span class="help-text text-caption">매장 정보를 확인할 수 있는 링크를 https:// 형식으로 입력해 주세요.</span>\n\t\t\t\t</div>\n\n\t\t\t\t\x3c!-- 취소/추가 버튼 --\x3e\n\t\t\t\t<div class="button-container">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass="button button--secondary"\n\t\t\t\t\t\tid="add-cancel"\n\t\t\t\t\t\taria-label="cancel"\n\t\t\t\t\t>\n\t\t\t\t\t\t취소하기\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass="button button--primary"\n\t\t\t\t\t\taria-label="register"\n\t\t\t\t\t>\n\t\t\t\t\t\t추가하기\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t`};var ut=e(715),pt={};pt.styleTagTransform=u(),pt.setAttributes=A(),pt.insert=o().bind(null,"head"),pt.domAPI=a(),pt.insertStyleElement=l(),n()(ut.Z,pt),ut.Z&&ut.Z.locals&&ut.Z.locals;var ft,ht,mt,Et=function(t,n,e,r){if("a"===e&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof n?t!==n||!r:!n.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?r:"a"===e?r.call(t):r?r.value:n.get(t)};ht=new WeakMap,ft=new WeakSet,mt=function({number:t,category:n,name:e,distance:r,description:a,isFavorite:i,link:o}){return`\n\t\t\t\t<div class="head-info">\n\n\t\t\t\t\t\x3c!-- 카테고리, 음식점 이름, 거리 컨테이너 --\x3e\n\t\t\t\t\t<div class="head-left">\n\n\t\t\t\t\t\t<div class="restaurant__category">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc="./category-${X[n]}.png"\n\t\t\t\t\t\t\t\talt="${n}"\n\t\t\t\t\t\t\t\tclass="category-icon"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<h3 class="restaurant__name text-subtitle">\n\t\t\t\t\t\t\t${e}\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<span class="restaurant__distance text-body">\n\t\t\t\t\t\t\t캠퍼스부터 ${r}분 내\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t\x3c!-- 즐겨찾기 등록/해제 버튼 --\x3e\n\t\t\t\t\t<div class="favorite-icon-container">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc="./favorite-icon-lined.png"\n\t\t\t\t\t\talt="즐겨찾기"\n\t\t\t\t\t\tclass="favorite-icon-lined favorite-icon-lined-${t}"\n\t\t\t\t\t/>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc="./favorite-icon-filled.png"\n\t\t\t\t\t\talt="즐겨찾기"\n\t\t\t\t\t\tclass="favorite-icon-filled favorite-icon-filled-${t} ${i?"favorite-icon-filled--open":""}"\n\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t\x3c!-- 음식점 설명 --\x3e\n\t\t\t\t<p class="restaurant__description text-body">\n\t\t\t\t\t${a}\n\t\t\t\t</p>\n\n\t\t\t\t\x3c!-- 하이퍼링크 --\x3e\n\t\t\t\t<a class="restaurant-link"\n\t\t\t\t\thref="${o}"\n\t\t\t\t>\n\t\t\t\t${o}\n\t\t\t\t</a>\n\n\t\t\t\t\x3c!-- 삭제/닫기 버튼 --\x3e\n\t\t\t\t<div class="button-container-info-modal">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass="button button--secondary text-caption"\n\t\t\t\t\t\taria-label="delete"\n\t\t\t\t\t\tname="${t}"\n\t\t\t\t\t>\n\t\t\t\t\t\t삭제하기\n\t\t\t\t\t</button>\n\t\t\t\t\t<button class="button button--primary text-caption" aria-label="close">\n\t\t\t\t\t\t닫기\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t`};const bt="restaurant-SELECT",gt={CATEGORY:[{value:"전체",text:"전체"},{value:"한식",text:"한식"},{value:"중식",text:"중식"},{value:"일식",text:"일식"},{value:"양식",text:"양식"},{value:"아시안",text:"아시안"},{value:"기타",text:"기타"}],SORTING:[{value:"name",text:"이름순"},{value:"distance",text:"거리순"}]},vt={header:new class{constructor(t){T.add(this),L.set(this,{selector:"",title:""}),function(t,n,e,r,a){if("m"===r)throw new TypeError("Private method is not writable");if("a"===r&&!a)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof n?t!==n||!a:!n.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");"a"===r?a.call(t,e):a?a.value=e:n.set(t,e)}(this,L,t,"f")}render(){k(Y(this,L,"f").selector).insertAdjacentHTML("beforeend",Y(this,T,"m",j).call(this))}}({selector:"header",title:"점심 뭐 먹지"}),navBar:new class{constructor(t){S.add(this),$.set(this,{selector:"",class:""}),function(t,n,e,r,a){if("m"===r)throw new TypeError("Private method is not writable");if("a"===r&&!a)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof n?t!==n||!a:!n.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");"a"===r?a.call(t,e):a?a.value=e:n.set(t,e)}(this,$,t,"f")}render(){k(M(this,$,"f").selector).insertAdjacentHTML("beforeend",M(this,S,"m",W).call(this))}}({selector:"nav",class:"nav-container"}),categoryFilter:new N({selector:".restaurant-filter-container",id:"category-filter",name:"category",class:bt,optionList:gt.CATEGORY}),sortingFilter:new N({selector:".restaurant-filter-container",id:"sorting-filter",name:"sorting",class:bt,optionList:gt.SORTING}),restaurantList:new class{constructor(t){D.add(this),q.set(this,{listRenderSelector:"",additionRenderSelector:""}),function(t,n,e,r,a){if("m"===r)throw new TypeError("Private method is not writable");if("a"===r&&!a)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof n?t!==n||!a:!n.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");"a"===r?a.call(t,e):a?a.value=e:n.set(t,e)}(this,q,t,"f")}render(t){const n=t.map((t=>V(this,D,"m",G).call(this,t))).join("");k(".restaurant-list").innerHTML=n}renderAdditionRestaurant(t){k(V(this,q,"f").additionRenderSelector).insertAdjacentHTML("beforeend",V(this,D,"m",G).call(this,t))}}({listRenderSelector:".restaurant-list",additionRenderSelector:".restaurant"}),restaurantAddModal:new rt({selector:".restaurant-add-modal",id:"restaurant-add-modal",backdrop:"restaurant-add-backdrop",container:"restaurant-add-container"}),restaurantAddContainer:new class{constructor(t){At.add(this),ct.set(this,{selector:""}),function(t,n,e,r,a){if("m"===r)throw new TypeError("Private method is not writable");if("a"===r&&!a)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof n?t!==n||!a:!n.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");"a"===r?a.call(t,e):a?a.value=e:n.set(t,e)}(this,ct,t,"f")}render(){k(dt(this,ct,"f").selector).innerHTML=dt(this,At,"m",lt).call(this)}}({selector:".restaurant-add-container"}),restaurantBottomSheet:new rt({selector:".restaurant-bottom-sheet",id:"restaurant-bottom-sheet",backdrop:"restaurant-bottom-sheet-backdrop",container:"restaurant-bottom-sheet-container"}),restaurantBottomSheetContainer:new class{constructor(t){ft.add(this),ht.set(this,{selector:""}),function(t,n,e,r,a){if("m"===r)throw new TypeError("Private method is not writable");if("a"===r&&!a)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof n?t!==n||!a:!n.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");"a"===r?a.call(t,e):a?a.value=e:n.set(t,e)}(this,ht,t,"f")}render(t){k(Et(this,ht,"f").selector).innerHTML=Et(this,ft,"m",mt).call(this,t)}}({selector:".restaurant-bottom-sheet-container"}),initRender(){this.header.render(),this.navBar.render(),this.categoryFilter.render(),this.sortingFilter.render(),this.restaurantList.render(E(g)),this.restaurantAddModal.render(),this.restaurantAddContainer.render(),this.restaurantBottomSheet.render()}},xt=t=>{const n=k(t);n instanceof HTMLFormElement&&n.reset()},Ct=t=>{const n=k(t);n instanceof HTMLFormElement&&n.scrollTo(0,0)},Bt=t=>{k(t)?.classList.remove("modal--open")},yt=t=>{k(t)?.classList.add("modal--open")},wt="selected-text",kt="selected-bar",Tt=t=>{const n={$primaryText:k(".text-button--primary"),$primaryBar:k(".bar-button--primary"),$secondaryText:k(".text-button--secondary"),$secondaryBar:k(".bar-button--secondary")};return t?(n.$primaryText?.classList.add(wt),n.$primaryBar?.classList.add(kt),n.$secondaryText?.classList.remove(wt),n.$secondaryBar?.classList.remove(kt)):(n.$secondaryText?.classList.add(wt),n.$secondaryBar?.classList.add(kt),n.$primaryText?.classList.remove(wt),n.$primaryBar?.classList.remove(kt)),t},Lt={sortByOption(t){const n=E(g);return"name"===t?jt(n):"distance"===t?Yt(n):"전체"!==t?Zt(n,t):n}},jt=t=>t.sort(((t,n)=>t.name>n.name?1:t.name<n.name?-1:0)),Yt=t=>t.sort(((t,n)=>Number(t.distance)-Number(n.distance))),Zt=(t,n)=>t.filter((t=>t.category===n)),_t=Lt,St=t=>t.every((t=>(t=>"number"in t&&"category"in t&&"name"in t&&"distance"in t&&"description"in t&&"link"in t&&"isFavorite"in t)(t))),$t=(t,n)=>{const e=E(g),r=E(v);if(St(e)&&St(r)){const a=parseInt(t.className.split(" ")[1].split("-")[3],10);Wt(a)?Mt({restaurantList:e,favoriteList:r},a):Rt({restaurantList:e,favoriteList:r},a),n.updateRestaurantList(e),n.updateFavoriteList(r)}},Wt=t=>{var n;(n=`.favorite-icon-filled-${t}`,document.querySelectorAll(n))?.forEach((t=>t.classList.toggle("favorite-icon-filled--open")));const e=k(`.favorite-icon-filled-${t}`)?.classList.contains("favorite-icon-filled--open");return e},Mt=({restaurantList:t,favoriteList:n},e)=>{const r=t[e];((t,n)=>t.find((t=>t.name===n.name)))(n,r)||(n.push(r),t[e].isFavorite=!0,n[n.length-1].isFavorite=!0)},Rt=({restaurantList:t,favoriteList:n},e)=>{t[e].isFavorite=!1;const r=n.findIndex((n=>n.name===t[e].name));n.splice(r,1)},zt=()=>{Bt("#restaurant-add-modal"),xt("#new-restaurant-form"),Ct(".restaurant-add-container")},Pt=(t,n,e)=>{k(t)?.addEventListener(n,e)},Ft=({restaurantList:t,favoriteList:n},e,r)=>{const a=n.findIndex((n=>n.name===t[e].name));n.splice(a,1),n.forEach(((t,n)=>t.number=n)),r.updateFavoriteList(n)},Ht=(t,n,e)=>{t.splice(n,1),t.forEach(((t,n)=>t.number=n)),e.updateRestaurantList(t)},It={initEventListeners(t){this.controlHeader(),this.controlNavigation(),this.controlFilter(),this.controlRestaurantList(t),this.controlRestaurantAddContainer(t)},controlHeader(){Pt("header","click",(t=>{const n=t.target;n instanceof HTMLHeadingElement&&window.location.reload(),n instanceof HTMLImageElement&&(yt("#restaurant-add-modal"),xt("#new-restaurant-form"),Ct(".restaurant-add-container"))}))},controlNavigation(){Pt(".nav-container","click",(t=>{const n=t.target;if(n instanceof HTMLButtonElement){const t=(t=>(t=>"all-restaurants"===t.ariaLabel?Tt(!0):Tt(!1))(t)?(vt.categoryFilter.show(),vt.sortingFilter.show(),E(g)):(vt.categoryFilter.hide(),vt.sortingFilter.hide(),E(v)))(n);vt.restaurantList.render(t)}}))},controlFilter(){Pt(".restaurant-filter-container","change",(t=>{const n=t.target;if(n instanceof HTMLSelectElement){const t=(t=>{const n=t.value;return _t.sortByOption(n)})(n);vt.restaurantList.render(t)}}))},controlRestaurantList(t){Pt(".restaurant-list-container","click",(n=>{const e=n.target;if(e instanceof HTMLImageElement&&"즐겨찾기"===e.alt&&$t(e,t),e instanceof HTMLButtonElement){const n=(t=>E(g)[parseInt(t.name,10)])(e);vt.restaurantBottomSheetContainer.render(n),this.controlRestaurantBottomSheet(t)}}))},controlRestaurantAddContainer(t){Pt("#add-cancel","click",(t=>{const n=t.target;t.preventDefault(),n instanceof HTMLButtonElement&&"cancel"===n.ariaLabel&&zt()})),Pt(".restaurant-add-backdrop","click",(t=>{const n=t.target;n instanceof HTMLDivElement&&"restaurant-add-backdrop"===n.className&&zt()})),Pt("#new-restaurant-form","submit",(n=>{const e=n.target;n.preventDefault(),e instanceof HTMLFormElement&&t.addNewRestaurant(n)&&(zt(),vt.restaurantList.render(E(g)))}))},controlRestaurantBottomSheet(t){yt("#restaurant-bottom-sheet"),Pt(".restaurant-bottom-sheet-backdrop","click",(()=>{Bt("#restaurant-bottom-sheet")})),Pt(".head-info","click",(n=>{const e=n.target;e instanceof HTMLImageElement&&"즐겨찾기"===e.alt&&$t(e,t)})),Pt(".button-container-info-modal","click",(n=>{const e=n.target;e instanceof HTMLButtonElement&&Bt("#restaurant-bottom-sheet"),e instanceof HTMLButtonElement&&"delete"===e.ariaLabel&&(((t,n)=>{const e=E(g),r=E(v);St(e)&&St(r)&&((t,{restaurantList:n,favoriteList:e},r)=>{const a=parseInt(t.name,10);!0===n[a].isFavorite&&Ft({restaurantList:n,favoriteList:e},a,r),Ht(n,a,r)})(t,{restaurantList:e,favoriteList:r},n)})(e,t),vt.restaurantList.render(E(g)))}))}};({RestaurantManager:B.getInstance(),init(){this.RestaurantManager.initRestaurantList(),vt.initRender(),It.initEventListeners(this.RestaurantManager)}}).init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxnQkFBaUJtSSxLQUMzRCxNQUFNN04sRUFBUThOLFNBQVN2TixFQUFPMkUsS0FBTSxLQUNLLElBQXJDTyxFQUFlekYsR0FBT3NGLFlBQ3RCNEosR0FBbUIsQ0FBRXpKLGlCQUFnQkMsZ0JBQWdCMUYsRUFBTzZOLEdBRWhFdUIsR0FBcUIzSixFQUFnQnpGLEVBQU82TixFQUFrQixFQVIxRDRDLENBQVdsUSxFQUFRLENBQUVrRixpQkFBZ0JDLGdCQUFnQm1JLEVBQ3pELEVDa0dZNkMsQ0FBa0JuUSxFQUFRc04sR0FDMUJoRCxHQUFXcEYsZUFBZTBELE9BQU8xRSxFQUFzQkssSUFDM0QsR0FFUixJSTFHUSxDQUNSK0ksa0JBQW1CLGdCQUNuQjhDLE9BQ0loVSxLQUFLa1Isa0JBQWtCaEkscUJBQ3ZCZ0YsR0FBV2dCLGFBQ1h3RCxHQUFjQyxtQkFBbUIzUyxLQUFLa1Isa0JBQzFDLElBRUE4QyxNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9jc3MvZmlsdGVyLmNzcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL2Nzcy9oZWFkZXIuY3NzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vY3NzL21vZGFsLmNzcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL2Nzcy9uYXYuY3NzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vY3NzL3Jlc3RhdXJhbnQtYWRkLWNvbnRhaW5lci5jc3MiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9jc3MvcmVzdGF1cmFudC1ib3R0b20tc2hlZXQuY3NzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vY3NzL3Jlc3RhdXJhbnQtbGlzdC5jc3MiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9jc3Mvc3R5bGUuY3NzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9jc3Mvc3R5bGUuY3NzP2RhMWYiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvdXRpbHMvbG9jYWxTdG9yYWdlLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbnN0YW50cy92YWx1ZXMudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29uc3RhbnRzL3JlZ2V4cC50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb25zdGFudHMvbG9jYWxTdG9yYWdlLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbnN0YW50cy9pbml0aWFsUmVzdGF1cmFudExpc3QudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvZG9tYWlucy9yZXN0YXVyYW50TWFuYWdlci50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy92YWxpZGF0b3IvZXJyb3JDaGVja2VyLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbnN0YW50cy9lcnJvci50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy92YWxpZGF0b3IvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvdXRpbHMvZm9ybS50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL2Nzcy9oZWFkZXIuY3NzP2VlNDMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvYXNzZXRzL2FkZC1idXR0b24ucG5nIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL3V0aWxzL3NlbGVjdG9yLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvaGVhZGVyLmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vY3NzL25hdi5jc3M/NWI5NCIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL25hdmlnYXRpb24uanMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9jc3MvZmlsdGVyLmNzcz80ZjA2Iiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvc2VsZWN0LmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vY3NzL3Jlc3RhdXJhbnQtbGlzdC5jc3M/ZGRkMiIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9hc3NldHMvY2F0ZWdvcnkta29yZWFuLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9hc3NldHMvY2F0ZWdvcnktY2hpbmVzZS5wbmciLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvYXNzZXRzL2NhdGVnb3J5LWphcGFuZXNlLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9hc3NldHMvY2F0ZWdvcnktd2VzdGVybi5wbmciLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvYXNzZXRzL2NhdGVnb3J5LWFzaWFuLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9hc3NldHMvY2F0ZWdvcnktZXRjLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9hc3NldHMvZmF2b3JpdGUtaWNvbi1maWxsZWQucG5nIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Fzc2V0cy9mYXZvcml0ZS1pY29uLWxpbmVkLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb25zdGFudHMvYXNzZXQudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy9yZXN0YXVyYW50TGlzdC5qcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL2Nzcy9tb2RhbC5jc3M/ZTFjNyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL21vZGFsLmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vY3NzL3Jlc3RhdXJhbnQtYWRkLWNvbnRhaW5lci5jc3M/YmJlMyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb25zdGFudHMvcmVzdGF1cmFudEFkZENvbnRhaW5lci50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL3Jlc3RhdXJhbnRBZGRDb250YWluZXIuanMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9jc3MvcmVzdGF1cmFudC1ib3R0b20tc2hlZXQuY3NzP2M1YzQiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy9yZXN0YXVyYW50Qm90dG9tU2hlZXQuanMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29uc3RhbnRzL2ZpbHRlci50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL2NvbXBvbmVudHMudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvaGFuZGxlVWkvZm9ybS50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9oYW5kbGVVaS9tb2RhbC50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb25zdGFudHMvbmF2aWdhdGlvbi50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9oYW5kbGVVaS9uYXZpZ2F0aW9uLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbnN0YW50cy9zZWxlY3Rvci50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9kb21haW5zL2ZpbHRlci50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy90eXBlL2N1c3RvbVR5cGVHdWFyZHMudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvaGFuZGxlVWkvZmF2b3JpdGVJY29uLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2hhbmRsZVVpL3Jlc3RhdXJhbnRBZGRDb250YWluZXIudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvdXRpbHMvZXZlbnRMaXN0ZW5lci50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9oYW5kbGVVaS9ib3R0b21TaGVldC50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9oYW5kbGVVaS9ldmVudExpc3RlbmVyLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2hhbmRsZVVpL2hlYWRlci50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9oYW5kbGVVaS9maWx0ZXIudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvaGFuZGxlVWkvcmVzdGF1cmFudEl0ZW0udHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIucmVzdGF1cmFudC1maWx0ZXItY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5yZXN0YXVyYW50LWZpbHRlci1jb250YWluZXItLW9wZW4ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG5cXG4gIHBhZGRpbmc6IDAgMTZweDtcXG4gIG1hcmdpbi10b3A6IDI0cHg7XFxufVxcblxcbi5yZXN0YXVyYW50LWZpbHRlci1jb250YWluZXIgc2VsZWN0IHtcXG4gIGhlaWdodDogNDRweDtcXG4gIG1pbi13aWR0aDogMTI1cHg7XFxuXFxuICBib3JkZXI6IDFweCBzb2xpZCAjZDBkNWRkO1xcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxuXFxuICBmb250LXNpemU6IDE2cHg7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi5yZXN0YXVyYW50LWZpbHRlciB7XFxuICBwYWRkaW5nOiA4cHg7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL2Nzcy9maWx0ZXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsYUFBYTtFQUNiLDhCQUE4Qjs7RUFFOUIsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7O0VBRWhCLHlCQUF5QjtFQUN6QixrQkFBa0I7RUFDbEIsdUJBQXVCOztFQUV2QixlQUFlO0VBQ2Ysa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsWUFBWTtBQUNkXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5yZXN0YXVyYW50LWZpbHRlci1jb250YWluZXIge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLnJlc3RhdXJhbnQtZmlsdGVyLWNvbnRhaW5lci0tb3BlbiB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcblxcbiAgcGFkZGluZzogMCAxNnB4O1xcbiAgbWFyZ2luLXRvcDogMjRweDtcXG59XFxuXFxuLnJlc3RhdXJhbnQtZmlsdGVyLWNvbnRhaW5lciBzZWxlY3Qge1xcbiAgaGVpZ2h0OiA0NHB4O1xcbiAgbWluLXdpZHRoOiAxMjVweDtcXG5cXG4gIGJvcmRlcjogMXB4IHNvbGlkICNkMGQ1ZGQ7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG5cXG4gIGZvbnQtc2l6ZTogMTZweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuLnJlc3RhdXJhbnQtZmlsdGVyIHtcXG4gIHBhZGRpbmc6IDhweDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmduYiB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGhlaWdodDogNjRweDtcXG5cXG4gIHBhZGRpbmc6IDAgMTZweDtcXG5cXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcbn1cXG5cXG4uZ25iX190aXRsZSB7XFxuICBjb2xvcjogI2ZjZmNmZDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmduYl9fYnV0dG9uIHtcXG4gIGhlaWdodDogNDBweDtcXG5cXG4gIGJvcmRlcjogbm9uZTtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcblxcbiAgZm9udC1zaXplOiAyNHB4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uZ25iX19idXR0b24gaW1nIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgd2lkdGg6IDQwcHg7XFxuICBoZWlnaHQ6IDQwcHg7XFxuICBvYmplY3QtZml0OiBjb250YWluO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9jc3MvaGVhZGVyLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsbUJBQW1CO0VBQ25CLFlBQVk7O0VBRVosZUFBZTs7RUFFZixzQ0FBc0M7QUFDeEM7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFlBQVk7O0VBRVosWUFBWTtFQUNaLGtCQUFrQjtFQUNsQix1QkFBdUI7O0VBRXZCLGVBQWU7RUFDZixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsY0FBYztFQUNkLFdBQVc7RUFDWCxZQUFZO0VBQ1osbUJBQW1CO0FBQ3JCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5nbmIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBoZWlnaHQ6IDY0cHg7XFxuXFxuICBwYWRkaW5nOiAwIDE2cHg7XFxuXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcXG59XFxuXFxuLmduYl9fdGl0bGUge1xcbiAgY29sb3I6ICNmY2ZjZmQ7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5nbmJfX2J1dHRvbiB7XFxuICBoZWlnaHQ6IDQwcHg7XFxuXFxuICBib3JkZXI6IG5vbmU7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG5cXG4gIGZvbnQtc2l6ZTogMjRweDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmduYl9fYnV0dG9uIGltZyB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHdpZHRoOiA0MHB4O1xcbiAgaGVpZ2h0OiA0MHB4O1xcbiAgb2JqZWN0LWZpdDogY29udGFpbjtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLm1vZGFsIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5tb2RhbC0tb3BlbiB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIGhlaWdodDogMTAwJTtcXG59XFxuXFxuLm1vZGFsLWJhY2tkcm9wIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHRvcDogMDtcXG4gIHJpZ2h0OiAwO1xcbiAgYm90dG9tOiAwO1xcbiAgbGVmdDogMDtcXG4gIGhlaWdodDogMTAwJTtcXG5cXG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4zNSk7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL2Nzcy9tb2RhbC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsWUFBWTtBQUNkOztBQUVBO0VBQ0UsZUFBZTtFQUNmLE1BQU07RUFDTixRQUFRO0VBQ1IsU0FBUztFQUNULE9BQU87RUFDUCxZQUFZOztFQUVaLCtCQUErQjtBQUNqQ1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIubW9kYWwge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLm1vZGFsLS1vcGVuIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbn1cXG5cXG4ubW9kYWwtYmFja2Ryb3Age1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgdG9wOiAwO1xcbiAgcmlnaHQ6IDA7XFxuICBib3R0b206IDA7XFxuICBsZWZ0OiAwO1xcbiAgaGVpZ2h0OiAxMDAlO1xcblxcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjM1KTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwibmF2IHtcXG4gIGhlaWdodDogNjRweDtcXG59XFxuXFxuLm5hdi1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLnRleHQtYnV0dG9uLWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogZW5kO1xcbiAgaGVpZ2h0OiA5MCU7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLmJhci1idXR0b24tY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBlbmQ7XFxuICBoZWlnaHQ6IDEwJTtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4ubmF2LWJ1dHRvbiB7XFxuICB3aWR0aDogNDclO1xcblxcbiAgYm9yZGVyOiBub25lO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4udGV4dC1idXR0b24ge1xcbiAgaGVpZ2h0OiAzMnB4O1xcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxuXFxuICBmb250LXNpemU6IDE2cHg7XFxuICBmb250LXdlaWdodDogNjAwO1xcbiAgY29sb3I6IHZhcigtLWdyZXktMzAwKTtcXG59XFxuXFxuLmJhci1idXR0b24ge1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tZ3JleS0yMDApO1xcbn1cXG5cXG4uc2VsZWN0ZWQtdGV4dCB7XFxuICBjb2xvcjogdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxufVxcblxcbi5zZWxlY3RlZC1iYXIge1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL2Nzcy9uYXYuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0Qix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsV0FBVztBQUNiOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixnQkFBZ0I7RUFDaEIsV0FBVztFQUNYLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFVBQVU7O0VBRVYsWUFBWTtFQUNaLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osdUJBQXVCOztFQUV2QixlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGlDQUFpQztBQUNuQzs7QUFFQTtFQUNFLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLHNDQUFzQztBQUN4Q1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCJuYXYge1xcbiAgaGVpZ2h0OiA2NHB4O1xcbn1cXG5cXG4ubmF2LWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4udGV4dC1idXR0b24tY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBlbmQ7XFxuICBoZWlnaHQ6IDkwJTtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4uYmFyLWJ1dHRvbi1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGVuZDtcXG4gIGhlaWdodDogMTAlO1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5uYXYtYnV0dG9uIHtcXG4gIHdpZHRoOiA0NyU7XFxuXFxuICBib3JkZXI6IG5vbmU7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi50ZXh0LWJ1dHRvbiB7XFxuICBoZWlnaHQ6IDMycHg7XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG5cXG4gIGZvbnQtc2l6ZTogMTZweDtcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICBjb2xvcjogdmFyKC0tZ3JleS0zMDApO1xcbn1cXG5cXG4uYmFyLWJ1dHRvbiB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ncmV5LTIwMCk7XFxufVxcblxcbi5zZWxlY3RlZC10ZXh0IHtcXG4gIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcXG59XFxuXFxuLnNlbGVjdGVkLWJhciB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnJlc3RhdXJhbnQtYWRkLWJhY2tkcm9wIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHotaW5kZXg6IDI7XFxuICB0b3A6IDA7XFxuICByaWdodDogMDtcXG4gIGJvdHRvbTogMDtcXG4gIGxlZnQ6IDA7XFxuICBoZWlnaHQ6IDEwMCU7XFxuXFxuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMzUpO1xcbn1cXG5cXG4ucmVzdGF1cmFudC1hZGQtY29udGFpbmVyIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHotaW5kZXg6IDI7XFxuICBib3R0b206IDA7XFxuICBoZWlnaHQ6IDkwJTtcXG4gIHdpZHRoOiAxMDAlO1xcblxcbiAgcGFkZGluZzogMzJweCAxNnB4O1xcblxcbiAgb3ZlcmZsb3cteTogYXV0bztcXG4gIGJvcmRlci1yYWRpdXM6IDhweCA4cHggMHB4IDBweDtcXG4gIGJhY2tncm91bmQ6IHZhcigtLWdyZXktMTAwKTtcXG59XFxuXFxuLm1vZGFsLXRpdGxlIHtcXG4gIG1hcmdpbi1ib3R0b206IDM2cHg7XFxufVxcblxcbi5mb3JtLWl0ZW0ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuXFxuICBtYXJnaW4tYm90dG9tOiAzNnB4O1xcbn1cXG5cXG4uZm9ybS1pdGVtIGxhYmVsIHtcXG4gIGNvbG9yOiB2YXIoLS1ncmV5LTQwMCk7XFxuICBmb250LXNpemU6IDE0cHg7XFxufVxcblxcbi5mb3JtLWl0ZW0tLXJlcXVpcmVkIGxhYmVsOjphZnRlciB7XFxuICBwYWRkaW5nLWxlZnQ6IDRweDtcXG5cXG4gIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcXG4gIGNvbnRlbnQ6ICcqJztcXG59XFxuXFxuLmZvcm0taXRlbSAuaGVscC10ZXh0IHtcXG4gIGNvbG9yOiB2YXIoLS1ncmV5LTMwMCk7XFxufVxcblxcbi5mb3JtLWl0ZW0gaW5wdXQsXFxuLmZvcm0taXRlbSB0ZXh0YXJlYSxcXG4uZm9ybS1pdGVtIHNlbGVjdCB7XFxuICBwYWRkaW5nOiA4cHg7XFxuICBtYXJnaW46IDZweCAwO1xcblxcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tZ3JleS0yMDApO1xcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xcblxcbiAgZm9udC1zaXplOiAxNnB4O1xcbn1cXG5cXG4uZm9ybS1pdGVtIHRleHRhcmVhIHtcXG4gIHJlc2l6ZTogbm9uZTtcXG59XFxuXFxuLmZvcm0taXRlbSBzZWxlY3Qge1xcbiAgaGVpZ2h0OiA0NHB4O1xcblxcbiAgcGFkZGluZzogOHB4O1xcblxcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tZ3JleS0yMDApO1xcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xcblxcbiAgY29sb3I6IHZhcigtLWdyZXktMzAwKTtcXG59XFxuXFxuaW5wdXRbbmFtZT0nbmFtZSddLFxcbmlucHV0W25hbWU9J2xpbmsnXSB7XFxuICBoZWlnaHQ6IDQ0cHg7XFxufVxcblxcbi5idXR0b24tY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbi5idXR0b24ge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDQ0cHg7XFxuXFxuICBtYXJnaW4tcmlnaHQ6IDE2cHg7XFxuXFxuICBib3JkZXI6IG5vbmU7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuXFxuICBmb250LXdlaWdodDogNjAwO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uYnV0dG9uOmxhc3QtY2hpbGQge1xcbiAgbWFyZ2luLXJpZ2h0OiAwO1xcbn1cXG5cXG4uYnV0dG9uLS1zZWNvbmRhcnkge1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tZ3JleS0zMDApO1xcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxuXFxuICBjb2xvcjogdmFyKC0tZ3JleS0zMDApO1xcbn1cXG5cXG4uYnV0dG9uLS1wcmltYXJ5IHtcXG4gIGJhY2tncm91bmQ6IHZhcigtLXByaW1hcnktY29sb3IpO1xcblxcbiAgY29sb3I6IHZhcigtLWdyZXktMTAwKTtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vY3NzL3Jlc3RhdXJhbnQtYWRkLWNvbnRhaW5lci5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxlQUFlO0VBQ2YsVUFBVTtFQUNWLE1BQU07RUFDTixRQUFRO0VBQ1IsU0FBUztFQUNULE9BQU87RUFDUCxZQUFZOztFQUVaLCtCQUErQjtBQUNqQzs7QUFFQTtFQUNFLGVBQWU7RUFDZixVQUFVO0VBQ1YsU0FBUztFQUNULFdBQVc7RUFDWCxXQUFXOztFQUVYLGtCQUFrQjs7RUFFbEIsZ0JBQWdCO0VBQ2hCLDhCQUE4QjtFQUM5QiwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCOztFQUV0QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxzQkFBc0I7RUFDdEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGlCQUFpQjs7RUFFakIsMkJBQTJCO0VBQzNCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHNCQUFzQjtBQUN4Qjs7QUFFQTs7O0VBR0UsWUFBWTtFQUNaLGFBQWE7O0VBRWIsaUNBQWlDO0VBQ2pDLGtCQUFrQjs7RUFFbEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFlBQVk7O0VBRVosWUFBWTs7RUFFWixpQ0FBaUM7RUFDakMsa0JBQWtCOztFQUVsQixzQkFBc0I7QUFDeEI7O0FBRUE7O0VBRUUsWUFBWTtBQUNkOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7O0VBRVosa0JBQWtCOztFQUVsQixZQUFZO0VBQ1osa0JBQWtCOztFQUVsQixnQkFBZ0I7RUFDaEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxpQ0FBaUM7RUFDakMsdUJBQXVCOztFQUV2QixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxnQ0FBZ0M7O0VBRWhDLHNCQUFzQjtBQUN4QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIucmVzdGF1cmFudC1hZGQtYmFja2Ryb3Age1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgei1pbmRleDogMjtcXG4gIHRvcDogMDtcXG4gIHJpZ2h0OiAwO1xcbiAgYm90dG9tOiAwO1xcbiAgbGVmdDogMDtcXG4gIGhlaWdodDogMTAwJTtcXG5cXG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4zNSk7XFxufVxcblxcbi5yZXN0YXVyYW50LWFkZC1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgei1pbmRleDogMjtcXG4gIGJvdHRvbTogMDtcXG4gIGhlaWdodDogOTAlO1xcbiAgd2lkdGg6IDEwMCU7XFxuXFxuICBwYWRkaW5nOiAzMnB4IDE2cHg7XFxuXFxuICBvdmVyZmxvdy15OiBhdXRvO1xcbiAgYm9yZGVyLXJhZGl1czogOHB4IDhweCAwcHggMHB4O1xcbiAgYmFja2dyb3VuZDogdmFyKC0tZ3JleS0xMDApO1xcbn1cXG5cXG4ubW9kYWwtdGl0bGUge1xcbiAgbWFyZ2luLWJvdHRvbTogMzZweDtcXG59XFxuXFxuLmZvcm0taXRlbSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG5cXG4gIG1hcmdpbi1ib3R0b206IDM2cHg7XFxufVxcblxcbi5mb3JtLWl0ZW0gbGFiZWwge1xcbiAgY29sb3I6IHZhcigtLWdyZXktNDAwKTtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG59XFxuXFxuLmZvcm0taXRlbS0tcmVxdWlyZWQgbGFiZWw6OmFmdGVyIHtcXG4gIHBhZGRpbmctbGVmdDogNHB4O1xcblxcbiAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcbiAgY29udGVudDogJyonO1xcbn1cXG5cXG4uZm9ybS1pdGVtIC5oZWxwLXRleHQge1xcbiAgY29sb3I6IHZhcigtLWdyZXktMzAwKTtcXG59XFxuXFxuLmZvcm0taXRlbSBpbnB1dCxcXG4uZm9ybS1pdGVtIHRleHRhcmVhLFxcbi5mb3JtLWl0ZW0gc2VsZWN0IHtcXG4gIHBhZGRpbmc6IDhweDtcXG4gIG1hcmdpbjogNnB4IDA7XFxuXFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ncmV5LTIwMCk7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuXFxuICBmb250LXNpemU6IDE2cHg7XFxufVxcblxcbi5mb3JtLWl0ZW0gdGV4dGFyZWEge1xcbiAgcmVzaXplOiBub25lO1xcbn1cXG5cXG4uZm9ybS1pdGVtIHNlbGVjdCB7XFxuICBoZWlnaHQ6IDQ0cHg7XFxuXFxuICBwYWRkaW5nOiA4cHg7XFxuXFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ncmV5LTIwMCk7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuXFxuICBjb2xvcjogdmFyKC0tZ3JleS0zMDApO1xcbn1cXG5cXG5pbnB1dFtuYW1lPSduYW1lJ10sXFxuaW5wdXRbbmFtZT0nbGluayddIHtcXG4gIGhlaWdodDogNDRweDtcXG59XFxuXFxuLmJ1dHRvbi1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG59XFxuXFxuLmJ1dHRvbiB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogNDRweDtcXG5cXG4gIG1hcmdpbi1yaWdodDogMTZweDtcXG5cXG4gIGJvcmRlcjogbm9uZTtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG5cXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5idXR0b246bGFzdC1jaGlsZCB7XFxuICBtYXJnaW4tcmlnaHQ6IDA7XFxufVxcblxcbi5idXR0b24tLXNlY29uZGFyeSB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ncmV5LTMwMCk7XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG5cXG4gIGNvbG9yOiB2YXIoLS1ncmV5LTMwMCk7XFxufVxcblxcbi5idXR0b24tLXByaW1hcnkge1xcbiAgYmFja2dyb3VuZDogdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxuXFxuICBjb2xvcjogdmFyKC0tZ3JleS0xMDApO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIucmVzdGF1cmFudC1ib3R0b20tc2hlZXQtYmFja2Ryb3Age1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgei1pbmRleDogMjtcXG4gIHRvcDogMDtcXG4gIHJpZ2h0OiAwO1xcbiAgYm90dG9tOiAwO1xcbiAgbGVmdDogMDtcXG4gIGhlaWdodDogMTAwJTtcXG5cXG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4zNSk7XFxufVxcblxcbi5yZXN0YXVyYW50LWJvdHRvbS1zaGVldC1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgei1pbmRleDogMjtcXG4gIGJvdHRvbTogMDtcXG4gIGhlaWdodDogNzAlO1xcbiAgd2lkdGg6IDEwMCU7XFxuXFxuICBwYWRkaW5nOiAzMnB4IDE2cHg7XFxuXFxuICBvdmVyZmxvdy15OiBhdXRvO1xcbiAgYm9yZGVyLXJhZGl1czogOHB4IDhweCAwcHggMHB4O1xcbiAgYmFja2dyb3VuZDogdmFyKC0tZ3JleS0xMDApO1xcbn1cXG5cXG4uaGVhZC1pbmZvIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBhbGlnbi1pdGVtczogc3RhcnQ7XFxufVxcblxcbi5oZWFkLWluZm8gLnJlc3RhdXJhbnRfX25hbWUge1xcbiAgbWFyZ2luOiAxMHB4IDA7XFxufVxcblxcbi5yZXN0YXVyYW50LWJvdHRvbS1zaGVldC1jb250YWluZXIgLnJlc3RhdXJhbnRfX2Rlc2NyaXB0aW9uIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5cXG4ucmVzdGF1cmFudC1saW5rIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgbWFyZ2luOiAyMHB4IDA7XFxuXFxuICBjb2xvcjogYmxhY2s7XFxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcXG59XFxuXFxuLnJlc3RhdXJhbnQtbGluazp2aXNpdGVkIHtcXG4gIGNvbG9yOiBibGFjaztcXG59XFxuXFxuLmJ1dHRvbi1jb250YWluZXItaW5mby1tb2RhbCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1zZWxmOiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogZW5kO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9jc3MvcmVzdGF1cmFudC1ib3R0b20tc2hlZXQuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsZUFBZTtFQUNmLFVBQVU7RUFDVixNQUFNO0VBQ04sUUFBUTtFQUNSLFNBQVM7RUFDVCxPQUFPO0VBQ1AsWUFBWTs7RUFFWiwrQkFBK0I7QUFDakM7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsVUFBVTtFQUNWLFNBQVM7RUFDVCxXQUFXO0VBQ1gsV0FBVzs7RUFFWCxrQkFBa0I7O0VBRWxCLGdCQUFnQjtFQUNoQiw4QkFBOEI7RUFDOUIsMkJBQTJCO0FBQzdCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxjQUFjOztFQUVkLFlBQVk7RUFDWiwwQkFBMEI7QUFDNUI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isb0JBQW9CO0VBQ3BCLGdCQUFnQjtBQUNsQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIucmVzdGF1cmFudC1ib3R0b20tc2hlZXQtYmFja2Ryb3Age1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgei1pbmRleDogMjtcXG4gIHRvcDogMDtcXG4gIHJpZ2h0OiAwO1xcbiAgYm90dG9tOiAwO1xcbiAgbGVmdDogMDtcXG4gIGhlaWdodDogMTAwJTtcXG5cXG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4zNSk7XFxufVxcblxcbi5yZXN0YXVyYW50LWJvdHRvbS1zaGVldC1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgei1pbmRleDogMjtcXG4gIGJvdHRvbTogMDtcXG4gIGhlaWdodDogNzAlO1xcbiAgd2lkdGg6IDEwMCU7XFxuXFxuICBwYWRkaW5nOiAzMnB4IDE2cHg7XFxuXFxuICBvdmVyZmxvdy15OiBhdXRvO1xcbiAgYm9yZGVyLXJhZGl1czogOHB4IDhweCAwcHggMHB4O1xcbiAgYmFja2dyb3VuZDogdmFyKC0tZ3JleS0xMDApO1xcbn1cXG5cXG4uaGVhZC1pbmZvIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBhbGlnbi1pdGVtczogc3RhcnQ7XFxufVxcblxcbi5oZWFkLWluZm8gLnJlc3RhdXJhbnRfX25hbWUge1xcbiAgbWFyZ2luOiAxMHB4IDA7XFxufVxcblxcbi5yZXN0YXVyYW50LWJvdHRvbS1zaGVldC1jb250YWluZXIgLnJlc3RhdXJhbnRfX2Rlc2NyaXB0aW9uIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5cXG4ucmVzdGF1cmFudC1saW5rIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgbWFyZ2luOiAyMHB4IDA7XFxuXFxuICBjb2xvcjogYmxhY2s7XFxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcXG59XFxuXFxuLnJlc3RhdXJhbnQtbGluazp2aXNpdGVkIHtcXG4gIGNvbG9yOiBibGFjaztcXG59XFxuXFxuLmJ1dHRvbi1jb250YWluZXItaW5mby1tb2RhbCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1zZWxmOiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogZW5kO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIucmVzdGF1cmFudC1saXN0LWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHdpZHRoOiAxMDAlO1xcblxcbiAgcGFkZGluZzogMCAxNnB4O1xcbiAgbWFyZ2luOiAxNnB4IDA7XFxufVxcblxcbi5yZXN0YXVyYW50IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHdpZHRoOiAxMDAlO1xcblxcbiAgcGFkZGluZzogMTZweCA4cHg7XFxuXFxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U5ZWFlZDtcXG59XFxuXFxuLnJlc3RhdXJhbnRfX2NhdGVnb3J5IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICB3aWR0aDogNjRweDtcXG4gIGhlaWdodDogNjRweDtcXG4gIG1pbi13aWR0aDogNjRweDtcXG4gIG1pbi1oZWlnaHQ6IDY0cHg7XFxuXFxuICBtYXJnaW4tcmlnaHQ6IDE2cHg7XFxuXFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICBiYWNrZ3JvdW5kOiB2YXIoLS1saWdodGVuLWNvbG9yKTtcXG59XFxuXFxuLmNhdGVnb3J5LWljb24ge1xcbiAgd2lkdGg6IDM2cHg7XFxuICBoZWlnaHQ6IDM2cHg7XFxufVxcblxcbi5yZXN0YXVyYW50X19pbmZvIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5yZXN0YXVyYW50LWluZm8tb3Blbi1idXR0b24ge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgd2lkdGg6IDEwMCU7XFxuXFxuICBib3JkZXI6IG5vbmU7XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG59XFxuXFxuLmluZm8tdG9wIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLmZhdm9yaXRlLWljb24tY29udGFpbmVyIHtcXG4gIHotaW5kZXg6IDE7XFxuICBoZWlnaHQ6IDMycHg7XFxuICB3aWR0aDogMzJweDtcXG5cXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmZhdm9yaXRlLWljb24tbGluZWQge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbn1cXG5cXG4uZmF2b3JpdGUtaWNvbi1maWxsZWQge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmZhdm9yaXRlLWljb24tZmlsbGVkLS1vcGVuIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbn1cXG5cXG4ucmVzdGF1cmFudF9fbmFtZSB7XFxuICBtYXJnaW46IDA7XFxufVxcblxcbi5yZXN0YXVyYW50X19kaXN0YW5jZSB7XFxuICBjb2xvcjogdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxufVxcblxcbi5yZXN0YXVyYW50X19kZXNjcmlwdGlvbiB7XFxuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcXG5cXG4gIHBhZGRpbmctdG9wOiA4cHg7XFxuXFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XFxuICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7XFxuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9jc3MvcmVzdGF1cmFudC1saXN0LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLFdBQVc7O0VBRVgsZUFBZTtFQUNmLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLFlBQVk7RUFDWixXQUFXOztFQUVYLGlCQUFpQjs7RUFFakIsZ0NBQWdDO0FBQ2xDOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsV0FBVztFQUNYLFlBQVk7RUFDWixlQUFlO0VBQ2YsZ0JBQWdCOztFQUVoQixrQkFBa0I7O0VBRWxCLGtCQUFrQjtFQUNsQixnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtBQUNkOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QiwyQkFBMkI7RUFDM0Isa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFdBQVc7O0VBRVgsWUFBWTtFQUNaLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsV0FBVztBQUNiOztBQUVBO0VBQ0UsVUFBVTtFQUNWLFlBQVk7RUFDWixXQUFXOztFQUVYLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxjQUFjO0VBQ2Qsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsU0FBUztBQUNYOztBQUVBO0VBQ0UsMkJBQTJCO0FBQzdCOztBQUVBO0VBQ0Usb0JBQW9COztFQUVwQixnQkFBZ0I7O0VBRWhCLGdCQUFnQjtFQUNoQix1QkFBdUI7RUFDdkIscUJBQXFCO0VBQ3JCLDRCQUE0QjtBQUM5QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIucmVzdGF1cmFudC1saXN0LWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHdpZHRoOiAxMDAlO1xcblxcbiAgcGFkZGluZzogMCAxNnB4O1xcbiAgbWFyZ2luOiAxNnB4IDA7XFxufVxcblxcbi5yZXN0YXVyYW50IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHdpZHRoOiAxMDAlO1xcblxcbiAgcGFkZGluZzogMTZweCA4cHg7XFxuXFxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U5ZWFlZDtcXG59XFxuXFxuLnJlc3RhdXJhbnRfX2NhdGVnb3J5IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICB3aWR0aDogNjRweDtcXG4gIGhlaWdodDogNjRweDtcXG4gIG1pbi13aWR0aDogNjRweDtcXG4gIG1pbi1oZWlnaHQ6IDY0cHg7XFxuXFxuICBtYXJnaW4tcmlnaHQ6IDE2cHg7XFxuXFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICBiYWNrZ3JvdW5kOiB2YXIoLS1saWdodGVuLWNvbG9yKTtcXG59XFxuXFxuLmNhdGVnb3J5LWljb24ge1xcbiAgd2lkdGg6IDM2cHg7XFxuICBoZWlnaHQ6IDM2cHg7XFxufVxcblxcbi5yZXN0YXVyYW50X19pbmZvIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5yZXN0YXVyYW50LWluZm8tb3Blbi1idXR0b24ge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgd2lkdGg6IDEwMCU7XFxuXFxuICBib3JkZXI6IG5vbmU7XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG59XFxuXFxuLmluZm8tdG9wIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLmZhdm9yaXRlLWljb24tY29udGFpbmVyIHtcXG4gIHotaW5kZXg6IDE7XFxuICBoZWlnaHQ6IDMycHg7XFxuICB3aWR0aDogMzJweDtcXG5cXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmZhdm9yaXRlLWljb24tbGluZWQge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbn1cXG5cXG4uZmF2b3JpdGUtaWNvbi1maWxsZWQge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmZhdm9yaXRlLWljb24tZmlsbGVkLS1vcGVuIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbn1cXG5cXG4ucmVzdGF1cmFudF9fbmFtZSB7XFxuICBtYXJnaW46IDA7XFxufVxcblxcbi5yZXN0YXVyYW50X19kaXN0YW5jZSB7XFxuICBjb2xvcjogdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxufVxcblxcbi5yZXN0YXVyYW50X19kZXNjcmlwdGlvbiB7XFxuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcXG5cXG4gIHBhZGRpbmctdG9wOiA4cHg7XFxuXFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XFxuICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7XFxuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIqIHtcXG4gIHBhZGRpbmc6IDA7XFxuICBtYXJnaW46IDA7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG51bCxcXG5saSB7XFxuICBsaXN0LXN0eWxlOiBub25lO1xcbn1cXG5cXG5odG1sLFxcbmJvZHkge1xcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XFxuICBmb250LXNpemU6IDE2cHg7XFxufVxcblxcbi8qIENvbG9ycyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG46cm9vdCB7XFxuICAtLXByaW1hcnktY29sb3I6ICNlYzRhMGE7XFxuICAtLWxpZ2h0ZW4tY29sb3I6ICNmNmE4OGE7XFxuICAtLWdyZXktMTAwOiAjZmZmZmZmO1xcbiAgLS1ncmV5LTIwMDogI2QwZDVkZDtcXG4gIC0tZ3JleS0zMDA6ICM2NjcwODU7XFxuICAtLWdyZXktNDAwOiAjMzQ0MDU0O1xcbiAgLS1ncmV5LTUwMDogIzAwMDAwMDtcXG59XFxuXFxuLyogVHlwb2dyYXBoeSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi50ZXh0LXRpdGxlIHtcXG4gIGZvbnQtc2l6ZTogMjBweDtcXG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXG59XFxuXFxuLnRleHQtc3VidGl0bGUge1xcbiAgZm9udC1zaXplOiAxOHB4O1xcbiAgbGluZS1oZWlnaHQ6IDI4cHg7XFxuICBmb250LXdlaWdodDogNjAwO1xcbn1cXG5cXG4udGV4dC1ib2R5IHtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG59XFxuXFxuLnRleHQtY2FwdGlvbiB7XFxuICBmb250LXNpemU6IDE0cHg7XFxuICBsaW5lLWhlaWdodDogMjBweDtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL2Nzcy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxVQUFVO0VBQ1YsU0FBUztFQUNULHNCQUFzQjtBQUN4Qjs7QUFFQTs7RUFFRSxnQkFBZ0I7QUFDbEI7O0FBRUE7O0VBRUUsdUJBQXVCO0VBQ3ZCLGVBQWU7QUFDakI7O0FBRUEsbURBQW1EO0FBQ25EO0VBQ0Usd0JBQXdCO0VBQ3hCLHdCQUF3QjtFQUN4QixtQkFBbUI7RUFDbkIsbUJBQW1CO0VBQ25CLG1CQUFtQjtFQUNuQixtQkFBbUI7RUFDbkIsbUJBQW1CO0FBQ3JCOztBQUVBLG1EQUFtRDtBQUNuRDtFQUNFLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsZ0JBQWdCO0FBQ2xCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIioge1xcbiAgcGFkZGluZzogMDtcXG4gIG1hcmdpbjogMDtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbnVsLFxcbmxpIHtcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxufVxcblxcbmh0bWwsXFxuYm9keSB7XFxuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG59XFxuXFxuLyogQ29sb3JzICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbjpyb290IHtcXG4gIC0tcHJpbWFyeS1jb2xvcjogI2VjNGEwYTtcXG4gIC0tbGlnaHRlbi1jb2xvcjogI2Y2YTg4YTtcXG4gIC0tZ3JleS0xMDA6ICNmZmZmZmY7XFxuICAtLWdyZXktMjAwOiAjZDBkNWRkO1xcbiAgLS1ncmV5LTMwMDogIzY2NzA4NTtcXG4gIC0tZ3JleS00MDA6ICMzNDQwNTQ7XFxuICAtLWdyZXktNTAwOiAjMDAwMDAwO1xcbn1cXG5cXG4vKiBUeXBvZ3JhcGh5ICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLnRleHQtdGl0bGUge1xcbiAgZm9udC1zaXplOiAyMHB4O1xcbiAgbGluZS1oZWlnaHQ6IDI0cHg7XFxuICBmb250LXdlaWdodDogNjAwO1xcbn1cXG5cXG4udGV4dC1zdWJ0aXRsZSB7XFxuICBmb250LXNpemU6IDE4cHg7XFxuICBsaW5lLWhlaWdodDogMjhweDtcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxufVxcblxcbi50ZXh0LWJvZHkge1xcbiAgZm9udC1zaXplOiAxNnB4O1xcbiAgbGluZS1oZWlnaHQ6IDI0cHg7XFxuICBmb250LXdlaWdodDogNDAwO1xcbn1cXG5cXG4udGV4dC1jYXB0aW9uIHtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImNvbnN0IGxvY2FsU3RvcmFnZSA9IHdpbmRvdy5sb2NhbFN0b3JhZ2U7XG5leHBvcnQgZnVuY3Rpb24gc2F2ZUxpc3RPbkxvY2FsU3RvcmFnZShrZXksIGxpc3QpIHtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIEpTT04uc3RyaW5naWZ5KGxpc3QpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRMaXN0T25Mb2NhbFN0b3JhZ2Uoa2V5KSB7XG4gICAgY29uc3QgaXRlbSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSk7XG4gICAgaWYgKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC52YWx1ZXMoSlNPTi5wYXJzZShpdGVtKSk7XG4gICAgfVxuICAgIHJldHVybiBbXTtcbn1cbiIsImV4cG9ydCBjb25zdCBOQU1FX0xFTkdUSCA9IHtcbiAgICBNSU46IDEsXG4gICAgTUFYOiAxNSxcbn07XG4iLCJleHBvcnQgY29uc3QgUkVHRVhfU1BFQ0lBTF9DSEFSQUNURVJTID0gL1te44SxLeOFjuqwgC3tnqNhLXpBLVowLTlcXHNdLztcbiIsImV4cG9ydCBjb25zdCBMT0NBTF9TVE9SQUdFX0tFWSA9IHtcbiAgICBSRVNUQVVSQU5UX0xJU1Q6ICdyZXN0YXVyYW50TGlzdCcsXG4gICAgRkFWT1JJVEVfTElTVDogJ2Zhdm9yaXRlTGlzdCcsXG59O1xuIiwiZXhwb3J0IGNvbnN0IGluaXRpYWxSZXN0YXVyYW50TGlzdCA9IFtcbiAgICB7XG4gICAgICAgIG51bWJlcjogMCxcbiAgICAgICAgY2F0ZWdvcnk6ICftlZzsi50nLFxuICAgICAgICBuYW1lOiAn7ZS87JaR7L2p7ZWg66eI64uIJyxcbiAgICAgICAgZGlzdGFuY2U6ICcxMCcsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBg7Y+J7JaRIOy2nOyLoOydmCDtlaDrqLjri4jqsIAg7IiY7IutIOuFhOqwhCDsmrTsmIHtlbTsmKgg67mE7KeAIOyghOusuOygkCDtlLzslpHsvalcbiAgICDtlaDrp4jri4guIOuRkOu2gOulvCDrubzsp4Ag7JWK7J2AIOuQmOu5hOyngOulvCDrp5vrs7wg7IiYIOyeiOuKlCDqs7PsnLzroZwsIOKAmO2UvOyWkeKAmeydgFxuICAgIO2PieyViOuPhCDsgqztiKzrpqzroZwg4oCY7Y+J7JaR4oCZ7J2EIOydmOuvuO2VnOuLpC4g65S46rO8IO2VqOq7mCDsmrTsmIHtlZjripQg7J206rOz7JeQ7ISgXG4gICAg66e364+M66GcIOyngeygkSDqsIQg7L2p66eM7J2EIOyCrOyaqe2VmOupsCwg7J287LK07J2YIOyhsOuvuOujjOulvCDrhKPsp4Ag7JWK7J2AXG4gICAg6rG06rCV7Iud7J2EIOyEoOuztOyduOuLpC4g7L2p67mE7KeA7JmAIO2UvOyWkSDrp4zrkZDqsIAg7J206rOz7J2YIOuMgO2RnCDrqZTribTsp4Drp4wsXG4gICAg7ZWg66i464uI6rCAIOyYm+uCoCDrsKnsi53snYQg6rOg7IiY7ZWY66mwIOunjOuTpOyWtOuCtOuKlCDruYTsp4DsoITqs6gg65iQ7ZWcIOydtCDsp5HsnZhcbiAgICDsl63sgqzrpbwg64qQ64KEIOyImCDsnojripQg7Yq567OE7ZWcIOuplOuJtOuLpC4g67CY7LCs7J2AIOyGkOuLmOuTpOydtCDrqLnqs6Ag7Iu27J2AXG4gICAg66eM7YG8IOuNnOyWtCDrqLnsnYQg7IiYIOyeiOqyjCDspIDruYTrj7wg7J6I64ukLmAsXG4gICAgICAgIGxpbms6ICdodHRwczovL25hdmVyLm1lL0c2RHlEOXRnJyxcbiAgICAgICAgaXNGYXZvcml0ZTogZmFsc2UsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG51bWJlcjogMSxcbiAgICAgICAgY2F0ZWdvcnk6ICfspJHsi50nLFxuICAgICAgICBuYW1lOiAn7Lmc7LmcJyxcbiAgICAgICAgZGlzdGFuY2U6ICc1JyxcbiAgICAgICAgZGVzY3JpcHRpb246IGBTaW5jZSAyMDA0IO2OuOumrO2VnCDqtZDthrXqs7wg7KO87LCoLCDqt7jrpqzqs6Ag6rSA66Gd66eM7YG8IOq5iuydgCDrp5vqs7xcbiAgICDsoJXshLHsnLzroZwg7KCV7Ya1IOykkeyLneydmCDshLjqs4Trpbwg7Y687LOQ6rCR64uI64ukLmAsXG4gICAgICAgIGxpbms6ICdodHRwczovL25hdmVyLm1lL0dvNXBlb2dYJyxcbiAgICAgICAgaXNGYXZvcml0ZTogZmFsc2UsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG51bWJlcjogMixcbiAgICAgICAgY2F0ZWdvcnk6ICfsnbzsi50nLFxuICAgICAgICBuYW1lOiAn7J6H7Ie87JqwJyxcbiAgICAgICAgZGlzdGFuY2U6ICcxMCcsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBg7J6H7Ie87Jqw64qUIOygle2GtSDsnpDqsIDsoJzrqbQg7IKs64iE64G8IOyasOuPmeydtCDrjIDtkZzrqZTribTsnoXri4jri6QuIOq4sOyIoOydgFxuICAgIOygleyEseydhCDsnbTquLgg7IiYIOyXhuuLpOuKlCDsi6DrhZDsnLzroZwg66qo65OgIOydjOyLneyXkCDstZzshKDsnYQg64uk7ZWY64qUXG4gICAg7J6H7Ie87Jqw64qUIOqzoOqwnSDtlZzrtoQg7ZWc67aE6ruYIOy1nOyEoOydhCDri6TtlZjqsqDsirXri4jri6QuYCxcbiAgICAgICAgbGluazogJ2h0dHBzOi8vbmF2ZXIubWUvNXdIU1BPNFInLFxuICAgICAgICBpc0Zhdm9yaXRlOiBmYWxzZSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbnVtYmVyOiAzLFxuICAgICAgICBjYXRlZ29yeTogJ+yWkeyLnScsXG4gICAgICAgIG5hbWU6ICfsnbTtg5zrpqztgqTsuZwnLFxuICAgICAgICBkaXN0YW5jZTogJzIwJyxcbiAgICAgICAgZGVzY3JpcHRpb246IGDripgg67OA7ZmU66W8IOy2lOq1rO2VmOuKlCDsnbTtg5zrpqztgqTsuZzsnoXri4jri6QuYCxcbiAgICAgICAgbGluazogJ2h0dHBzOi8vbmF2ZXIubWUvR0JsbUxqMDgnLFxuICAgICAgICBpc0Zhdm9yaXRlOiBmYWxzZSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbnVtYmVyOiA0LFxuICAgICAgICBjYXRlZ29yeTogJ+yVhOyLnOyViCcsXG4gICAgICAgIG5hbWU6ICftmLjslYTruYgg7IK87ISx7KCQJyxcbiAgICAgICAgZGlzdGFuY2U6ICcxNScsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBg7ZG47KeQ7ZWcIOyWkeyXkCDqta3rrLzsnbQg7J287ZKI7J24IOyMgOq1reyImGAsXG4gICAgICAgIGxpbms6ICdodHRwczovL25hdmVyLm1lL0ZCREhHb1VlJyxcbiAgICAgICAgaXNGYXZvcml0ZTogZmFsc2UsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG51bWJlcjogNSxcbiAgICAgICAgY2F0ZWdvcnk6ICfquLDtg4AnLFxuICAgICAgICBuYW1lOiAn64+E7Iqk7YOA7L2U7IqkIOyEoOumieygkCcsXG4gICAgICAgIGRpc3RhbmNlOiAnNScsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBg66mV7Iuc7Lm4IOy6kOyjvOyWvCDqt7jrprRgLFxuICAgICAgICBsaW5rOiAnaHR0cHM6Ly9uYXZlci5tZS9GMU1rdlR3YycsXG4gICAgICAgIGlzRmF2b3JpdGU6IGZhbHNlLFxuICAgIH0sXG5dO1xuIiwiaW1wb3J0IHsgZ2V0Rm9ybURhdGEgfSBmcm9tICcuLi91dGlscy9mb3JtJztcbmltcG9ydCB7IGlzVmFsaWROYW1lIH0gZnJvbSAnLi4vdmFsaWRhdG9yJztcbmltcG9ydCB7IGdldExpc3RPbkxvY2FsU3RvcmFnZSwgc2F2ZUxpc3RPbkxvY2FsU3RvcmFnZSwgfSBmcm9tICcuLi91dGlscy9sb2NhbFN0b3JhZ2UnO1xuaW1wb3J0IHsgTE9DQUxfU1RPUkFHRV9LRVkgfSBmcm9tICcuLi9jb25zdGFudHMvbG9jYWxTdG9yYWdlJztcbmltcG9ydCB7IGluaXRpYWxSZXN0YXVyYW50TGlzdCB9IGZyb20gJy4uL2NvbnN0YW50cy9pbml0aWFsUmVzdGF1cmFudExpc3QnO1xuY2xhc3MgcmVzdGF1cmFudE1hbmFnZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnJlc3RhdXJhbnRMaXN0ID0gW107XG4gICAgICAgIHRoaXMuZmF2b3JpdGVMaXN0ID0gW107XG4gICAgICAgIGlmICghcmVzdGF1cmFudE1hbmFnZXIuaW5zdGFuY2UpIHtcbiAgICAgICAgICAgIHJlc3RhdXJhbnRNYW5hZ2VyLmluc3RhbmNlID0gdGhpcztcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGF0aWMgZ2V0SW5zdGFuY2UoKSB7XG4gICAgICAgIGlmICghcmVzdGF1cmFudE1hbmFnZXIuaW5zdGFuY2UpIHtcbiAgICAgICAgICAgIHJlc3RhdXJhbnRNYW5hZ2VyLmluc3RhbmNlID0gbmV3IHJlc3RhdXJhbnRNYW5hZ2VyKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3RhdXJhbnRNYW5hZ2VyLmluc3RhbmNlO1xuICAgIH1cbiAgICBpbml0UmVzdGF1cmFudExpc3QoKSB7XG4gICAgICAgIGNvbnN0IGlzRXhpc3RSZXN0YXVyYW50TGlzdCA9IGdldExpc3RPbkxvY2FsU3RvcmFnZShMT0NBTF9TVE9SQUdFX0tFWS5SRVNUQVVSQU5UX0xJU1QpLmxlbmd0aDtcbiAgICAgICAgY29uc3QgaXNFeGlzdEZhdm9yaXRlTGlzdCA9IGdldExpc3RPbkxvY2FsU3RvcmFnZShMT0NBTF9TVE9SQUdFX0tFWS5SRVNUQVVSQU5UX0xJU1QpLmxlbmd0aDtcbiAgICAgICAgdGhpcy5yZXN0YXVyYW50TGlzdCA9IGlzRXhpc3RSZXN0YXVyYW50TGlzdFxuICAgICAgICAgICAgPyBnZXRMaXN0T25Mb2NhbFN0b3JhZ2UoTE9DQUxfU1RPUkFHRV9LRVkuUkVTVEFVUkFOVF9MSVNUKVxuICAgICAgICAgICAgOiBpbml0aWFsUmVzdGF1cmFudExpc3Q7XG4gICAgICAgIHRoaXMuZmF2b3JpdGVMaXN0ID0gaXNFeGlzdEZhdm9yaXRlTGlzdFxuICAgICAgICAgICAgPyBnZXRMaXN0T25Mb2NhbFN0b3JhZ2UoTE9DQUxfU1RPUkFHRV9LRVkuRkFWT1JJVEVfTElTVClcbiAgICAgICAgICAgIDogW107XG4gICAgICAgIHNhdmVMaXN0T25Mb2NhbFN0b3JhZ2UoTE9DQUxfU1RPUkFHRV9LRVkuUkVTVEFVUkFOVF9MSVNULCB0aGlzLnJlc3RhdXJhbnRMaXN0KTtcbiAgICAgICAgc2F2ZUxpc3RPbkxvY2FsU3RvcmFnZShMT0NBTF9TVE9SQUdFX0tFWS5GQVZPUklURV9MSVNULCB0aGlzLmZhdm9yaXRlTGlzdCk7XG4gICAgfVxuICAgIGFkZE5ld1Jlc3RhdXJhbnQoZXZlbnQpIHtcbiAgICAgICAgY29uc3QgbmV3UmVzdGF1cmFudCA9IHRoaXMuZ2V0TmV3UmVzdGF1cmFudChldmVudCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpc1ZhbGlkTmFtZShuZXdSZXN0YXVyYW50Lm5hbWUpO1xuICAgICAgICAgICAgbmV3UmVzdGF1cmFudC5udW1iZXIgPSB0aGlzLnJlc3RhdXJhbnRMaXN0Lmxlbmd0aDtcbiAgICAgICAgICAgIG5ld1Jlc3RhdXJhbnQuaXNGYXZvcml0ZSA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy51cGRhdGVSZXN0YXVyYW50TGlzdChbLi4udGhpcy5yZXN0YXVyYW50TGlzdCwgbmV3UmVzdGF1cmFudF0pO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBhbGVydChlcnJvci5tZXNzYWdlKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXROZXdSZXN0YXVyYW50KGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IHRyaW1tZWROZXdSZXN0YXVyYW50ID0gZ2V0Rm9ybURhdGEoZXZlbnQpLm1hcCgoW2tleSwgdmFsdWVdKSA9PiBbXG4gICAgICAgICAgICBrZXksXG4gICAgICAgICAgICBTdHJpbmcodmFsdWUpLnRyaW0oKSxcbiAgICAgICAgXSk7XG4gICAgICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXModHJpbW1lZE5ld1Jlc3RhdXJhbnQpO1xuICAgIH1cbiAgICB1cGRhdGVSZXN0YXVyYW50TGlzdChyZXN0YXVyYW50TGlzdCkge1xuICAgICAgICB0aGlzLnJlc3RhdXJhbnRMaXN0ID0gcmVzdGF1cmFudExpc3Q7XG4gICAgICAgIHNhdmVMaXN0T25Mb2NhbFN0b3JhZ2UoTE9DQUxfU1RPUkFHRV9LRVkuUkVTVEFVUkFOVF9MSVNULCB0aGlzLnJlc3RhdXJhbnRMaXN0KTtcbiAgICB9XG4gICAgdXBkYXRlRmF2b3JpdGVMaXN0KGZhdm9yaXRlTGlzdCkge1xuICAgICAgICB0aGlzLmZhdm9yaXRlTGlzdCA9IGZhdm9yaXRlTGlzdDtcbiAgICAgICAgc2F2ZUxpc3RPbkxvY2FsU3RvcmFnZShMT0NBTF9TVE9SQUdFX0tFWS5GQVZPUklURV9MSVNULCB0aGlzLmZhdm9yaXRlTGlzdCk7XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgcmVzdGF1cmFudE1hbmFnZXI7XG4iLCJpbXBvcnQgeyBnZXRMaXN0T25Mb2NhbFN0b3JhZ2UgfSBmcm9tICcuLi91dGlscy9sb2NhbFN0b3JhZ2UnO1xuaW1wb3J0IHsgTkFNRV9MRU5HVEggfSBmcm9tICcuLi9jb25zdGFudHMvdmFsdWVzJztcbmltcG9ydCB7IEVSUk9SX01FU1NBR0UgfSBmcm9tICcuLi9jb25zdGFudHMvZXJyb3InO1xuaW1wb3J0IHsgUkVHRVhfU1BFQ0lBTF9DSEFSQUNURVJTIH0gZnJvbSAnLi4vY29uc3RhbnRzL3JlZ2V4cCc7XG5pbXBvcnQgeyBMT0NBTF9TVE9SQUdFX0tFWSB9IGZyb20gJy4uL2NvbnN0YW50cy9sb2NhbFN0b3JhZ2UnO1xuZXhwb3J0IGNvbnN0IGNoZWNrUmVzdGF1cmFudE5hbWUgPSAoaW5wdXQpID0+IHtcbiAgICBpZiAoUkVHRVhfU1BFQ0lBTF9DSEFSQUNURVJTLnRlc3QoaW5wdXQpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihFUlJPUl9NRVNTQUdFLk5PX1NQRUNJQUxfQ0hBUkFDVEVSUyk7XG4gICAgfVxufTtcbmV4cG9ydCBjb25zdCBjaGVja0lucHV0TGVuZ3RoID0gKGlucHV0KSA9PiB7XG4gICAgaWYgKGlucHV0Lmxlbmd0aCA8IE5BTUVfTEVOR1RILk1JTiB8fCBpbnB1dC5sZW5ndGggPiBOQU1FX0xFTkdUSC5NQVgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKEVSUk9SX01FU1NBR0UuTkFNRV9MRU5HVEhfTElNSVQpO1xuICAgIH1cbn07XG5leHBvcnQgY29uc3QgY2hlY2tEdXBsaWNhdGVOYW1lSW5SZXN0YXVyYW50TGlzdCA9IChpbnB1dCkgPT4ge1xuICAgIGNvbnN0IHJlc3RhdXJhbnRMaXN0ID0gZ2V0TGlzdE9uTG9jYWxTdG9yYWdlKExPQ0FMX1NUT1JBR0VfS0VZLlJFU1RBVVJBTlRfTElTVCk7XG4gICAgaWYgKHJlc3RhdXJhbnRMaXN0LmZpbmQocmVzdGF1cmFudCA9PiByZXN0YXVyYW50Lm5hbWUgPT09IGlucHV0KSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoRVJST1JfTUVTU0FHRS5EVVBMSUNBVEVfTkFNRSk7XG4gICAgfVxufTtcbiIsImV4cG9ydCBjb25zdCBFUlJPUl9NRVNTQUdFID0ge1xuICAgIE5PX1NQRUNJQUxfQ0hBUkFDVEVSUzogJ+ydtOumhOyXkCDtirnsiJjrrLjsnpDripQg7J6F66Cl7ZWgIOyImCDsl4bsirXri4jri6QuJyxcbiAgICBOQU1FX0xFTkdUSF9MSU1JVDogJzEgfiAxNeyekCDsgqzsnbTsnZgg7J2066aE7J2EIOyeheugpe2VtCDso7zshLjsmpQuJyxcbiAgICBEVVBMSUNBVEVfTkFNRTogJ+ydtOuvuCDsobTsnqztlZjripQg7J2M7Iud7KCQIOydtOumhOyeheuLiOuLpC4nLFxufTtcbiIsImltcG9ydCB7IGNoZWNrUmVzdGF1cmFudE5hbWUsIGNoZWNrSW5wdXRMZW5ndGgsIGNoZWNrRHVwbGljYXRlTmFtZUluUmVzdGF1cmFudExpc3QsIH0gZnJvbSAnLi9lcnJvckNoZWNrZXInO1xuZXhwb3J0IGNvbnN0IGlzVmFsaWROYW1lID0gKHJlc3RhdXJhbnROYW1lKSA9PiB7XG4gICAgY2hlY2tSZXN0YXVyYW50TmFtZShyZXN0YXVyYW50TmFtZSk7XG4gICAgY2hlY2tJbnB1dExlbmd0aChyZXN0YXVyYW50TmFtZSk7XG4gICAgY2hlY2tEdXBsaWNhdGVOYW1lSW5SZXN0YXVyYW50TGlzdChyZXN0YXVyYW50TmFtZSk7XG4gICAgcmV0dXJuIHRydWU7XG59O1xuIiwiZXhwb3J0IGNvbnN0IGdldEZvcm1EYXRhID0gKGV2ZW50KSA9PiB7XG4gICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoZXZlbnQudGFyZ2V0KTtcbiAgICByZXR1cm4gWy4uLmZvcm1EYXRhXTtcbn07XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaGVhZGVyLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaGVhZGVyLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJhZGQtYnV0dG9uLnBuZ1wiOyIsImV4cG9ydCBjb25zdCAkID0gKHNlbGVjdG9yKSA9PiB7XG4gICAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xufTtcbmV4cG9ydCBjb25zdCAkJCA9IChzZWxlY3RvcikgPT4ge1xuICAgIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTtcbn07XG4iLCJ2YXIgX19jbGFzc1ByaXZhdGVGaWVsZFNldCA9ICh0aGlzICYmIHRoaXMuX19jbGFzc1ByaXZhdGVGaWVsZFNldCkgfHwgZnVuY3Rpb24gKHJlY2VpdmVyLCBzdGF0ZSwgdmFsdWUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJtXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIG1ldGhvZCBpcyBub3Qgd3JpdGFibGVcIik7XG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgc2V0dGVyXCIpO1xuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHdyaXRlIHByaXZhdGUgbWVtYmVyIHRvIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIChraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlciwgdmFsdWUpIDogZiA/IGYudmFsdWUgPSB2YWx1ZSA6IHN0YXRlLnNldChyZWNlaXZlciwgdmFsdWUpKSwgdmFsdWU7XG59O1xudmFyIF9fY2xhc3NQcml2YXRlRmllbGRHZXQgPSAodGhpcyAmJiB0aGlzLl9fY2xhc3NQcml2YXRlRmllbGRHZXQpIHx8IGZ1bmN0aW9uIChyZWNlaXZlciwgc3RhdGUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJhXCIgJiYgIWYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIGFjY2Vzc29yIHdhcyBkZWZpbmVkIHdpdGhvdXQgYSBnZXR0ZXJcIik7XG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gcmVjZWl2ZXIgIT09IHN0YXRlIHx8ICFmIDogIXN0YXRlLmhhcyhyZWNlaXZlcikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgcmVhZCBwcml2YXRlIG1lbWJlciBmcm9tIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIGtpbmQgPT09IFwibVwiID8gZiA6IGtpbmQgPT09IFwiYVwiID8gZi5jYWxsKHJlY2VpdmVyKSA6IGYgPyBmLnZhbHVlIDogc3RhdGUuZ2V0KHJlY2VpdmVyKTtcbn07XG52YXIgX0hlYWRlcl9pbnN0YW5jZXMsIF9IZWFkZXJfc3RhdGUsIF9IZWFkZXJfdGVtcGxhdGU7XG5pbXBvcnQgJy4uLy4uL2Nzcy9oZWFkZXIuY3NzJztcbmltcG9ydCAnLi4vYXNzZXRzL2FkZC1idXR0b24ucG5nJztcbmltcG9ydCB7ICQgfSBmcm9tICcuLi91dGlscy9zZWxlY3Rvcic7XG5jbGFzcyBIZWFkZXIge1xuICAgIGNvbnN0cnVjdG9yKHN0YXRlKSB7XG4gICAgICAgIF9IZWFkZXJfaW5zdGFuY2VzLmFkZCh0aGlzKTtcbiAgICAgICAgX0hlYWRlcl9zdGF0ZS5zZXQodGhpcywge1xuICAgICAgICAgICAgc2VsZWN0b3I6ICcnLFxuICAgICAgICAgICAgdGl0bGU6ICcnLFxuICAgICAgICB9KTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfSGVhZGVyX3N0YXRlLCBzdGF0ZSwgXCJmXCIpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgICQoX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfSGVhZGVyX3N0YXRlLCBcImZcIikuc2VsZWN0b3IpLmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfSGVhZGVyX2luc3RhbmNlcywgXCJtXCIsIF9IZWFkZXJfdGVtcGxhdGUpLmNhbGwodGhpcykpO1xuICAgIH1cbn1cbl9IZWFkZXJfc3RhdGUgPSBuZXcgV2Vha01hcCgpLCBfSGVhZGVyX2luc3RhbmNlcyA9IG5ldyBXZWFrU2V0KCksIF9IZWFkZXJfdGVtcGxhdGUgPSBmdW5jdGlvbiBfSGVhZGVyX3RlbXBsYXRlKCkge1xuICAgIC8qIGh0bWwgKi9cbiAgICByZXR1cm4gYFxuXHRcdFx0PGgxIGNsYXNzPVwiZ25iX190aXRsZSB0ZXh0LXRpdGxlXCI+JHtfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9IZWFkZXJfc3RhdGUsIFwiZlwiKS50aXRsZX08L2gxPlxuXHRcdFx0PGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJnbmJfX2J1dHRvblwiIGFyaWEtbGFiZWw9XCLsnYzsi53soJAg7LaU6rCAXCI+XG5cdFx0XHRcdDxpbWcgc3JjPVwiLi9hZGQtYnV0dG9uLnBuZ1wiIGFsdD1cIuydjOyLneygkCDstpTqsIBcIiAvPlxuXHRcdFx0PC9idXR0b24+XG5cdFx0YDtcbn07XG5leHBvcnQgZGVmYXVsdCBIZWFkZXI7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbmF2LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbmF2LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsInZhciBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0ID0gKHRoaXMgJiYgdGhpcy5fX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KSB8fCBmdW5jdGlvbiAocmVjZWl2ZXIsIHN0YXRlLCB2YWx1ZSwga2luZCwgZikge1xuICAgIGlmIChraW5kID09PSBcIm1cIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgbWV0aG9kIGlzIG5vdCB3cml0YWJsZVwiKTtcbiAgICBpZiAoa2luZCA9PT0gXCJhXCIgJiYgIWYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIGFjY2Vzc29yIHdhcyBkZWZpbmVkIHdpdGhvdXQgYSBzZXR0ZXJcIik7XG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gcmVjZWl2ZXIgIT09IHN0YXRlIHx8ICFmIDogIXN0YXRlLmhhcyhyZWNlaXZlcikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3Qgd3JpdGUgcHJpdmF0ZSBtZW1iZXIgdG8gYW4gb2JqZWN0IHdob3NlIGNsYXNzIGRpZCBub3QgZGVjbGFyZSBpdFwiKTtcbiAgICByZXR1cm4gKGtpbmQgPT09IFwiYVwiID8gZi5jYWxsKHJlY2VpdmVyLCB2YWx1ZSkgOiBmID8gZi52YWx1ZSA9IHZhbHVlIDogc3RhdGUuc2V0KHJlY2VpdmVyLCB2YWx1ZSkpLCB2YWx1ZTtcbn07XG52YXIgX19jbGFzc1ByaXZhdGVGaWVsZEdldCA9ICh0aGlzICYmIHRoaXMuX19jbGFzc1ByaXZhdGVGaWVsZEdldCkgfHwgZnVuY3Rpb24gKHJlY2VpdmVyLCBzdGF0ZSwga2luZCwgZikge1xuICAgIGlmIChraW5kID09PSBcImFcIiAmJiAhZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgYWNjZXNzb3Igd2FzIGRlZmluZWQgd2l0aG91dCBhIGdldHRlclwiKTtcbiAgICBpZiAodHlwZW9mIHN0YXRlID09PSBcImZ1bmN0aW9uXCIgPyByZWNlaXZlciAhPT0gc3RhdGUgfHwgIWYgOiAhc3RhdGUuaGFzKHJlY2VpdmVyKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCByZWFkIHByaXZhdGUgbWVtYmVyIGZyb20gYW4gb2JqZWN0IHdob3NlIGNsYXNzIGRpZCBub3QgZGVjbGFyZSBpdFwiKTtcbiAgICByZXR1cm4ga2luZCA9PT0gXCJtXCIgPyBmIDoga2luZCA9PT0gXCJhXCIgPyBmLmNhbGwocmVjZWl2ZXIpIDogZiA/IGYudmFsdWUgOiBzdGF0ZS5nZXQocmVjZWl2ZXIpO1xufTtcbnZhciBfTmF2aWdhdGlvbl9pbnN0YW5jZXMsIF9OYXZpZ2F0aW9uX3N0YXRlLCBfTmF2aWdhdGlvbl90ZW1wbGF0ZTtcbmltcG9ydCAnLi4vLi4vY3NzL25hdi5jc3MnO1xuaW1wb3J0IHsgJCB9IGZyb20gJy4uL3V0aWxzL3NlbGVjdG9yJztcbmNsYXNzIE5hdmlnYXRpb24ge1xuICAgIGNvbnN0cnVjdG9yKHN0YXRlKSB7XG4gICAgICAgIF9OYXZpZ2F0aW9uX2luc3RhbmNlcy5hZGQodGhpcyk7XG4gICAgICAgIF9OYXZpZ2F0aW9uX3N0YXRlLnNldCh0aGlzLCB7XG4gICAgICAgICAgICBzZWxlY3RvcjogJycsXG4gICAgICAgICAgICBjbGFzczogJycsXG4gICAgICAgIH0pO1xuICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHRoaXMsIF9OYXZpZ2F0aW9uX3N0YXRlLCBzdGF0ZSwgXCJmXCIpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgICQoX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfTmF2aWdhdGlvbl9zdGF0ZSwgXCJmXCIpLnNlbGVjdG9yKS5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX05hdmlnYXRpb25faW5zdGFuY2VzLCBcIm1cIiwgX05hdmlnYXRpb25fdGVtcGxhdGUpLmNhbGwodGhpcykpO1xuICAgIH1cbn1cbl9OYXZpZ2F0aW9uX3N0YXRlID0gbmV3IFdlYWtNYXAoKSwgX05hdmlnYXRpb25faW5zdGFuY2VzID0gbmV3IFdlYWtTZXQoKSwgX05hdmlnYXRpb25fdGVtcGxhdGUgPSBmdW5jdGlvbiBfTmF2aWdhdGlvbl90ZW1wbGF0ZSgpIHtcbiAgICAvKiBodG1sICovXG4gICAgcmV0dXJuIGBcblx0XHRcdDxkaXYgY2xhc3M9JHtfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9OYXZpZ2F0aW9uX3N0YXRlLCBcImZcIikuY2xhc3N9PlxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwidGV4dC1idXR0b24tY29udGFpbmVyXCI+XG5cdFx0XHRcdFx0PGJ1dHRvbiBjbGFzcz1cInNlbGVjdGVkLXRleHQgbmF2LWJ1dHRvbiB0ZXh0LWJ1dHRvbiB0ZXh0LWJ1dHRvbi0tcHJpbWFyeVwiIGFyaWEtbGFiZWw9XCJhbGwtcmVzdGF1cmFudHNcIj7rqqjrk6Ag7J2M7Iud7KCQPC9idXR0b24+XG5cdFx0XHRcdFx0PGJ1dHRvbiBjbGFzcz1cIm5hdi1idXR0b24gdGV4dC1idXR0b24gdGV4dC1idXR0b24tLXNlY29uZGFyeVwiIGFyaWEtbGFiZWw9XCJmYXZvcml0ZS1yZXN0YXVyYW50c1wiPuyekOyjvCDqsIDripQg7J2M7Iud7KCQPC9idXR0b24+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwiYmFyLWJ1dHRvbi1jb250YWluZXJcIj5cblx0XHRcdFx0XHQ8YnV0dG9uIGNsYXNzPVwic2VsZWN0ZWQtYmFyIG5hdi1idXR0b24gYmFyLWJ1dHRvbiBiYXItYnV0dG9uLS1wcmltYXJ5XCIgYXJpYS1sYWJlbD1cImFsbC1yZXN0YXVyYW50c1wiLz5cblx0XHRcdFx0XHQ8YnV0dG9uIGNsYXNzPVwibmF2LWJ1dHRvbiBiYXItYnV0dG9uIGJhci1idXR0b24tLXNlY29uZGFyeVwiIGFyaWEtbGFiZWw9XCJmYXZvcml0ZS1yZXN0YXVyYW50c1wiLz5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHQ8L2Rpdj5cblx0XHRgO1xufTtcbmV4cG9ydCBkZWZhdWx0IE5hdmlnYXRpb247XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZmlsdGVyLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZmlsdGVyLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsInZhciBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0ID0gKHRoaXMgJiYgdGhpcy5fX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KSB8fCBmdW5jdGlvbiAocmVjZWl2ZXIsIHN0YXRlLCB2YWx1ZSwga2luZCwgZikge1xuICAgIGlmIChraW5kID09PSBcIm1cIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgbWV0aG9kIGlzIG5vdCB3cml0YWJsZVwiKTtcbiAgICBpZiAoa2luZCA9PT0gXCJhXCIgJiYgIWYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIGFjY2Vzc29yIHdhcyBkZWZpbmVkIHdpdGhvdXQgYSBzZXR0ZXJcIik7XG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gcmVjZWl2ZXIgIT09IHN0YXRlIHx8ICFmIDogIXN0YXRlLmhhcyhyZWNlaXZlcikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3Qgd3JpdGUgcHJpdmF0ZSBtZW1iZXIgdG8gYW4gb2JqZWN0IHdob3NlIGNsYXNzIGRpZCBub3QgZGVjbGFyZSBpdFwiKTtcbiAgICByZXR1cm4gKGtpbmQgPT09IFwiYVwiID8gZi5jYWxsKHJlY2VpdmVyLCB2YWx1ZSkgOiBmID8gZi52YWx1ZSA9IHZhbHVlIDogc3RhdGUuc2V0KHJlY2VpdmVyLCB2YWx1ZSkpLCB2YWx1ZTtcbn07XG52YXIgX19jbGFzc1ByaXZhdGVGaWVsZEdldCA9ICh0aGlzICYmIHRoaXMuX19jbGFzc1ByaXZhdGVGaWVsZEdldCkgfHwgZnVuY3Rpb24gKHJlY2VpdmVyLCBzdGF0ZSwga2luZCwgZikge1xuICAgIGlmIChraW5kID09PSBcImFcIiAmJiAhZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgYWNjZXNzb3Igd2FzIGRlZmluZWQgd2l0aG91dCBhIGdldHRlclwiKTtcbiAgICBpZiAodHlwZW9mIHN0YXRlID09PSBcImZ1bmN0aW9uXCIgPyByZWNlaXZlciAhPT0gc3RhdGUgfHwgIWYgOiAhc3RhdGUuaGFzKHJlY2VpdmVyKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCByZWFkIHByaXZhdGUgbWVtYmVyIGZyb20gYW4gb2JqZWN0IHdob3NlIGNsYXNzIGRpZCBub3QgZGVjbGFyZSBpdFwiKTtcbiAgICByZXR1cm4ga2luZCA9PT0gXCJtXCIgPyBmIDoga2luZCA9PT0gXCJhXCIgPyBmLmNhbGwocmVjZWl2ZXIpIDogZiA/IGYudmFsdWUgOiBzdGF0ZS5nZXQocmVjZWl2ZXIpO1xufTtcbnZhciBfU2VsZWN0X2luc3RhbmNlcywgX1NlbGVjdF9zdGF0ZSwgX1NlbGVjdF90ZW1wbGF0ZTtcbmltcG9ydCAnLi4vLi4vY3NzL2ZpbHRlci5jc3MnO1xuaW1wb3J0IHsgJCB9IGZyb20gJy4uL3V0aWxzL3NlbGVjdG9yJztcbmNsYXNzIFNlbGVjdCB7XG4gICAgY29uc3RydWN0b3Ioc3RhdGUpIHtcbiAgICAgICAgX1NlbGVjdF9pbnN0YW5jZXMuYWRkKHRoaXMpO1xuICAgICAgICBfU2VsZWN0X3N0YXRlLnNldCh0aGlzLCB7XG4gICAgICAgICAgICBzZWxlY3RvcjogJycsXG4gICAgICAgICAgICBpZDogJycsXG4gICAgICAgICAgICBuYW1lOiAnJyxcbiAgICAgICAgICAgIGNsYXNzOiAnJyxcbiAgICAgICAgICAgIG9wdGlvbkxpc3Q6IFtdLFxuICAgICAgICB9KTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfU2VsZWN0X3N0YXRlLCBzdGF0ZSwgXCJmXCIpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgICQoX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfU2VsZWN0X3N0YXRlLCBcImZcIikuc2VsZWN0b3IpLmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfU2VsZWN0X2luc3RhbmNlcywgXCJtXCIsIF9TZWxlY3RfdGVtcGxhdGUpLmNhbGwodGhpcykpO1xuICAgICAgICB0aGlzLnNob3coKTtcbiAgICB9XG4gICAgc2hvdygpIHtcbiAgICAgICAgJChfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9TZWxlY3Rfc3RhdGUsIFwiZlwiKS5zZWxlY3RvcikuY2xhc3NMaXN0LmFkZCgncmVzdGF1cmFudC1maWx0ZXItY29udGFpbmVyLS1vcGVuJyk7XG4gICAgfVxuICAgIGhpZGUoKSB7XG4gICAgICAgICQoX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfU2VsZWN0X3N0YXRlLCBcImZcIikuc2VsZWN0b3IpLmNsYXNzTGlzdC5yZW1vdmUoJ3Jlc3RhdXJhbnQtZmlsdGVyLWNvbnRhaW5lci0tb3BlbicpO1xuICAgIH1cbn1cbl9TZWxlY3Rfc3RhdGUgPSBuZXcgV2Vha01hcCgpLCBfU2VsZWN0X2luc3RhbmNlcyA9IG5ldyBXZWFrU2V0KCksIF9TZWxlY3RfdGVtcGxhdGUgPSBmdW5jdGlvbiBfU2VsZWN0X3RlbXBsYXRlKCkge1xuICAgIC8qIGh0bWwgKi9cbiAgICByZXR1cm4gYFxuXHRcdFx0XHQ8bGFiZWxcblx0XHRcdFx0XHRmb3I9XCIke19fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX1NlbGVjdF9zdGF0ZSwgXCJmXCIpLmlkfVwiXG5cdFx0XHRcdC8+XG5cdFx0XHRcdDxzZWxlY3Rcblx0XHRcdFx0XHRuYW1lPVwiJHtfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9TZWxlY3Rfc3RhdGUsIFwiZlwiKS5uYW1lfVwiXG5cdFx0XHRcdFx0aWQ9XCIke19fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX1NlbGVjdF9zdGF0ZSwgXCJmXCIpLmlkfVwiXG5cdFx0XHRcdFx0Y2xhc3M9XCIke19fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX1NlbGVjdF9zdGF0ZSwgXCJmXCIpLmNsYXNzfVwiPlxuXHRcdFx0XHRcdCR7X19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfU2VsZWN0X3N0YXRlLCBcImZcIikub3B0aW9uTGlzdFxuICAgICAgICAubWFwKG9wdGlvbiA9PiBgPG9wdGlvbiB2YWx1ZT1cIiR7b3B0aW9uLnZhbHVlfVwiPiR7b3B0aW9uLnRleHR9PC9vcHRpb24+YClcbiAgICAgICAgLmpvaW4oJycpfVxuXHRcdFx0XHQ8L3NlbGVjdD5cblx0XHRgO1xufTtcbmV4cG9ydCBkZWZhdWx0IFNlbGVjdDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9yZXN0YXVyYW50LWxpc3QuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9yZXN0YXVyYW50LWxpc3QuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImNhdGVnb3J5LWtvcmVhbi5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiY2F0ZWdvcnktY2hpbmVzZS5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiY2F0ZWdvcnktamFwYW5lc2UucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImNhdGVnb3J5LXdlc3Rlcm4ucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImNhdGVnb3J5LWFzaWFuLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJjYXRlZ29yeS1ldGMucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImZhdm9yaXRlLWljb24tZmlsbGVkLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmYXZvcml0ZS1pY29uLWxpbmVkLnBuZ1wiOyIsImV4cG9ydCBjb25zdCBDQVRFR09SWV9JTUFHRVMgPSB7XG4gICAg7ZWc7IudOiAna29yZWFuJyxcbiAgICDspJHsi506ICdjaGluZXNlJyxcbiAgICDsnbzsi506ICdqYXBhbmVzZScsXG4gICAg7JaR7IudOiAnd2VzdGVybicsXG4gICAg7JWE7Iuc7JWIOiAnYXNpYW4nLFxuICAgIOq4sO2DgDogJ2V0YycsXG59O1xuIiwidmFyIF9fY2xhc3NQcml2YXRlRmllbGRTZXQgPSAodGhpcyAmJiB0aGlzLl9fY2xhc3NQcml2YXRlRmllbGRTZXQpIHx8IGZ1bmN0aW9uIChyZWNlaXZlciwgc3RhdGUsIHZhbHVlLCBraW5kLCBmKSB7XG4gICAgaWYgKGtpbmQgPT09IFwibVwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBtZXRob2QgaXMgbm90IHdyaXRhYmxlXCIpO1xuICAgIGlmIChraW5kID09PSBcImFcIiAmJiAhZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgYWNjZXNzb3Igd2FzIGRlZmluZWQgd2l0aG91dCBhIHNldHRlclwiKTtcbiAgICBpZiAodHlwZW9mIHN0YXRlID09PSBcImZ1bmN0aW9uXCIgPyByZWNlaXZlciAhPT0gc3RhdGUgfHwgIWYgOiAhc3RhdGUuaGFzKHJlY2VpdmVyKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCB3cml0ZSBwcml2YXRlIG1lbWJlciB0byBhbiBvYmplY3Qgd2hvc2UgY2xhc3MgZGlkIG5vdCBkZWNsYXJlIGl0XCIpO1xuICAgIHJldHVybiAoa2luZCA9PT0gXCJhXCIgPyBmLmNhbGwocmVjZWl2ZXIsIHZhbHVlKSA6IGYgPyBmLnZhbHVlID0gdmFsdWUgOiBzdGF0ZS5zZXQocmVjZWl2ZXIsIHZhbHVlKSksIHZhbHVlO1xufTtcbnZhciBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0ID0gKHRoaXMgJiYgdGhpcy5fX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KSB8fCBmdW5jdGlvbiAocmVjZWl2ZXIsIHN0YXRlLCBraW5kLCBmKSB7XG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgZ2V0dGVyXCIpO1xuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHJlYWQgcHJpdmF0ZSBtZW1iZXIgZnJvbSBhbiBvYmplY3Qgd2hvc2UgY2xhc3MgZGlkIG5vdCBkZWNsYXJlIGl0XCIpO1xuICAgIHJldHVybiBraW5kID09PSBcIm1cIiA/IGYgOiBraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlcikgOiBmID8gZi52YWx1ZSA6IHN0YXRlLmdldChyZWNlaXZlcik7XG59O1xudmFyIF9SZXN0YXVyYW50TGlzdF9pbnN0YW5jZXMsIF9SZXN0YXVyYW50TGlzdF9zdGF0ZSwgX1Jlc3RhdXJhbnRMaXN0X3RlbXBsYXRlO1xuaW1wb3J0ICcuLi8uLi9jc3MvcmVzdGF1cmFudC1saXN0LmNzcyc7XG5pbXBvcnQgJy4uL2Fzc2V0cy9jYXRlZ29yeS1rb3JlYW4ucG5nJztcbmltcG9ydCAnLi4vYXNzZXRzL2NhdGVnb3J5LWNoaW5lc2UucG5nJztcbmltcG9ydCAnLi4vYXNzZXRzL2NhdGVnb3J5LWphcGFuZXNlLnBuZyc7XG5pbXBvcnQgJy4uL2Fzc2V0cy9jYXRlZ29yeS13ZXN0ZXJuLnBuZyc7XG5pbXBvcnQgJy4uL2Fzc2V0cy9jYXRlZ29yeS1hc2lhbi5wbmcnO1xuaW1wb3J0ICcuLi9hc3NldHMvY2F0ZWdvcnktZXRjLnBuZyc7XG5pbXBvcnQgJy4uL2Fzc2V0cy9mYXZvcml0ZS1pY29uLWZpbGxlZC5wbmcnO1xuaW1wb3J0ICcuLi9hc3NldHMvZmF2b3JpdGUtaWNvbi1saW5lZC5wbmcnO1xuaW1wb3J0IHsgJCB9IGZyb20gJy4uL3V0aWxzL3NlbGVjdG9yJztcbmltcG9ydCB7IENBVEVHT1JZX0lNQUdFUyB9IGZyb20gJy4uL2NvbnN0YW50cy9hc3NldCc7XG5jbGFzcyBSZXN0YXVyYW50TGlzdCB7XG4gICAgY29uc3RydWN0b3Ioc3RhdGUpIHtcbiAgICAgICAgX1Jlc3RhdXJhbnRMaXN0X2luc3RhbmNlcy5hZGQodGhpcyk7XG4gICAgICAgIF9SZXN0YXVyYW50TGlzdF9zdGF0ZS5zZXQodGhpcywge1xuICAgICAgICAgICAgbGlzdFJlbmRlclNlbGVjdG9yOiAnJyxcbiAgICAgICAgICAgIGFkZGl0aW9uUmVuZGVyU2VsZWN0b3I6ICcnLFxuICAgICAgICB9KTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfUmVzdGF1cmFudExpc3Rfc3RhdGUsIHN0YXRlLCBcImZcIik7XG4gICAgfVxuICAgIHJlbmRlcihyZXN0YXVyYW50TGlzdCkge1xuICAgICAgICBjb25zdCByZXN0YXVyYW50TGlzdEhUTUwgPSByZXN0YXVyYW50TGlzdFxuICAgICAgICAgICAgLm1hcChpbmZvID0+IF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX1Jlc3RhdXJhbnRMaXN0X2luc3RhbmNlcywgXCJtXCIsIF9SZXN0YXVyYW50TGlzdF90ZW1wbGF0ZSkuY2FsbCh0aGlzLCBpbmZvKSlcbiAgICAgICAgICAgIC5qb2luKCcnKTtcbiAgICAgICAgJCgnLnJlc3RhdXJhbnQtbGlzdCcpLmlubmVySFRNTCA9IHJlc3RhdXJhbnRMaXN0SFRNTDtcbiAgICB9XG4gICAgcmVuZGVyQWRkaXRpb25SZXN0YXVyYW50KHJlc3RhdXJhbnQpIHtcbiAgICAgICAgJChfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9SZXN0YXVyYW50TGlzdF9zdGF0ZSwgXCJmXCIpLmFkZGl0aW9uUmVuZGVyU2VsZWN0b3IpLmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfUmVzdGF1cmFudExpc3RfaW5zdGFuY2VzLCBcIm1cIiwgX1Jlc3RhdXJhbnRMaXN0X3RlbXBsYXRlKS5jYWxsKHRoaXMsIHJlc3RhdXJhbnQpKTtcbiAgICB9XG59XG5fUmVzdGF1cmFudExpc3Rfc3RhdGUgPSBuZXcgV2Vha01hcCgpLCBfUmVzdGF1cmFudExpc3RfaW5zdGFuY2VzID0gbmV3IFdlYWtTZXQoKSwgX1Jlc3RhdXJhbnRMaXN0X3RlbXBsYXRlID0gZnVuY3Rpb24gX1Jlc3RhdXJhbnRMaXN0X3RlbXBsYXRlKHsgbnVtYmVyLCBjYXRlZ29yeSwgbmFtZSwgZGlzdGFuY2UsIGRlc2NyaXB0aW9uLCBpc0Zhdm9yaXRlIH0pIHtcbiAgICBjb25zdCBmYXZvcml0ZU9wZW5DbGFzcyA9IGlzRmF2b3JpdGUgPyAnZmF2b3JpdGUtaWNvbi1maWxsZWQtLW9wZW4nIDogJyc7XG4gICAgLyogaHRtbCAqL1xuICAgIHJldHVybiBgXG5cdFx0XHQ8bGkgY2xhc3M9XCJyZXN0YXVyYW50XCI+XG4gICAgXHRcdDxkaXYgY2xhc3M9XCJyZXN0YXVyYW50X19jYXRlZ29yeVwiPlxuICAgIFx0XHRcdDxpbWdcbiAgICBcdFx0XHRcdHNyYz1cIi4vY2F0ZWdvcnktJHtDQVRFR09SWV9JTUFHRVNbY2F0ZWdvcnldfS5wbmdcIlxuICAgIFx0XHRcdFx0YWx0PVwiJHtjYXRlZ29yeX1cIlxuICAgIFx0XHRcdFx0Y2xhc3M9XCJjYXRlZ29yeS1pY29uXCJcbiAgICBcdFx0XHQvPlxuICAgIFx0XHQ8L2Rpdj5cbiAgICBcdFx0PGRpdiBjbGFzcz1cInJlc3RhdXJhbnRfX2luZm9cIj5cblx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwiaW5mby10b3BcIj5cblx0XHRcdFx0XHRcdDxkaXY+XG4gICAgXHRcdFx0XHRcdDxoMyBjbGFzcz1cInJlc3RhdXJhbnRfX25hbWUgdGV4dC1zdWJ0aXRsZVwiPlxuXHRcdFx0XHRcdFx0XHRcdCR7bmFtZX1cblx0XHRcdFx0XHRcdFx0PC9oMz5cbiAgICBcdFx0XHRcdFx0PHNwYW4gY2xhc3M9XCJyZXN0YXVyYW50X19kaXN0YW5jZSB0ZXh0LWJvZHlcIj5cblx0XHRcdFx0XHRcdFx0XHTsuqDtjbzsiqTrtoDthLAgJHtkaXN0YW5jZX3rtoQg64K0XG5cdFx0XHRcdFx0XHRcdDwvc3Bhbj5cblx0XHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzcz1cImZhdm9yaXRlLWljb24tY29udGFpbmVyXCI+XG5cdFx0XHRcdFx0XHRcdDxpbWdcblx0XHRcdFx0XHRcdFx0XHRzcmM9XCIuL2Zhdm9yaXRlLWljb24tbGluZWQucG5nXCJcblx0XHRcdFx0XHRcdFx0XHRhbHQ9XCLsppDqsqjssL7quLBcIlxuXHRcdFx0XHRcdFx0XHRcdGNsYXNzPVwiZmF2b3JpdGUtaWNvbi1saW5lZCBmYXZvcml0ZS1pY29uLWxpbmVkLSR7bnVtYmVyfVwiXG5cdFx0XHRcdFx0XHRcdC8+XG5cdFx0XHRcdFx0XHRcdDxpbWdcblx0XHRcdFx0XHRcdFx0XHRzcmM9XCIuL2Zhdm9yaXRlLWljb24tZmlsbGVkLnBuZ1wiXG5cdFx0XHRcdFx0XHRcdFx0YWx0PVwi7KaQ6rKo7LC+6riwXCJcblx0XHRcdFx0XHRcdFx0XHRjbGFzcz1cImZhdm9yaXRlLWljb24tZmlsbGVkIGZhdm9yaXRlLWljb24tZmlsbGVkLSR7bnVtYmVyfSAke2Zhdm9yaXRlT3BlbkNsYXNzfVwiXG5cdFx0XHRcdFx0XHRcdC8+XG5cdFx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHQ8cCBjbGFzcz1cInJlc3RhdXJhbnRfX2Rlc2NyaXB0aW9uIHRleHQtYm9keVwiPlxuXHRcdFx0XHRcdCR7ZGVzY3JpcHRpb259XG5cdFx0XHRcdFx0PC9wPlxuXHRcdFx0XHRcdDxidXR0b25cblx0XHRcdFx0XHRcdGNsYXNzPVwicmVzdGF1cmFudC1pbmZvLW9wZW4tYnV0dG9uXCJcblx0XHRcdFx0XHRcdG5hbWU9XCIke251bWJlcn1cIlxuXHRcdFx0XHRcdFx0YXJpYS1sYWJlbD1cIm9wZW4tcmVzdGF1cmFudC1pbmZvXCJcblx0XHRcdFx0XHQvPlxuXHRcdFx0XHQ8L2Rpdj5cbiAgICBcdDwvbGk+XG5cdFx0YDtcbn07XG5leHBvcnQgZGVmYXVsdCBSZXN0YXVyYW50TGlzdDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tb2RhbC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21vZGFsLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsInZhciBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0ID0gKHRoaXMgJiYgdGhpcy5fX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KSB8fCBmdW5jdGlvbiAocmVjZWl2ZXIsIHN0YXRlLCB2YWx1ZSwga2luZCwgZikge1xuICAgIGlmIChraW5kID09PSBcIm1cIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgbWV0aG9kIGlzIG5vdCB3cml0YWJsZVwiKTtcbiAgICBpZiAoa2luZCA9PT0gXCJhXCIgJiYgIWYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIGFjY2Vzc29yIHdhcyBkZWZpbmVkIHdpdGhvdXQgYSBzZXR0ZXJcIik7XG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gcmVjZWl2ZXIgIT09IHN0YXRlIHx8ICFmIDogIXN0YXRlLmhhcyhyZWNlaXZlcikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3Qgd3JpdGUgcHJpdmF0ZSBtZW1iZXIgdG8gYW4gb2JqZWN0IHdob3NlIGNsYXNzIGRpZCBub3QgZGVjbGFyZSBpdFwiKTtcbiAgICByZXR1cm4gKGtpbmQgPT09IFwiYVwiID8gZi5jYWxsKHJlY2VpdmVyLCB2YWx1ZSkgOiBmID8gZi52YWx1ZSA9IHZhbHVlIDogc3RhdGUuc2V0KHJlY2VpdmVyLCB2YWx1ZSkpLCB2YWx1ZTtcbn07XG52YXIgX19jbGFzc1ByaXZhdGVGaWVsZEdldCA9ICh0aGlzICYmIHRoaXMuX19jbGFzc1ByaXZhdGVGaWVsZEdldCkgfHwgZnVuY3Rpb24gKHJlY2VpdmVyLCBzdGF0ZSwga2luZCwgZikge1xuICAgIGlmIChraW5kID09PSBcImFcIiAmJiAhZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgYWNjZXNzb3Igd2FzIGRlZmluZWQgd2l0aG91dCBhIGdldHRlclwiKTtcbiAgICBpZiAodHlwZW9mIHN0YXRlID09PSBcImZ1bmN0aW9uXCIgPyByZWNlaXZlciAhPT0gc3RhdGUgfHwgIWYgOiAhc3RhdGUuaGFzKHJlY2VpdmVyKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCByZWFkIHByaXZhdGUgbWVtYmVyIGZyb20gYW4gb2JqZWN0IHdob3NlIGNsYXNzIGRpZCBub3QgZGVjbGFyZSBpdFwiKTtcbiAgICByZXR1cm4ga2luZCA9PT0gXCJtXCIgPyBmIDoga2luZCA9PT0gXCJhXCIgPyBmLmNhbGwocmVjZWl2ZXIpIDogZiA/IGYudmFsdWUgOiBzdGF0ZS5nZXQocmVjZWl2ZXIpO1xufTtcbnZhciBfTW9kYWxfaW5zdGFuY2VzLCBfTW9kYWxfc3RhdGUsIF9Nb2RhbF90ZW1wbGF0ZTtcbmltcG9ydCAnLi4vLi4vY3NzL21vZGFsLmNzcyc7XG5pbXBvcnQgeyAkIH0gZnJvbSAnLi4vdXRpbHMvc2VsZWN0b3InO1xuY2xhc3MgTW9kYWwge1xuICAgIGNvbnN0cnVjdG9yKHN0YXRlKSB7XG4gICAgICAgIF9Nb2RhbF9pbnN0YW5jZXMuYWRkKHRoaXMpO1xuICAgICAgICBfTW9kYWxfc3RhdGUuc2V0KHRoaXMsIHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiAnJyxcbiAgICAgICAgICAgIGlkOiAnJyxcbiAgICAgICAgICAgIGJhY2tkcm9wOiAnJyxcbiAgICAgICAgICAgIGNvbnRhaW5lcjogJycsXG4gICAgICAgIH0pO1xuICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHRoaXMsIF9Nb2RhbF9zdGF0ZSwgc3RhdGUsIFwiZlwiKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICAkKF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX01vZGFsX3N0YXRlLCBcImZcIikuc2VsZWN0b3IpLmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfTW9kYWxfaW5zdGFuY2VzLCBcIm1cIiwgX01vZGFsX3RlbXBsYXRlKS5jYWxsKHRoaXMpKTtcbiAgICB9XG59XG5fTW9kYWxfc3RhdGUgPSBuZXcgV2Vha01hcCgpLCBfTW9kYWxfaW5zdGFuY2VzID0gbmV3IFdlYWtTZXQoKSwgX01vZGFsX3RlbXBsYXRlID0gZnVuY3Rpb24gX01vZGFsX3RlbXBsYXRlKCkge1xuICAgIC8qIGh0bWwgKi9cbiAgICByZXR1cm4gYFxuXHRcdFx0PGRpdiBjbGFzcz1cIm1vZGFsXCIgaWQ9XCIke19fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX01vZGFsX3N0YXRlLCBcImZcIikuaWR9XCI+XG5cdFx0XHRcdDxkaXYgY2xhc3M9XCIke19fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX01vZGFsX3N0YXRlLCBcImZcIikuYmFja2Ryb3B9XCI+PC9kaXY+XG5cdFx0XHRcdDxkaXYgY2xhc3M9XCIke19fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX01vZGFsX3N0YXRlLCBcImZcIikuY29udGFpbmVyfVwiPlxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdDwvZGl2PlxuXHRcdGA7XG59O1xuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vcmVzdGF1cmFudC1hZGQtY29udGFpbmVyLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vcmVzdGF1cmFudC1hZGQtY29udGFpbmVyLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImV4cG9ydCBjb25zdCBUSVRMRSA9ICfsg4jroZzsmrQg7J2M7Iud7KCQJztcbmV4cG9ydCBjb25zdCBMQUJFTF9URVhUID0ge1xuICAgIENBVEVHT1JZOiAn7Lm07YWM6rOg66asJyxcbiAgICBOQU1FOiAn7J2066aEJyxcbiAgICBESVNUQU5DRTogJ+qxsOumrCjrj4Trs7Qg7J2064+ZIOyLnOqwhCknLFxuICAgIERFU0NSSVBUSU9OOiAn7ISk66qFJyxcbiAgICBMSU5LOiAn7LC46rOgIOunge2BrCcsXG59O1xuZXhwb3J0IGNvbnN0IENBVEVHT1JZX0xJU1QgPSBbXG4gICAgeyB2YWx1ZTogJycsIHRleHQ6ICfshKDtg53tlbQg7KO87IS47JqUJyB9LFxuICAgIHsgdmFsdWU6ICftlZzsi50nLCB0ZXh0OiAn7ZWc7IudJyB9LFxuICAgIHsgdmFsdWU6ICfspJHsi50nLCB0ZXh0OiAn7KSR7IudJyB9LFxuICAgIHsgdmFsdWU6ICfsnbzsi50nLCB0ZXh0OiAn7J287IudJyB9LFxuICAgIHsgdmFsdWU6ICfslpHsi50nLCB0ZXh0OiAn7JaR7IudJyB9LFxuICAgIHsgdmFsdWU6ICfslYTsi5zslYgnLCB0ZXh0OiAn7JWE7Iuc7JWIJyB9LFxuICAgIHsgdmFsdWU6ICfquLDtg4AnLCB0ZXh0OiAn6riw7YOAJyB9LFxuXTtcbmV4cG9ydCBjb25zdCBIRUxQX1RFWFQgPSB7XG4gICAgTkFNRTogJzF+MTXsnpAg7IKs7J207J2YIOydtOumhOydhCDsnoXroKXtlbQg7KO87IS47JqULicsXG4gICAgREVTQ1JJUFRJT046ICfrqZTribQg65OxIOy2lOqwgCDsoJXrs7Trpbwg7J6F66Cl7ZW0IOyjvOyEuOyalC4nLFxuICAgIExJTks6ICfrp6TsnqUg7KCV67O066W8IO2ZleyduO2VoCDsiJgg7J6I64qUIOunge2BrOulvCBodHRwczovLyDtmJXsi53snLzroZwg7J6F66Cl7ZW0IOyjvOyEuOyalC4nLFxufTtcbmV4cG9ydCBjb25zdCBESVNUQU5DRV9MSVNUID0gW1xuICAgIHsgdmFsdWU6ICcnLCB0ZXh0OiAn7ISg7YOd7ZW0IOyjvOyEuOyalCcgfSxcbiAgICB7IHZhbHVlOiAnNScsIHRleHQ6ICc167aEIOuCtCcgfSxcbiAgICB7IHZhbHVlOiAnMTAnLCB0ZXh0OiAnMTDrtoQg64K0JyB9LFxuICAgIHsgdmFsdWU6ICcxNScsIHRleHQ6ICcxNeu2hCDrgrQnIH0sXG4gICAgeyB2YWx1ZTogJzIwJywgdGV4dDogJzIw67aEIOuCtCcgfSxcbiAgICB7IHZhbHVlOiAnMzAnLCB0ZXh0OiAnMzDrtoQg64K0JyB9LFxuXTtcbmV4cG9ydCBjb25zdCBCVVRUT05fVEVYVCA9IHtcbiAgICBDQU5DRUw6ICfst6jshoztlZjquLAnLFxuICAgIEFERElUSU9OOiAn7LaU6rCA7ZWY6riwJyxcbiAgICBERUxFVEU6ICfsgq3soJztlZjquLAnLFxuICAgIENMT1NFOiAn64ur6riwJyxcbn07XG4iLCJ2YXIgX19jbGFzc1ByaXZhdGVGaWVsZFNldCA9ICh0aGlzICYmIHRoaXMuX19jbGFzc1ByaXZhdGVGaWVsZFNldCkgfHwgZnVuY3Rpb24gKHJlY2VpdmVyLCBzdGF0ZSwgdmFsdWUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJtXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIG1ldGhvZCBpcyBub3Qgd3JpdGFibGVcIik7XG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgc2V0dGVyXCIpO1xuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHdyaXRlIHByaXZhdGUgbWVtYmVyIHRvIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIChraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlciwgdmFsdWUpIDogZiA/IGYudmFsdWUgPSB2YWx1ZSA6IHN0YXRlLnNldChyZWNlaXZlciwgdmFsdWUpKSwgdmFsdWU7XG59O1xudmFyIF9fY2xhc3NQcml2YXRlRmllbGRHZXQgPSAodGhpcyAmJiB0aGlzLl9fY2xhc3NQcml2YXRlRmllbGRHZXQpIHx8IGZ1bmN0aW9uIChyZWNlaXZlciwgc3RhdGUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJhXCIgJiYgIWYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIGFjY2Vzc29yIHdhcyBkZWZpbmVkIHdpdGhvdXQgYSBnZXR0ZXJcIik7XG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gcmVjZWl2ZXIgIT09IHN0YXRlIHx8ICFmIDogIXN0YXRlLmhhcyhyZWNlaXZlcikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgcmVhZCBwcml2YXRlIG1lbWJlciBmcm9tIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIGtpbmQgPT09IFwibVwiID8gZiA6IGtpbmQgPT09IFwiYVwiID8gZi5jYWxsKHJlY2VpdmVyKSA6IGYgPyBmLnZhbHVlIDogc3RhdGUuZ2V0KHJlY2VpdmVyKTtcbn07XG52YXIgX3Jlc3RhdXJhbnRBZGRDb250YWluZXJfaW5zdGFuY2VzLCBfcmVzdGF1cmFudEFkZENvbnRhaW5lcl9zdGF0ZSwgX3Jlc3RhdXJhbnRBZGRDb250YWluZXJfdGVtcGxhdGU7XG5pbXBvcnQgJy4uLy4uL2Nzcy9yZXN0YXVyYW50LWFkZC1jb250YWluZXIuY3NzJztcbmltcG9ydCB7ICQgfSBmcm9tICcuLi91dGlscy9zZWxlY3Rvcic7XG5pbXBvcnQgeyBCVVRUT05fVEVYVCwgQ0FURUdPUllfTElTVCwgRElTVEFOQ0VfTElTVCwgSEVMUF9URVhULCBMQUJFTF9URVhULCBUSVRMRSwgfSBmcm9tICcuLi9jb25zdGFudHMvcmVzdGF1cmFudEFkZENvbnRhaW5lcic7XG5jbGFzcyByZXN0YXVyYW50QWRkQ29udGFpbmVyIHtcbiAgICBjb25zdHJ1Y3RvcihzdGF0ZSkge1xuICAgICAgICBfcmVzdGF1cmFudEFkZENvbnRhaW5lcl9pbnN0YW5jZXMuYWRkKHRoaXMpO1xuICAgICAgICBfcmVzdGF1cmFudEFkZENvbnRhaW5lcl9zdGF0ZS5zZXQodGhpcywge1xuICAgICAgICAgICAgc2VsZWN0b3I6ICcnLFxuICAgICAgICB9KTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfcmVzdGF1cmFudEFkZENvbnRhaW5lcl9zdGF0ZSwgc3RhdGUsIFwiZlwiKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICAkKF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX3Jlc3RhdXJhbnRBZGRDb250YWluZXJfc3RhdGUsIFwiZlwiKS5zZWxlY3RvcikuaW5uZXJIVE1MID0gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfcmVzdGF1cmFudEFkZENvbnRhaW5lcl9pbnN0YW5jZXMsIFwibVwiLCBfcmVzdGF1cmFudEFkZENvbnRhaW5lcl90ZW1wbGF0ZSkuY2FsbCh0aGlzKTtcbiAgICB9XG59XG5fcmVzdGF1cmFudEFkZENvbnRhaW5lcl9zdGF0ZSA9IG5ldyBXZWFrTWFwKCksIF9yZXN0YXVyYW50QWRkQ29udGFpbmVyX2luc3RhbmNlcyA9IG5ldyBXZWFrU2V0KCksIF9yZXN0YXVyYW50QWRkQ29udGFpbmVyX3RlbXBsYXRlID0gZnVuY3Rpb24gX3Jlc3RhdXJhbnRBZGRDb250YWluZXJfdGVtcGxhdGUoKSB7XG4gICAgLyogaHRtbCAqL1xuICAgIHJldHVybiBgXG5cdFx0XHQ8aDIgY2xhc3M9XCJtb2RhbC10aXRsZSB0ZXh0LXRpdGxlXCI+JHtUSVRMRX08L2gyPlxuXHRcdFx0PGZvcm0gaWQ9XCJuZXctcmVzdGF1cmFudC1mb3JtXCI+XG5cdFx0XHRcdDwhLS0g7Lm07YWM6rOg66asIC0tPlxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwiZm9ybS1pdGVtIGZvcm0taXRlbS0tcmVxdWlyZWRcIj5cblx0XHRcdFx0XHQ8bGFiZWwgZm9yPVwiY2F0ZWdvcnlcIj4ke0xBQkVMX1RFWFQuQ0FURUdPUll9PC9sYWJlbD5cblx0XHRcdFx0XHQ8c2VsZWN0IG5hbWU9XCJjYXRlZ29yeVwiIGlkPVwiY2F0ZWdvcnlcIiByZXF1aXJlZD5cblx0XHRcdFx0XHRcdCR7Q0FURUdPUllfTElTVC5tYXAoY2F0ZWdvcnkgPT4gYDxvcHRpb24gdmFsdWU9XCIke2NhdGVnb3J5LnZhbHVlfVwiPiR7Y2F0ZWdvcnkudGV4dH08L29wdGlvbj5gKS5qb2luKCcnKX1cblx0XHRcdFx0XHQ8L3NlbGVjdD5cblx0XHRcdFx0PC9kaXY+XG5cblx0XHRcdFx0PCEtLSDsnYzsi53soJAg7J2066aEIC0tPlxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwiZm9ybS1pdGVtIGZvcm0taXRlbS0tcmVxdWlyZWRcIj5cblx0XHRcdFx0XHQ8bGFiZWwgZm9yPVwibmFtZVwiPiR7TEFCRUxfVEVYVC5OQU1FfTwvbGFiZWw+XG5cdFx0XHRcdFx0PGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cIm5hbWVcIiBpZD1cIm5hbWVcIiByZXF1aXJlZCAvPlxuXHRcdFx0XHRcdDxzcGFuIGNsYXNzPVwiaGVscC10ZXh0IHRleHQtY2FwdGlvblwiPiR7SEVMUF9URVhULk5BTUV9PC9zcGFuPlxuXHRcdFx0XHQ8L2Rpdj5cblxuXHRcdFx0XHQ8IS0tIOqxsOumrCAtLT5cblx0XHRcdFx0PGRpdiBjbGFzcz1cImZvcm0taXRlbSBmb3JtLWl0ZW0tLXJlcXVpcmVkXCI+XG5cdFx0XHRcdFx0PGxhYmVsIGZvcj1cImRpc3RhbmNlXCI+JHtMQUJFTF9URVhULkRJU1RBTkNFfTwvbGFiZWw+XG5cdFx0XHRcdFx0PHNlbGVjdCBuYW1lPVwiZGlzdGFuY2VcIiBpZD1cImRpc3RhbmNlXCIgcmVxdWlyZWQ+XG5cdFx0XHRcdFx0XHQke0RJU1RBTkNFX0xJU1QubWFwKGRpc3RhbmNlID0+IGA8b3B0aW9uIHZhbHVlPVwiJHtkaXN0YW5jZS52YWx1ZX1cIj4ke2Rpc3RhbmNlLnRleHR9PC9vcHRpb24+YCl9XG5cdFx0XHRcdFx0PC9zZWxlY3Q+XG5cdFx0XHRcdDwvZGl2PlxuXG5cdFx0XHRcdDwhLS0g7ISk66qFIC0tPlxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwiZm9ybS1pdGVtXCI+XG5cdFx0XHRcdFx0PGxhYmVsIGZvcj1cImRlc2NyaXB0aW9uXCI+JHtMQUJFTF9URVhULkRFU0NSSVBUSU9OfTwvbGFiZWw+XG5cdFx0XHRcdFx0PHRleHRhcmVhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGlkPVwiZGVzY3JpcHRpb25cIiBjb2xzPVwiMzBcIiByb3dzPVwiNVwiPjwvdGV4dGFyZWE+XG5cdFx0XHRcdFx0PHNwYW4gY2xhc3M9XCJoZWxwLXRleHQgdGV4dC1jYXB0aW9uXCI+JHtIRUxQX1RFWFQuREVTQ1JJUFRJT059PC9zcGFuPlxuXHRcdFx0XHQ8L2Rpdj5cblxuXHRcdFx0XHQ8IS0tIOunge2BrCAtLT5cblx0XHRcdFx0PGRpdiBjbGFzcz1cImZvcm0taXRlbVwiPlxuXHRcdFx0XHRcdDxsYWJlbCBmb3I9XCJsaW5rXCI+JHtMQUJFTF9URVhULkxJTkt9PC9sYWJlbD5cblx0XHRcdFx0XHQ8aW5wdXQgdHlwZT1cInVybFwiIG5hbWU9XCJsaW5rXCIgaWQ9XCJsaW5rXCIgcGxhY2Vob2xkZXI9XCJodHRwczovL2V4YW1wbGUuY29tXCIgLz5cblx0XHRcdFx0XHQ8c3BhbiBjbGFzcz1cImhlbHAtdGV4dCB0ZXh0LWNhcHRpb25cIj4ke0hFTFBfVEVYVC5MSU5LfTwvc3Bhbj5cblx0XHRcdFx0PC9kaXY+XG5cblx0XHRcdFx0PCEtLSDst6jshowv7LaU6rCAIOuyhO2KvCAtLT5cblx0XHRcdFx0PGRpdiBjbGFzcz1cImJ1dHRvbi1jb250YWluZXJcIj5cblx0XHRcdFx0XHQ8YnV0dG9uXG5cdFx0XHRcdFx0XHRjbGFzcz1cImJ1dHRvbiBidXR0b24tLXNlY29uZGFyeVwiXG5cdFx0XHRcdFx0XHRpZD1cImFkZC1jYW5jZWxcIlxuXHRcdFx0XHRcdFx0YXJpYS1sYWJlbD1cImNhbmNlbFwiXG5cdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0JHtCVVRUT05fVEVYVC5DQU5DRUx9XG5cdFx0XHRcdFx0PC9idXR0b24+XG5cdFx0XHRcdFx0PGJ1dHRvblxuXHRcdFx0XHRcdFx0Y2xhc3M9XCJidXR0b24gYnV0dG9uLS1wcmltYXJ5XCJcblx0XHRcdFx0XHRcdGFyaWEtbGFiZWw9XCJyZWdpc3RlclwiXG5cdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0JHtCVVRUT05fVEVYVC5BRERJVElPTn1cblx0XHRcdFx0XHQ8L2J1dHRvbj5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHQ8L2Zvcm0+XG5cdFx0YDtcbn07XG5leHBvcnQgZGVmYXVsdCByZXN0YXVyYW50QWRkQ29udGFpbmVyO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Jlc3RhdXJhbnQtYm90dG9tLXNoZWV0LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vcmVzdGF1cmFudC1ib3R0b20tc2hlZXQuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwidmFyIF9fY2xhc3NQcml2YXRlRmllbGRTZXQgPSAodGhpcyAmJiB0aGlzLl9fY2xhc3NQcml2YXRlRmllbGRTZXQpIHx8IGZ1bmN0aW9uIChyZWNlaXZlciwgc3RhdGUsIHZhbHVlLCBraW5kLCBmKSB7XG4gICAgaWYgKGtpbmQgPT09IFwibVwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBtZXRob2QgaXMgbm90IHdyaXRhYmxlXCIpO1xuICAgIGlmIChraW5kID09PSBcImFcIiAmJiAhZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgYWNjZXNzb3Igd2FzIGRlZmluZWQgd2l0aG91dCBhIHNldHRlclwiKTtcbiAgICBpZiAodHlwZW9mIHN0YXRlID09PSBcImZ1bmN0aW9uXCIgPyByZWNlaXZlciAhPT0gc3RhdGUgfHwgIWYgOiAhc3RhdGUuaGFzKHJlY2VpdmVyKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCB3cml0ZSBwcml2YXRlIG1lbWJlciB0byBhbiBvYmplY3Qgd2hvc2UgY2xhc3MgZGlkIG5vdCBkZWNsYXJlIGl0XCIpO1xuICAgIHJldHVybiAoa2luZCA9PT0gXCJhXCIgPyBmLmNhbGwocmVjZWl2ZXIsIHZhbHVlKSA6IGYgPyBmLnZhbHVlID0gdmFsdWUgOiBzdGF0ZS5zZXQocmVjZWl2ZXIsIHZhbHVlKSksIHZhbHVlO1xufTtcbnZhciBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0ID0gKHRoaXMgJiYgdGhpcy5fX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KSB8fCBmdW5jdGlvbiAocmVjZWl2ZXIsIHN0YXRlLCBraW5kLCBmKSB7XG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgZ2V0dGVyXCIpO1xuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHJlYWQgcHJpdmF0ZSBtZW1iZXIgZnJvbSBhbiBvYmplY3Qgd2hvc2UgY2xhc3MgZGlkIG5vdCBkZWNsYXJlIGl0XCIpO1xuICAgIHJldHVybiBraW5kID09PSBcIm1cIiA/IGYgOiBraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlcikgOiBmID8gZi52YWx1ZSA6IHN0YXRlLmdldChyZWNlaXZlcik7XG59O1xudmFyIF9yZXN0YXVyYW50Qm90dG9tU2hlZXRfaW5zdGFuY2VzLCBfcmVzdGF1cmFudEJvdHRvbVNoZWV0X3N0YXRlLCBfcmVzdGF1cmFudEJvdHRvbVNoZWV0X3RlbXBsYXRlO1xuaW1wb3J0ICcuLi8uLi9jc3MvcmVzdGF1cmFudC1ib3R0b20tc2hlZXQuY3NzJztcbmltcG9ydCB7ICQgfSBmcm9tICcuLi91dGlscy9zZWxlY3Rvcic7XG5pbXBvcnQgeyBDQVRFR09SWV9JTUFHRVMgfSBmcm9tICcuLi9jb25zdGFudHMvYXNzZXQnO1xuaW1wb3J0IHsgQlVUVE9OX1RFWFQgfSBmcm9tICcuLi9jb25zdGFudHMvcmVzdGF1cmFudEFkZENvbnRhaW5lcic7XG5jbGFzcyByZXN0YXVyYW50Qm90dG9tU2hlZXQge1xuICAgIGNvbnN0cnVjdG9yKHN0YXRlKSB7XG4gICAgICAgIF9yZXN0YXVyYW50Qm90dG9tU2hlZXRfaW5zdGFuY2VzLmFkZCh0aGlzKTtcbiAgICAgICAgX3Jlc3RhdXJhbnRCb3R0b21TaGVldF9zdGF0ZS5zZXQodGhpcywge1xuICAgICAgICAgICAgc2VsZWN0b3I6ICcnLFxuICAgICAgICB9KTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfcmVzdGF1cmFudEJvdHRvbVNoZWV0X3N0YXRlLCBzdGF0ZSwgXCJmXCIpO1xuICAgIH1cbiAgICByZW5kZXIocmVzdGF1cmFudCkge1xuICAgICAgICAkKF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX3Jlc3RhdXJhbnRCb3R0b21TaGVldF9zdGF0ZSwgXCJmXCIpLnNlbGVjdG9yKS5pbm5lckhUTUwgPSBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9yZXN0YXVyYW50Qm90dG9tU2hlZXRfaW5zdGFuY2VzLCBcIm1cIiwgX3Jlc3RhdXJhbnRCb3R0b21TaGVldF90ZW1wbGF0ZSkuY2FsbCh0aGlzLCByZXN0YXVyYW50KTtcbiAgICB9XG59XG5fcmVzdGF1cmFudEJvdHRvbVNoZWV0X3N0YXRlID0gbmV3IFdlYWtNYXAoKSwgX3Jlc3RhdXJhbnRCb3R0b21TaGVldF9pbnN0YW5jZXMgPSBuZXcgV2Vha1NldCgpLCBfcmVzdGF1cmFudEJvdHRvbVNoZWV0X3RlbXBsYXRlID0gZnVuY3Rpb24gX3Jlc3RhdXJhbnRCb3R0b21TaGVldF90ZW1wbGF0ZSh7IG51bWJlciwgY2F0ZWdvcnksIG5hbWUsIGRpc3RhbmNlLCBkZXNjcmlwdGlvbiwgaXNGYXZvcml0ZSwgbGluaywgfSkge1xuICAgIGNvbnN0IGZhdm9yaXRlT3BlbkNsYXNzID0gaXNGYXZvcml0ZSA/ICdmYXZvcml0ZS1pY29uLWZpbGxlZC0tb3BlbicgOiAnJztcbiAgICAvKiBodG1sICovXG4gICAgcmV0dXJuIGBcblx0XHRcdFx0PGRpdiBjbGFzcz1cImhlYWQtaW5mb1wiPlxuXG5cdFx0XHRcdFx0PCEtLSDsubTthYzqs6DrpqwsIOydjOyLneygkCDsnbTrpoQsIOqxsOumrCDsu6jthYzsnbTrhIggLS0+XG5cdFx0XHRcdFx0PGRpdiBjbGFzcz1cImhlYWQtbGVmdFwiPlxuXG5cdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwicmVzdGF1cmFudF9fY2F0ZWdvcnlcIj5cblx0XHRcdFx0XHRcdFx0PGltZ1xuXHRcdFx0XHRcdFx0XHRcdHNyYz1cIi4vY2F0ZWdvcnktJHtDQVRFR09SWV9JTUFHRVNbY2F0ZWdvcnldfS5wbmdcIlxuXHRcdFx0XHRcdFx0XHRcdGFsdD1cIiR7Y2F0ZWdvcnl9XCJcblx0XHRcdFx0XHRcdFx0XHRjbGFzcz1cImNhdGVnb3J5LWljb25cIlxuXHRcdFx0XHRcdFx0XHQvPlxuXHRcdFx0XHRcdFx0PC9kaXY+XG5cblx0XHRcdFx0XHRcdDxoMyBjbGFzcz1cInJlc3RhdXJhbnRfX25hbWUgdGV4dC1zdWJ0aXRsZVwiPlxuXHRcdFx0XHRcdFx0XHQke25hbWV9XG5cdFx0XHRcdFx0XHQ8L2gzPlxuXG5cdFx0XHRcdFx0XHQ8c3BhbiBjbGFzcz1cInJlc3RhdXJhbnRfX2Rpc3RhbmNlIHRleHQtYm9keVwiPlxuXHRcdFx0XHRcdFx0XHTsuqDtjbzsiqTrtoDthLAgJHtkaXN0YW5jZX3rtoQg64K0XG5cdFx0XHRcdFx0XHQ8L3NwYW4+XG5cdFx0XHRcdFx0PC9kaXY+XG5cblx0XHRcdFx0XHQ8IS0tIOymkOqyqOywvuq4sCDrk7HroZ0v7ZW07KCcIOuyhO2KvCAtLT5cblx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwiZmF2b3JpdGUtaWNvbi1jb250YWluZXJcIj5cblx0XHRcdFx0XHQ8aW1nXG5cdFx0XHRcdFx0XHRzcmM9XCIuL2Zhdm9yaXRlLWljb24tbGluZWQucG5nXCJcblx0XHRcdFx0XHRcdGFsdD1cIuymkOqyqOywvuq4sFwiXG5cdFx0XHRcdFx0XHRjbGFzcz1cImZhdm9yaXRlLWljb24tbGluZWQgZmF2b3JpdGUtaWNvbi1saW5lZC0ke251bWJlcn1cIlxuXHRcdFx0XHRcdC8+XG5cdFx0XHRcdFx0PGltZ1xuXHRcdFx0XHRcdFx0c3JjPVwiLi9mYXZvcml0ZS1pY29uLWZpbGxlZC5wbmdcIlxuXHRcdFx0XHRcdFx0YWx0PVwi7KaQ6rKo7LC+6riwXCJcblx0XHRcdFx0XHRcdGNsYXNzPVwiZmF2b3JpdGUtaWNvbi1maWxsZWQgZmF2b3JpdGUtaWNvbi1maWxsZWQtJHtudW1iZXJ9ICR7ZmF2b3JpdGVPcGVuQ2xhc3N9XCJcblx0XHRcdFx0XHQvPlxuXHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHQ8L2Rpdj5cblxuXHRcdFx0XHQ8IS0tIOydjOyLneygkCDshKTrqoUgLS0+XG5cdFx0XHRcdDxwIGNsYXNzPVwicmVzdGF1cmFudF9fZGVzY3JpcHRpb24gdGV4dC1ib2R5XCI+XG5cdFx0XHRcdFx0JHtkZXNjcmlwdGlvbn1cblx0XHRcdFx0PC9wPlxuXG5cdFx0XHRcdDwhLS0g7ZWY7J207Y2866eB7YGsIC0tPlxuXHRcdFx0XHQ8YSBjbGFzcz1cInJlc3RhdXJhbnQtbGlua1wiXG5cdFx0XHRcdFx0aHJlZj1cIiR7bGlua31cIlxuXHRcdFx0XHQ+XG5cdFx0XHRcdCR7bGlua31cblx0XHRcdFx0PC9hPlxuXG5cdFx0XHRcdDwhLS0g7IKt7KCcL+uLq+q4sCDrsoTtirwgLS0+XG5cdFx0XHRcdDxkaXYgY2xhc3M9XCJidXR0b24tY29udGFpbmVyLWluZm8tbW9kYWxcIj5cblx0XHRcdFx0XHQ8YnV0dG9uXG5cdFx0XHRcdFx0XHRjbGFzcz1cImJ1dHRvbiBidXR0b24tLXNlY29uZGFyeSB0ZXh0LWNhcHRpb25cIlxuXHRcdFx0XHRcdFx0YXJpYS1sYWJlbD1cImRlbGV0ZVwiXG5cdFx0XHRcdFx0XHRuYW1lPVwiJHtudW1iZXJ9XCJcblx0XHRcdFx0XHQ+XG5cdFx0XHRcdFx0XHQke0JVVFRPTl9URVhULkRFTEVURX1cblx0XHRcdFx0XHQ8L2J1dHRvbj5cblx0XHRcdFx0XHQ8YnV0dG9uIGNsYXNzPVwiYnV0dG9uIGJ1dHRvbi0tcHJpbWFyeSB0ZXh0LWNhcHRpb25cIiBhcmlhLWxhYmVsPVwiY2xvc2VcIj5cblx0XHRcdFx0XHRcdCR7QlVUVE9OX1RFWFQuQ0xPU0V9XG5cdFx0XHRcdFx0PC9idXR0b24+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdGA7XG59O1xuZXhwb3J0IGRlZmF1bHQgcmVzdGF1cmFudEJvdHRvbVNoZWV0O1xuIiwiZXhwb3J0IGNvbnN0IEZJTFRFUl9JRCA9IHtcbiAgICBDQVRFR09SWTogJ2NhdGVnb3J5LWZpbHRlcicsXG4gICAgU09SVElORzogJ3NvcnRpbmctZmlsdGVyJyxcbn07XG5leHBvcnQgY29uc3QgRklMVEVSX05BTUUgPSB7XG4gICAgQ0FURUdPUlk6ICdjYXRlZ29yeScsXG4gICAgU09SVElORzogJ3NvcnRpbmcnLFxufTtcbmV4cG9ydCBjb25zdCBGSUxURVJfQ0xBU1MgPSAncmVzdGF1cmFudC1TRUxFQ1QnO1xuZXhwb3J0IGNvbnN0IFNFTEVDVF9PUFRJT05fTElTVCA9IHtcbiAgICBDQVRFR09SWTogW1xuICAgICAgICB7IHZhbHVlOiAn7KCE7LK0JywgdGV4dDogJ+yghOyytCcgfSxcbiAgICAgICAgeyB2YWx1ZTogJ+2VnOyLnScsIHRleHQ6ICftlZzsi50nIH0sXG4gICAgICAgIHsgdmFsdWU6ICfspJHsi50nLCB0ZXh0OiAn7KSR7IudJyB9LFxuICAgICAgICB7IHZhbHVlOiAn7J287IudJywgdGV4dDogJ+ydvOyLnScgfSxcbiAgICAgICAgeyB2YWx1ZTogJ+yWkeyLnScsIHRleHQ6ICfslpHsi50nIH0sXG4gICAgICAgIHsgdmFsdWU6ICfslYTsi5zslYgnLCB0ZXh0OiAn7JWE7Iuc7JWIJyB9LFxuICAgICAgICB7IHZhbHVlOiAn6riw7YOAJywgdGV4dDogJ+q4sO2DgCcgfSxcbiAgICBdLFxuICAgIFNPUlRJTkc6IFtcbiAgICAgICAgeyB2YWx1ZTogJ25hbWUnLCB0ZXh0OiAn7J2066aE7IicJyB9LFxuICAgICAgICB7IHZhbHVlOiAnZGlzdGFuY2UnLCB0ZXh0OiAn6rGw66as7IicJyB9LFxuICAgIF0sXG59O1xuZXhwb3J0IGNvbnN0IEZJTFRFUl9PUFRJT04gPSB7XG4gICAgTkFNRTogJ25hbWUnLFxuICAgIERJU1RBTkNFOiAnZGlzdGFuY2UnLFxuICAgIEFMTF9DQVRFR09SSUVTOiAn7KCE7LK0Jyxcbn07XG4iLCJpbXBvcnQgSGVhZGVyIGZyb20gJy4vaGVhZGVyJztcbmltcG9ydCBOYXZpZ2F0aW9uIGZyb20gJy4vbmF2aWdhdGlvbic7XG5pbXBvcnQgU2VsZWN0IGZyb20gJy4vc2VsZWN0JztcbmltcG9ydCBSZXN0YXVyYW50TGlzdCBmcm9tICcuL3Jlc3RhdXJhbnRMaXN0JztcbmltcG9ydCBNb2RhbCBmcm9tICcuL21vZGFsJztcbmltcG9ydCByZXN0YXVyYW50QWRkQ29udGFpbmVyIGZyb20gJy4vcmVzdGF1cmFudEFkZENvbnRhaW5lcic7XG5pbXBvcnQgcmVzdGF1cmFudEJvdHRvbVNoZWV0IGZyb20gJy4vcmVzdGF1cmFudEJvdHRvbVNoZWV0JztcbmltcG9ydCB7IEZJTFRFUl9JRCwgRklMVEVSX0NMQVNTLCBGSUxURVJfTkFNRSB9IGZyb20gJy4uL2NvbnN0YW50cy9maWx0ZXInO1xuaW1wb3J0IHsgU0VMRUNUX09QVElPTl9MSVNUIH0gZnJvbSAnLi4vY29uc3RhbnRzL2ZpbHRlcic7XG5pbXBvcnQgeyBnZXRMaXN0T25Mb2NhbFN0b3JhZ2UgfSBmcm9tICcuLi91dGlscy9sb2NhbFN0b3JhZ2UnO1xuaW1wb3J0IHsgTE9DQUxfU1RPUkFHRV9LRVkgfSBmcm9tICcuLi9jb25zdGFudHMvbG9jYWxTdG9yYWdlJztcbmV4cG9ydCBjb25zdCBjb21wb25lbnRzID0ge1xuICAgIGhlYWRlcjogbmV3IEhlYWRlcih7IHNlbGVjdG9yOiAnaGVhZGVyJywgdGl0bGU6ICfsoJDsi6wg662QIOuoueyngCcgfSksXG4gICAgbmF2QmFyOiBuZXcgTmF2aWdhdGlvbih7IHNlbGVjdG9yOiAnbmF2JywgY2xhc3M6ICduYXYtY29udGFpbmVyJyB9KSxcbiAgICBjYXRlZ29yeUZpbHRlcjogbmV3IFNlbGVjdCh7XG4gICAgICAgIHNlbGVjdG9yOiAnLnJlc3RhdXJhbnQtZmlsdGVyLWNvbnRhaW5lcicsXG4gICAgICAgIGlkOiBGSUxURVJfSUQuQ0FURUdPUlksXG4gICAgICAgIG5hbWU6IEZJTFRFUl9OQU1FLkNBVEVHT1JZLFxuICAgICAgICBjbGFzczogRklMVEVSX0NMQVNTLFxuICAgICAgICBvcHRpb25MaXN0OiBTRUxFQ1RfT1BUSU9OX0xJU1QuQ0FURUdPUlksXG4gICAgfSksXG4gICAgc29ydGluZ0ZpbHRlcjogbmV3IFNlbGVjdCh7XG4gICAgICAgIHNlbGVjdG9yOiAnLnJlc3RhdXJhbnQtZmlsdGVyLWNvbnRhaW5lcicsXG4gICAgICAgIGlkOiBGSUxURVJfSUQuU09SVElORyxcbiAgICAgICAgbmFtZTogRklMVEVSX05BTUUuU09SVElORyxcbiAgICAgICAgY2xhc3M6IEZJTFRFUl9DTEFTUyxcbiAgICAgICAgb3B0aW9uTGlzdDogU0VMRUNUX09QVElPTl9MSVNULlNPUlRJTkcsXG4gICAgfSksXG4gICAgcmVzdGF1cmFudExpc3Q6IG5ldyBSZXN0YXVyYW50TGlzdCh7XG4gICAgICAgIGxpc3RSZW5kZXJTZWxlY3RvcjogJy5yZXN0YXVyYW50LWxpc3QnLFxuICAgICAgICBhZGRpdGlvblJlbmRlclNlbGVjdG9yOiAnLnJlc3RhdXJhbnQnLFxuICAgIH0pLFxuICAgIHJlc3RhdXJhbnRBZGRNb2RhbDogbmV3IE1vZGFsKHtcbiAgICAgICAgc2VsZWN0b3I6ICcucmVzdGF1cmFudC1hZGQtbW9kYWwnLFxuICAgICAgICBpZDogJ3Jlc3RhdXJhbnQtYWRkLW1vZGFsJyxcbiAgICAgICAgYmFja2Ryb3A6ICdyZXN0YXVyYW50LWFkZC1iYWNrZHJvcCcsXG4gICAgICAgIGNvbnRhaW5lcjogJ3Jlc3RhdXJhbnQtYWRkLWNvbnRhaW5lcicsXG4gICAgfSksXG4gICAgcmVzdGF1cmFudEFkZENvbnRhaW5lcjogbmV3IHJlc3RhdXJhbnRBZGRDb250YWluZXIoe1xuICAgICAgICBzZWxlY3RvcjogJy5yZXN0YXVyYW50LWFkZC1jb250YWluZXInLFxuICAgIH0pLFxuICAgIHJlc3RhdXJhbnRCb3R0b21TaGVldDogbmV3IE1vZGFsKHtcbiAgICAgICAgc2VsZWN0b3I6ICcucmVzdGF1cmFudC1ib3R0b20tc2hlZXQnLFxuICAgICAgICBpZDogJ3Jlc3RhdXJhbnQtYm90dG9tLXNoZWV0JyxcbiAgICAgICAgYmFja2Ryb3A6ICdyZXN0YXVyYW50LWJvdHRvbS1zaGVldC1iYWNrZHJvcCcsXG4gICAgICAgIGNvbnRhaW5lcjogJ3Jlc3RhdXJhbnQtYm90dG9tLXNoZWV0LWNvbnRhaW5lcicsXG4gICAgfSksXG4gICAgcmVzdGF1cmFudEJvdHRvbVNoZWV0Q29udGFpbmVyOiBuZXcgcmVzdGF1cmFudEJvdHRvbVNoZWV0KHtcbiAgICAgICAgc2VsZWN0b3I6ICcucmVzdGF1cmFudC1ib3R0b20tc2hlZXQtY29udGFpbmVyJyxcbiAgICB9KSxcbiAgICBpbml0UmVuZGVyKCkge1xuICAgICAgICB0aGlzLmhlYWRlci5yZW5kZXIoKTtcbiAgICAgICAgdGhpcy5uYXZCYXIucmVuZGVyKCk7XG4gICAgICAgIHRoaXMuY2F0ZWdvcnlGaWx0ZXIucmVuZGVyKCk7XG4gICAgICAgIHRoaXMuc29ydGluZ0ZpbHRlci5yZW5kZXIoKTtcbiAgICAgICAgdGhpcy5yZXN0YXVyYW50TGlzdC5yZW5kZXIoZ2V0TGlzdE9uTG9jYWxTdG9yYWdlKExPQ0FMX1NUT1JBR0VfS0VZLlJFU1RBVVJBTlRfTElTVCkpO1xuICAgICAgICB0aGlzLnJlc3RhdXJhbnRBZGRNb2RhbC5yZW5kZXIoKTtcbiAgICAgICAgdGhpcy5yZXN0YXVyYW50QWRkQ29udGFpbmVyLnJlbmRlcigpO1xuICAgICAgICB0aGlzLnJlc3RhdXJhbnRCb3R0b21TaGVldC5yZW5kZXIoKTtcbiAgICB9LFxufTtcbiIsImltcG9ydCB7ICQgfSBmcm9tICcuLi91dGlscy9zZWxlY3Rvcic7XG5leHBvcnQgY29uc3QgcmVzZXRGb3JtID0gKGZvcm1TZWxlY3RvcikgPT4ge1xuICAgIGNvbnN0ICRmb3JtID0gJChmb3JtU2VsZWN0b3IpO1xuICAgIGlmICgkZm9ybSBpbnN0YW5jZW9mIEhUTUxGb3JtRWxlbWVudCkge1xuICAgICAgICAkZm9ybS5yZXNldCgpO1xuICAgIH1cbn07XG5leHBvcnQgY29uc3Qgc2Nyb2xsVG9Ub3BGb3JtID0gKHRhcmdldCkgPT4ge1xuICAgIGNvbnN0ICR0YXJnZXQgPSAkKHRhcmdldCk7XG4gICAgaWYgKCR0YXJnZXQgaW5zdGFuY2VvZiBIVE1MRm9ybUVsZW1lbnQpIHtcbiAgICAgICAgJHRhcmdldC5zY3JvbGxUbygwLCAwKTtcbiAgICB9XG59O1xuIiwiaW1wb3J0IHsgJCB9IGZyb20gJy4uL3V0aWxzL3NlbGVjdG9yJztcbmV4cG9ydCBjb25zdCBoYW5kbGVNb2RhbENsb3NlID0gKHNlbGVjdG9yKSA9PiB7XG4gICAgJChzZWxlY3Rvcik/LmNsYXNzTGlzdC5yZW1vdmUoJ21vZGFsLS1vcGVuJyk7XG59O1xuZXhwb3J0IGNvbnN0IGhhbmRsZU1vZGFsT3BlbiA9IChzZWxlY3RvcikgPT4ge1xuICAgICQoc2VsZWN0b3IpPy5jbGFzc0xpc3QuYWRkKCdtb2RhbC0tb3BlbicpO1xufTtcbiIsImV4cG9ydCBjb25zdCBTRUxFQ1RFRF9DTEFTU19OQU1FID0ge1xuICAgIFRFWFQ6ICdzZWxlY3RlZC10ZXh0JyxcbiAgICBCQVI6ICdzZWxlY3RlZC1iYXInLFxufTtcbmV4cG9ydCBjb25zdCBBUklBX0xBQkVMID0ge1xuICAgIEFMTF9SRVNUQVVSQU5UUzogJ2FsbC1yZXN0YXVyYW50cycsXG59O1xuIiwiaW1wb3J0IHsgJCB9IGZyb20gJy4uL3V0aWxzL3NlbGVjdG9yJztcbmltcG9ydCB7IFNFTEVDVE9SIH0gZnJvbSAnLi4vY29uc3RhbnRzL3NlbGVjdG9yJztcbmltcG9ydCB7IGNvbXBvbmVudHMgfSBmcm9tICcuLi9jb21wb25lbnRzL2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgQVJJQV9MQUJFTCwgU0VMRUNURURfQ0xBU1NfTkFNRSB9IGZyb20gJy4uL2NvbnN0YW50cy9uYXZpZ2F0aW9uJztcbmltcG9ydCB7IGdldExpc3RPbkxvY2FsU3RvcmFnZSB9IGZyb20gJy4uL3V0aWxzL2xvY2FsU3RvcmFnZSc7XG5pbXBvcnQgeyBMT0NBTF9TVE9SQUdFX0tFWSB9IGZyb20gJy4uL2NvbnN0YW50cy9sb2NhbFN0b3JhZ2UnO1xuZXhwb3J0IGNvbnN0IGhhbmRsZU5hdmlnYXRpb25DbGljayA9ICh0YXJnZXQpID0+IHtcbiAgICBpZiAoaXNBbGxSZXN0YXVyYW50cyh0YXJnZXQpKSB7XG4gICAgICAgIGNvbXBvbmVudHMuY2F0ZWdvcnlGaWx0ZXIuc2hvdygpO1xuICAgICAgICBjb21wb25lbnRzLnNvcnRpbmdGaWx0ZXIuc2hvdygpO1xuICAgICAgICByZXR1cm4gZ2V0TGlzdE9uTG9jYWxTdG9yYWdlKExPQ0FMX1NUT1JBR0VfS0VZLlJFU1RBVVJBTlRfTElTVCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb21wb25lbnRzLmNhdGVnb3J5RmlsdGVyLmhpZGUoKTtcbiAgICAgICAgY29tcG9uZW50cy5zb3J0aW5nRmlsdGVyLmhpZGUoKTtcbiAgICAgICAgcmV0dXJuIGdldExpc3RPbkxvY2FsU3RvcmFnZShMT0NBTF9TVE9SQUdFX0tFWS5GQVZPUklURV9MSVNUKTtcbiAgICB9XG59O1xuY29uc3QgaXNBbGxSZXN0YXVyYW50cyA9ICh0YXJnZXQpID0+IHtcbiAgICBpZiAodGFyZ2V0LmFyaWFMYWJlbCA9PT0gQVJJQV9MQUJFTC5BTExfUkVTVEFVUkFOVFMpIHtcbiAgICAgICAgcmV0dXJuIHRvZ2dsZVNlbGVjdGVkKHRydWUpO1xuICAgIH1cbiAgICByZXR1cm4gdG9nZ2xlU2VsZWN0ZWQoZmFsc2UpO1xufTtcbmNvbnN0IHRvZ2dsZVNlbGVjdGVkID0gKGlzQWxsUmVzdGF1cmFudHMpID0+IHtcbiAgICBjb25zdCAkbmF2aWdhdGlvbiA9IHtcbiAgICAgICAgJHByaW1hcnlUZXh0OiAkKFNFTEVDVE9SLlRFWFRfQlVUVE9OX1BSSU1BUlkpLFxuICAgICAgICAkcHJpbWFyeUJhcjogJChTRUxFQ1RPUi5CQVJfQlVUVE9OX1BSSU1BUlkpLFxuICAgICAgICAkc2Vjb25kYXJ5VGV4dDogJChTRUxFQ1RPUi5URVhUX0JVVFRPTl9TRUNPTkRBUlkpLFxuICAgICAgICAkc2Vjb25kYXJ5QmFyOiAkKFNFTEVDVE9SLkJBUl9CVVRUT05fU0VDT05EQVJZKSxcbiAgICB9O1xuICAgIGlmIChpc0FsbFJlc3RhdXJhbnRzKSB7XG4gICAgICAgICRuYXZpZ2F0aW9uLiRwcmltYXJ5VGV4dD8uY2xhc3NMaXN0LmFkZChTRUxFQ1RFRF9DTEFTU19OQU1FLlRFWFQpO1xuICAgICAgICAkbmF2aWdhdGlvbi4kcHJpbWFyeUJhcj8uY2xhc3NMaXN0LmFkZChTRUxFQ1RFRF9DTEFTU19OQU1FLkJBUik7XG4gICAgICAgICRuYXZpZ2F0aW9uLiRzZWNvbmRhcnlUZXh0Py5jbGFzc0xpc3QucmVtb3ZlKFNFTEVDVEVEX0NMQVNTX05BTUUuVEVYVCk7XG4gICAgICAgICRuYXZpZ2F0aW9uLiRzZWNvbmRhcnlCYXI/LmNsYXNzTGlzdC5yZW1vdmUoU0VMRUNURURfQ0xBU1NfTkFNRS5CQVIpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgJG5hdmlnYXRpb24uJHNlY29uZGFyeVRleHQ/LmNsYXNzTGlzdC5hZGQoU0VMRUNURURfQ0xBU1NfTkFNRS5URVhUKTtcbiAgICAgICAgJG5hdmlnYXRpb24uJHNlY29uZGFyeUJhcj8uY2xhc3NMaXN0LmFkZChTRUxFQ1RFRF9DTEFTU19OQU1FLkJBUik7XG4gICAgICAgICRuYXZpZ2F0aW9uLiRwcmltYXJ5VGV4dD8uY2xhc3NMaXN0LnJlbW92ZShTRUxFQ1RFRF9DTEFTU19OQU1FLlRFWFQpO1xuICAgICAgICAkbmF2aWdhdGlvbi4kcHJpbWFyeUJhcj8uY2xhc3NMaXN0LnJlbW92ZShTRUxFQ1RFRF9DTEFTU19OQU1FLkJBUik7XG4gICAgfVxuICAgIHJldHVybiBpc0FsbFJlc3RhdXJhbnRzO1xufTtcbiIsImV4cG9ydCBjb25zdCBTRUxFQ1RPUiA9IHtcbiAgICBNT0RBTDogJy5tb2RhbCcsXG4gICAgVEVYVF9CVVRUT05fUFJJTUFSWTogJy50ZXh0LWJ1dHRvbi0tcHJpbWFyeScsXG4gICAgVEVYVF9CVVRUT05fU0VDT05EQVJZOiAnLnRleHQtYnV0dG9uLS1zZWNvbmRhcnknLFxuICAgIEJBUl9CVVRUT05fUFJJTUFSWTogJy5iYXItYnV0dG9uLS1wcmltYXJ5JyxcbiAgICBCQVJfQlVUVE9OX1NFQ09OREFSWTogJy5iYXItYnV0dG9uLS1zZWNvbmRhcnknLFxufTtcbiIsImltcG9ydCB7IEZJTFRFUl9PUFRJT04gfSBmcm9tICcuLi9jb25zdGFudHMvZmlsdGVyJztcbmltcG9ydCB7IExPQ0FMX1NUT1JBR0VfS0VZIH0gZnJvbSAnLi4vY29uc3RhbnRzL2xvY2FsU3RvcmFnZSc7XG5pbXBvcnQgeyBnZXRMaXN0T25Mb2NhbFN0b3JhZ2UgfSBmcm9tICcuLi91dGlscy9sb2NhbFN0b3JhZ2UnO1xuY29uc3QgZmlsdGVyID0ge1xuICAgIHNvcnRCeU9wdGlvbihzb3J0aW5nT3B0aW9uKSB7XG4gICAgICAgIGNvbnN0IHJlc3RhdXJhbnRMaXN0ID0gZ2V0TGlzdE9uTG9jYWxTdG9yYWdlKExPQ0FMX1NUT1JBR0VfS0VZLlJFU1RBVVJBTlRfTElTVCk7XG4gICAgICAgIGlmIChzb3J0aW5nT3B0aW9uID09PSBGSUxURVJfT1BUSU9OLk5BTUUpIHtcbiAgICAgICAgICAgIHJldHVybiBzb3J0QnlOYW1lKHJlc3RhdXJhbnRMaXN0KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc29ydGluZ09wdGlvbiA9PT0gRklMVEVSX09QVElPTi5ESVNUQU5DRSkge1xuICAgICAgICAgICAgcmV0dXJuIHNvcnRCeURpc3RhbmNlKHJlc3RhdXJhbnRMaXN0KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc29ydGluZ09wdGlvbiAhPT0gRklMVEVSX09QVElPTi5BTExfQ0FURUdPUklFUykge1xuICAgICAgICAgICAgcmV0dXJuIHNvcnRCeUNhdGVnb3JpZXMocmVzdGF1cmFudExpc3QsIHNvcnRpbmdPcHRpb24pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN0YXVyYW50TGlzdDtcbiAgICB9LFxufTtcbmNvbnN0IHNvcnRCeU5hbWUgPSAocmVzdGF1cmFudExpc3QpID0+IHtcbiAgICByZXR1cm4gcmVzdGF1cmFudExpc3Quc29ydCgoYSwgYikgPT4ge1xuICAgICAgICBpZiAoYS5uYW1lID4gYi5uYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYS5uYW1lIDwgYi5uYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfSk7XG59O1xuY29uc3Qgc29ydEJ5RGlzdGFuY2UgPSAocmVzdGF1cmFudExpc3QpID0+IHtcbiAgICByZXR1cm4gcmVzdGF1cmFudExpc3Quc29ydCgoYSwgYikgPT4gTnVtYmVyKGEuZGlzdGFuY2UpIC0gTnVtYmVyKGIuZGlzdGFuY2UpKTtcbn07XG5jb25zdCBzb3J0QnlDYXRlZ29yaWVzID0gKHJlc3RhdXJhbnRMaXN0LCBzb3J0aW5nT3B0aW9uKSA9PiB7XG4gICAgcmV0dXJuIHJlc3RhdXJhbnRMaXN0LmZpbHRlcihyZXN0YXVyYW50ID0+IHJlc3RhdXJhbnQuY2F0ZWdvcnkgPT09IHNvcnRpbmdPcHRpb24pO1xufTtcbmV4cG9ydCBkZWZhdWx0IGZpbHRlcjtcbiIsImV4cG9ydCBjb25zdCBpc1Jlc3RhdXJhbnQgPSAocmVzdGF1cmFudCkgPT4ge1xuICAgIHJldHVybiAoJ251bWJlcicgaW4gcmVzdGF1cmFudCAmJlxuICAgICAgICAnY2F0ZWdvcnknIGluIHJlc3RhdXJhbnQgJiZcbiAgICAgICAgJ25hbWUnIGluIHJlc3RhdXJhbnQgJiZcbiAgICAgICAgJ2Rpc3RhbmNlJyBpbiByZXN0YXVyYW50ICYmXG4gICAgICAgICdkZXNjcmlwdGlvbicgaW4gcmVzdGF1cmFudCAmJlxuICAgICAgICAnbGluaycgaW4gcmVzdGF1cmFudCAmJlxuICAgICAgICAnaXNGYXZvcml0ZScgaW4gcmVzdGF1cmFudCk7XG59O1xuZXhwb3J0IGNvbnN0IGlzUmVzdGF1cmFudExpc3QgPSAocmVzdGF1cmFudExpc3QpID0+IHtcbiAgICByZXR1cm4gcmVzdGF1cmFudExpc3QuZXZlcnkoKHJlc3RhdXJhbnQpID0+IGlzUmVzdGF1cmFudChyZXN0YXVyYW50KSk7XG59O1xuIiwiaW1wb3J0IHsgaXNSZXN0YXVyYW50TGlzdCB9IGZyb20gJy4uL3R5cGUvY3VzdG9tVHlwZUd1YXJkcyc7XG5pbXBvcnQgeyBnZXRMaXN0T25Mb2NhbFN0b3JhZ2UgfSBmcm9tICcuLi91dGlscy9sb2NhbFN0b3JhZ2UnO1xuaW1wb3J0IHsgJCwgJCQgfSBmcm9tICcuLi91dGlscy9zZWxlY3Rvcic7XG5pbXBvcnQgeyBMT0NBTF9TVE9SQUdFX0tFWSB9IGZyb20gJy4uL2NvbnN0YW50cy9sb2NhbFN0b3JhZ2UnO1xuZXhwb3J0IGNvbnN0IGhhbmRsZUZhdm9yaXRlSWNvbkNsaWNrID0gKHRhcmdldCwgUmVzdGF1cmFudE1hbmFnZXIpID0+IHtcbiAgICBjb25zdCByZXN0YXVyYW50TGlzdCA9IGdldExpc3RPbkxvY2FsU3RvcmFnZShMT0NBTF9TVE9SQUdFX0tFWS5SRVNUQVVSQU5UX0xJU1QpO1xuICAgIGNvbnN0IGZhdm9yaXRlTGlzdCA9IGdldExpc3RPbkxvY2FsU3RvcmFnZShMT0NBTF9TVE9SQUdFX0tFWS5GQVZPUklURV9MSVNUKTtcbiAgICBpZiAoaXNSZXN0YXVyYW50TGlzdChyZXN0YXVyYW50TGlzdCkgJiYgaXNSZXN0YXVyYW50TGlzdChmYXZvcml0ZUxpc3QpKSB7XG4gICAgICAgIGNvbnN0IG51bWJlciA9IHBhcnNlSW50KHRhcmdldC5jbGFzc05hbWUuc3BsaXQoJyAnKVsxXS5zcGxpdCgnLScpWzNdLCAxMCk7XG4gICAgICAgIGlmICh0b2dnbGVGYXZvcml0ZUljb24obnVtYmVyKSkge1xuICAgICAgICAgICAgYWRkRmF2b3JpdGVJdGVtKHsgcmVzdGF1cmFudExpc3QsIGZhdm9yaXRlTGlzdCB9LCBudW1iZXIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmVtb3ZlRmF2b3JpdGVJdGVtKHsgcmVzdGF1cmFudExpc3QsIGZhdm9yaXRlTGlzdCB9LCBudW1iZXIpO1xuICAgICAgICB9XG4gICAgICAgIFJlc3RhdXJhbnRNYW5hZ2VyLnVwZGF0ZVJlc3RhdXJhbnRMaXN0KHJlc3RhdXJhbnRMaXN0KTtcbiAgICAgICAgUmVzdGF1cmFudE1hbmFnZXIudXBkYXRlRmF2b3JpdGVMaXN0KGZhdm9yaXRlTGlzdCk7XG4gICAgfVxufTtcbmNvbnN0IHRvZ2dsZUZhdm9yaXRlSWNvbiA9IChudW1iZXIpID0+IHtcbiAgICAkJChgLmZhdm9yaXRlLWljb24tZmlsbGVkLSR7bnVtYmVyfWApPy5mb3JFYWNoKGVsZW1lbnQgPT4gZWxlbWVudC5jbGFzc0xpc3QudG9nZ2xlKCdmYXZvcml0ZS1pY29uLWZpbGxlZC0tb3BlbicpKTtcbiAgICBjb25zdCBpc0ZpbGxlZCA9ICQoYC5mYXZvcml0ZS1pY29uLWZpbGxlZC0ke251bWJlcn1gKT8uY2xhc3NMaXN0LmNvbnRhaW5zKCdmYXZvcml0ZS1pY29uLWZpbGxlZC0tb3BlbicpO1xuICAgIHJldHVybiBpc0ZpbGxlZDtcbn07XG5jb25zdCBpc0Zhdm9yaXRlSXRlbSA9IChmYXZvcml0ZUxpc3QsIHNlbGVjdGVkKSA9PiB7XG4gICAgcmV0dXJuIGZhdm9yaXRlTGlzdC5maW5kKGZhdm9yaXRlID0+IGZhdm9yaXRlLm5hbWUgPT09IHNlbGVjdGVkLm5hbWUpO1xufTtcbmNvbnN0IGFkZEZhdm9yaXRlSXRlbSA9ICh7IHJlc3RhdXJhbnRMaXN0LCBmYXZvcml0ZUxpc3QsIH0sIG51bWJlcikgPT4ge1xuICAgIGNvbnN0IHNlbGVjdGVkID0gcmVzdGF1cmFudExpc3RbbnVtYmVyXTtcbiAgICBpZiAoaXNGYXZvcml0ZUl0ZW0oZmF2b3JpdGVMaXN0LCBzZWxlY3RlZCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBmYXZvcml0ZUxpc3QucHVzaChzZWxlY3RlZCk7XG4gICAgcmVzdGF1cmFudExpc3RbbnVtYmVyXS5pc0Zhdm9yaXRlID0gdHJ1ZTtcbiAgICBmYXZvcml0ZUxpc3RbZmF2b3JpdGVMaXN0Lmxlbmd0aCAtIDFdLmlzRmF2b3JpdGUgPSB0cnVlO1xufTtcbmNvbnN0IHJlbW92ZUZhdm9yaXRlSXRlbSA9ICh7IHJlc3RhdXJhbnRMaXN0LCBmYXZvcml0ZUxpc3QsIH0sIG51bWJlcikgPT4ge1xuICAgIHJlc3RhdXJhbnRMaXN0W251bWJlcl0uaXNGYXZvcml0ZSA9IGZhbHNlO1xuICAgIGNvbnN0IGluZGV4ID0gZmF2b3JpdGVMaXN0LmZpbmRJbmRleChmYXZvcml0ZSA9PiBmYXZvcml0ZS5uYW1lID09PSByZXN0YXVyYW50TGlzdFtudW1iZXJdLm5hbWUpO1xuICAgIGZhdm9yaXRlTGlzdC5zcGxpY2UoaW5kZXgsIDEpO1xufTtcbiIsImltcG9ydCB7IHJlc2V0Rm9ybSwgc2Nyb2xsVG9Ub3BGb3JtIH0gZnJvbSAnLi9mb3JtJztcbmltcG9ydCB7IGhhbmRsZU1vZGFsQ2xvc2UgfSBmcm9tICcuL21vZGFsJztcbmV4cG9ydCBjb25zdCBoYW5kbGVOZXdSZXN0YXVyYW50Q2FuY2VsQ2xpY2sgPSAoKSA9PiB7XG4gICAgaGFuZGxlTmV3UmVzdGF1cmFudENsb3NlKCk7XG59O1xuZXhwb3J0IGNvbnN0IGhhbmRsZU5ld1Jlc3RhdXJhbnRBZGRTdWJtaXQgPSAoKSA9PiB7XG4gICAgaGFuZGxlTmV3UmVzdGF1cmFudENsb3NlKCk7XG59O1xuZXhwb3J0IGNvbnN0IGhhbmRsZUJhY2tkcm9wQ2xpY2sgPSAoKSA9PiB7XG4gICAgaGFuZGxlTmV3UmVzdGF1cmFudENsb3NlKCk7XG59O1xuY29uc3QgaGFuZGxlTmV3UmVzdGF1cmFudENsb3NlID0gKCkgPT4ge1xuICAgIGhhbmRsZU1vZGFsQ2xvc2UoJyNyZXN0YXVyYW50LWFkZC1tb2RhbCcpO1xuICAgIHJlc2V0Rm9ybSgnI25ldy1yZXN0YXVyYW50LWZvcm0nKTtcbiAgICBzY3JvbGxUb1RvcEZvcm0oJy5yZXN0YXVyYW50LWFkZC1jb250YWluZXInKTtcbn07XG4iLCJpbXBvcnQgeyAkIH0gZnJvbSAnLi9zZWxlY3Rvcic7XG5leHBvcnQgY29uc3QgZXhlY3V0ZUV2ZW50TGlzdGVuZXIgPSAoc2VsZWN0b3IsIHR5cGUsIGNhbGxiYWNrKSA9PiB7XG4gICAgJChzZWxlY3Rvcik/LmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgY2FsbGJhY2spO1xufTtcbiIsImltcG9ydCB7IGlzUmVzdGF1cmFudExpc3QgfSBmcm9tICcuLi90eXBlL2N1c3RvbVR5cGVHdWFyZHMnO1xuaW1wb3J0IHsgZ2V0TGlzdE9uTG9jYWxTdG9yYWdlIH0gZnJvbSAnLi4vdXRpbHMvbG9jYWxTdG9yYWdlJztcbmltcG9ydCB7IExPQ0FMX1NUT1JBR0VfS0VZIH0gZnJvbSAnLi4vY29uc3RhbnRzL2xvY2FsU3RvcmFnZSc7XG5leHBvcnQgY29uc3QgaGFuZGxlRGVsZXRlQ2xpY2sgPSAodGFyZ2V0LCBSZXN0YXVyYW50TWFuYWdlcikgPT4ge1xuICAgIGNvbnN0IHJlc3RhdXJhbnRMaXN0ID0gZ2V0TGlzdE9uTG9jYWxTdG9yYWdlKExPQ0FMX1NUT1JBR0VfS0VZLlJFU1RBVVJBTlRfTElTVCk7XG4gICAgY29uc3QgZmF2b3JpdGVMaXN0ID0gZ2V0TGlzdE9uTG9jYWxTdG9yYWdlKExPQ0FMX1NUT1JBR0VfS0VZLkZBVk9SSVRFX0xJU1QpO1xuICAgIGlmIChpc1Jlc3RhdXJhbnRMaXN0KHJlc3RhdXJhbnRMaXN0KSAmJiBpc1Jlc3RhdXJhbnRMaXN0KGZhdm9yaXRlTGlzdCkpIHtcbiAgICAgICAgZGVsZXRlSXRlbSh0YXJnZXQsIHsgcmVzdGF1cmFudExpc3QsIGZhdm9yaXRlTGlzdCB9LCBSZXN0YXVyYW50TWFuYWdlcik7XG4gICAgfVxufTtcbmNvbnN0IGRlbGV0ZUl0ZW0gPSAodGFyZ2V0LCB7IHJlc3RhdXJhbnRMaXN0LCBmYXZvcml0ZUxpc3QsIH0sIFJlc3RhdXJhbnRNYW5hZ2VyKSA9PiB7XG4gICAgY29uc3QgaW5kZXggPSBwYXJzZUludCh0YXJnZXQubmFtZSwgMTApO1xuICAgIGlmIChyZXN0YXVyYW50TGlzdFtpbmRleF0uaXNGYXZvcml0ZSA9PT0gdHJ1ZSkge1xuICAgICAgICBkZWxldGVGYXZvcml0ZUl0ZW0oeyByZXN0YXVyYW50TGlzdCwgZmF2b3JpdGVMaXN0IH0sIGluZGV4LCBSZXN0YXVyYW50TWFuYWdlcik7XG4gICAgfVxuICAgIGRlbGV0ZVJlc3RhdXJhbnRJdGVtKHJlc3RhdXJhbnRMaXN0LCBpbmRleCwgUmVzdGF1cmFudE1hbmFnZXIpO1xufTtcbmNvbnN0IGRlbGV0ZUZhdm9yaXRlSXRlbSA9ICh7IHJlc3RhdXJhbnRMaXN0LCBmYXZvcml0ZUxpc3QsIH0sIGluZGV4LCBSZXN0YXVyYW50TWFuYWdlcikgPT4ge1xuICAgIGNvbnN0IGZhdm9yaXRlSW5kZXggPSBmYXZvcml0ZUxpc3QuZmluZEluZGV4KGZhdm9yaXRlID0+IGZhdm9yaXRlLm5hbWUgPT09IHJlc3RhdXJhbnRMaXN0W2luZGV4XS5uYW1lKTtcbiAgICBmYXZvcml0ZUxpc3Quc3BsaWNlKGZhdm9yaXRlSW5kZXgsIDEpO1xuICAgIGZhdm9yaXRlTGlzdC5mb3JFYWNoKChmYXZvcml0ZSwgaSkgPT4gKGZhdm9yaXRlLm51bWJlciA9IGkpKTtcbiAgICBSZXN0YXVyYW50TWFuYWdlci51cGRhdGVGYXZvcml0ZUxpc3QoZmF2b3JpdGVMaXN0KTtcbn07XG5jb25zdCBkZWxldGVSZXN0YXVyYW50SXRlbSA9IChyZXN0YXVyYW50TGlzdCwgaW5kZXgsIFJlc3RhdXJhbnRNYW5hZ2VyKSA9PiB7XG4gICAgcmVzdGF1cmFudExpc3Quc3BsaWNlKGluZGV4LCAxKTtcbiAgICByZXN0YXVyYW50TGlzdC5mb3JFYWNoKChyZXN0YXVyYW50LCBpKSA9PiAocmVzdGF1cmFudC5udW1iZXIgPSBpKSk7XG4gICAgUmVzdGF1cmFudE1hbmFnZXIudXBkYXRlUmVzdGF1cmFudExpc3QocmVzdGF1cmFudExpc3QpO1xufTtcbiIsImltcG9ydCB7IGNvbXBvbmVudHMgfSBmcm9tICcuLi9jb21wb25lbnRzL2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgaGFuZGxlR05CQ2xpY2ssIGhhbmRsZUhlYWRlclRpdGxlQ2xpY2sgfSBmcm9tICcuL2hlYWRlcic7XG5pbXBvcnQgeyBoYW5kbGVOYXZpZ2F0aW9uQ2xpY2sgfSBmcm9tICcuL25hdmlnYXRpb24nO1xuaW1wb3J0IHsgaGFuZGxlRmlsdGVyQ2hhbmdlIH0gZnJvbSAnLi9maWx0ZXInO1xuaW1wb3J0IHsgaGFuZGxlUmVzdGF1cmFudEl0ZW1DbGljayB9IGZyb20gJy4vcmVzdGF1cmFudEl0ZW0nO1xuaW1wb3J0IHsgaGFuZGxlRmF2b3JpdGVJY29uQ2xpY2sgfSBmcm9tICcuL2Zhdm9yaXRlSWNvbic7XG5pbXBvcnQgeyBoYW5kbGVNb2RhbENsb3NlLCBoYW5kbGVNb2RhbE9wZW4gfSBmcm9tICcuL21vZGFsJztcbmltcG9ydCB7IGhhbmRsZUJhY2tkcm9wQ2xpY2ssIGhhbmRsZU5ld1Jlc3RhdXJhbnRBZGRTdWJtaXQsIGhhbmRsZU5ld1Jlc3RhdXJhbnRDYW5jZWxDbGljaywgfSBmcm9tICcuL3Jlc3RhdXJhbnRBZGRDb250YWluZXInO1xuaW1wb3J0IHsgZXhlY3V0ZUV2ZW50TGlzdGVuZXIgfSBmcm9tICcuLi91dGlscy9ldmVudExpc3RlbmVyJztcbmltcG9ydCB7IGhhbmRsZURlbGV0ZUNsaWNrIH0gZnJvbSAnLi9ib3R0b21TaGVldCc7XG5pbXBvcnQgeyBnZXRMaXN0T25Mb2NhbFN0b3JhZ2UgfSBmcm9tICcuLi91dGlscy9sb2NhbFN0b3JhZ2UnO1xuaW1wb3J0IHsgTE9DQUxfU1RPUkFHRV9LRVkgfSBmcm9tICcuLi9jb25zdGFudHMvbG9jYWxTdG9yYWdlJztcbmV4cG9ydCBjb25zdCBldmVudExpc3RlbmVyID0ge1xuICAgIGluaXRFdmVudExpc3RlbmVycyhSZXN0YXVyYW50TWFuYWdlcikge1xuICAgICAgICB0aGlzLmNvbnRyb2xIZWFkZXIoKTtcbiAgICAgICAgdGhpcy5jb250cm9sTmF2aWdhdGlvbigpO1xuICAgICAgICB0aGlzLmNvbnRyb2xGaWx0ZXIoKTtcbiAgICAgICAgdGhpcy5jb250cm9sUmVzdGF1cmFudExpc3QoUmVzdGF1cmFudE1hbmFnZXIpO1xuICAgICAgICB0aGlzLmNvbnRyb2xSZXN0YXVyYW50QWRkQ29udGFpbmVyKFJlc3RhdXJhbnRNYW5hZ2VyKTtcbiAgICB9LFxuICAgIGNvbnRyb2xIZWFkZXIoKSB7XG4gICAgICAgIGV4ZWN1dGVFdmVudExpc3RlbmVyKCdoZWFkZXInLCAnY2xpY2snLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcbiAgICAgICAgICAgIGlmICh0YXJnZXQgaW5zdGFuY2VvZiBIVE1MSGVhZGluZ0VsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICBoYW5kbGVIZWFkZXJUaXRsZUNsaWNrKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGFyZ2V0IGluc3RhbmNlb2YgSFRNTEltYWdlRWxlbWVudCkge1xuICAgICAgICAgICAgICAgIGhhbmRsZUdOQkNsaWNrKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgY29udHJvbE5hdmlnYXRpb24oKSB7XG4gICAgICAgIGV4ZWN1dGVFdmVudExpc3RlbmVyKCcubmF2LWNvbnRhaW5lcicsICdjbGljaycsIChldmVudCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0O1xuICAgICAgICAgICAgaWYgKHRhcmdldCBpbnN0YW5jZW9mIEhUTUxCdXR0b25FbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzdGF1cmFudExpc3QgPSBoYW5kbGVOYXZpZ2F0aW9uQ2xpY2sodGFyZ2V0KTtcbiAgICAgICAgICAgICAgICBjb21wb25lbnRzLnJlc3RhdXJhbnRMaXN0LnJlbmRlcihyZXN0YXVyYW50TGlzdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgY29udHJvbEZpbHRlcigpIHtcbiAgICAgICAgZXhlY3V0ZUV2ZW50TGlzdGVuZXIoJy5yZXN0YXVyYW50LWZpbHRlci1jb250YWluZXInLCAnY2hhbmdlJywgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG4gICAgICAgICAgICBpZiAodGFyZ2V0IGluc3RhbmNlb2YgSFRNTFNlbGVjdEVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXN0YXVyYW50TGlzdCA9IGhhbmRsZUZpbHRlckNoYW5nZSh0YXJnZXQpO1xuICAgICAgICAgICAgICAgIGNvbXBvbmVudHMucmVzdGF1cmFudExpc3QucmVuZGVyKHJlc3RhdXJhbnRMaXN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICBjb250cm9sUmVzdGF1cmFudExpc3QoUmVzdGF1cmFudE1hbmFnZXIpIHtcbiAgICAgICAgZXhlY3V0ZUV2ZW50TGlzdGVuZXIoJy5yZXN0YXVyYW50LWxpc3QtY29udGFpbmVyJywgJ2NsaWNrJywgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG4gICAgICAgICAgICBpZiAodGFyZ2V0IGluc3RhbmNlb2YgSFRNTEltYWdlRWxlbWVudCAmJiB0YXJnZXQuYWx0ID09PSAn7KaQ6rKo7LC+6riwJykge1xuICAgICAgICAgICAgICAgIGhhbmRsZUZhdm9yaXRlSWNvbkNsaWNrKHRhcmdldCwgUmVzdGF1cmFudE1hbmFnZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRhcmdldCBpbnN0YW5jZW9mIEhUTUxCdXR0b25FbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzdGF1cmFudCA9IGhhbmRsZVJlc3RhdXJhbnRJdGVtQ2xpY2sodGFyZ2V0KTtcbiAgICAgICAgICAgICAgICBjb21wb25lbnRzLnJlc3RhdXJhbnRCb3R0b21TaGVldENvbnRhaW5lci5yZW5kZXIocmVzdGF1cmFudCk7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250cm9sUmVzdGF1cmFudEJvdHRvbVNoZWV0KFJlc3RhdXJhbnRNYW5hZ2VyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICBjb250cm9sUmVzdGF1cmFudEFkZENvbnRhaW5lcihSZXN0YXVyYW50TWFuYWdlcikge1xuICAgICAgICBleGVjdXRlRXZlbnRMaXN0ZW5lcignI2FkZC1jYW5jZWwnLCAnY2xpY2snLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBpZiAodGFyZ2V0IGluc3RhbmNlb2YgSFRNTEJ1dHRvbkVsZW1lbnQgJiZcbiAgICAgICAgICAgICAgICB0YXJnZXQuYXJpYUxhYmVsID09PSAnY2FuY2VsJykge1xuICAgICAgICAgICAgICAgIGhhbmRsZU5ld1Jlc3RhdXJhbnRDYW5jZWxDbGljaygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgZXhlY3V0ZUV2ZW50TGlzdGVuZXIoJy5yZXN0YXVyYW50LWFkZC1iYWNrZHJvcCcsICdjbGljaycsIChldmVudCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0O1xuICAgICAgICAgICAgaWYgKHRhcmdldCBpbnN0YW5jZW9mIEhUTUxEaXZFbGVtZW50ICYmXG4gICAgICAgICAgICAgICAgdGFyZ2V0LmNsYXNzTmFtZSA9PT0gJ3Jlc3RhdXJhbnQtYWRkLWJhY2tkcm9wJykge1xuICAgICAgICAgICAgICAgIGhhbmRsZUJhY2tkcm9wQ2xpY2soKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGV4ZWN1dGVFdmVudExpc3RlbmVyKCcjbmV3LXJlc3RhdXJhbnQtZm9ybScsICdzdWJtaXQnLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBpZiAodGFyZ2V0IGluc3RhbmNlb2YgSFRNTEZvcm1FbGVtZW50ICYmXG4gICAgICAgICAgICAgICAgUmVzdGF1cmFudE1hbmFnZXIuYWRkTmV3UmVzdGF1cmFudChldmVudCkpIHtcbiAgICAgICAgICAgICAgICBoYW5kbGVOZXdSZXN0YXVyYW50QWRkU3VibWl0KCk7XG4gICAgICAgICAgICAgICAgY29tcG9uZW50cy5yZXN0YXVyYW50TGlzdC5yZW5kZXIoZ2V0TGlzdE9uTG9jYWxTdG9yYWdlKExPQ0FMX1NUT1JBR0VfS0VZLlJFU1RBVVJBTlRfTElTVCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9LFxuICAgIGNvbnRyb2xSZXN0YXVyYW50Qm90dG9tU2hlZXQoUmVzdGF1cmFudE1hbmFnZXIpIHtcbiAgICAgICAgaGFuZGxlTW9kYWxPcGVuKCcjcmVzdGF1cmFudC1ib3R0b20tc2hlZXQnKTtcbiAgICAgICAgZXhlY3V0ZUV2ZW50TGlzdGVuZXIoJy5yZXN0YXVyYW50LWJvdHRvbS1zaGVldC1iYWNrZHJvcCcsICdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIGhhbmRsZU1vZGFsQ2xvc2UoJyNyZXN0YXVyYW50LWJvdHRvbS1zaGVldCcpO1xuICAgICAgICB9KTtcbiAgICAgICAgZXhlY3V0ZUV2ZW50TGlzdGVuZXIoJy5oZWFkLWluZm8nLCAnY2xpY2snLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcbiAgICAgICAgICAgIGlmICh0YXJnZXQgaW5zdGFuY2VvZiBIVE1MSW1hZ2VFbGVtZW50ICYmIHRhcmdldC5hbHQgPT09ICfsppDqsqjssL7quLAnKSB7XG4gICAgICAgICAgICAgICAgaGFuZGxlRmF2b3JpdGVJY29uQ2xpY2sodGFyZ2V0LCBSZXN0YXVyYW50TWFuYWdlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBleGVjdXRlRXZlbnRMaXN0ZW5lcignLmJ1dHRvbi1jb250YWluZXItaW5mby1tb2RhbCcsICdjbGljaycsIChldmVudCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0O1xuICAgICAgICAgICAgaWYgKHRhcmdldCBpbnN0YW5jZW9mIEhUTUxCdXR0b25FbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgaGFuZGxlTW9kYWxDbG9zZSgnI3Jlc3RhdXJhbnQtYm90dG9tLXNoZWV0Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGFyZ2V0IGluc3RhbmNlb2YgSFRNTEJ1dHRvbkVsZW1lbnQgJiZcbiAgICAgICAgICAgICAgICB0YXJnZXQuYXJpYUxhYmVsID09PSAnZGVsZXRlJykge1xuICAgICAgICAgICAgICAgIGhhbmRsZURlbGV0ZUNsaWNrKHRhcmdldCwgUmVzdGF1cmFudE1hbmFnZXIpO1xuICAgICAgICAgICAgICAgIGNvbXBvbmVudHMucmVzdGF1cmFudExpc3QucmVuZGVyKGdldExpc3RPbkxvY2FsU3RvcmFnZShMT0NBTF9TVE9SQUdFX0tFWS5SRVNUQVVSQU5UX0xJU1QpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSxcbn07XG4iLCJpbXBvcnQgeyByZXNldEZvcm0sIHNjcm9sbFRvVG9wRm9ybSB9IGZyb20gJy4vZm9ybSc7XG5pbXBvcnQgeyBoYW5kbGVNb2RhbE9wZW4gfSBmcm9tICcuL21vZGFsJztcbmV4cG9ydCBjb25zdCBoYW5kbGVIZWFkZXJUaXRsZUNsaWNrID0gKCkgPT4ge1xuICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbn07XG5leHBvcnQgY29uc3QgaGFuZGxlR05CQ2xpY2sgPSAoKSA9PiB7XG4gICAgaGFuZGxlTW9kYWxPcGVuKCcjcmVzdGF1cmFudC1hZGQtbW9kYWwnKTtcbiAgICByZXNldEZvcm0oJyNuZXctcmVzdGF1cmFudC1mb3JtJyk7XG4gICAgc2Nyb2xsVG9Ub3BGb3JtKCcucmVzdGF1cmFudC1hZGQtY29udGFpbmVyJyk7XG59O1xuIiwiaW1wb3J0IGZpbHRlciBmcm9tICcuLi9kb21haW5zL2ZpbHRlcic7XG5leHBvcnQgY29uc3QgaGFuZGxlRmlsdGVyQ2hhbmdlID0gKHRhcmdldCkgPT4ge1xuICAgIGNvbnN0IHZhbHVlID0gdGFyZ2V0LnZhbHVlO1xuICAgIHJldHVybiBmaWx0ZXIuc29ydEJ5T3B0aW9uKHZhbHVlKTtcbn07XG4iLCJpbXBvcnQgeyBMT0NBTF9TVE9SQUdFX0tFWSB9IGZyb20gJy4uL2NvbnN0YW50cy9sb2NhbFN0b3JhZ2UnO1xuaW1wb3J0IHsgZ2V0TGlzdE9uTG9jYWxTdG9yYWdlIH0gZnJvbSAnLi4vdXRpbHMvbG9jYWxTdG9yYWdlJztcbmV4cG9ydCBjb25zdCBoYW5kbGVSZXN0YXVyYW50SXRlbUNsaWNrID0gKHRhcmdldCkgPT4ge1xuICAgIGNvbnN0IHJlc3RhdXJhbnRMaXN0ID0gZ2V0TGlzdE9uTG9jYWxTdG9yYWdlKExPQ0FMX1NUT1JBR0VfS0VZLlJFU1RBVVJBTlRfTElTVCk7XG4gICAgY29uc3QgaW5kZXggPSBwYXJzZUludCh0YXJnZXQubmFtZSwgMTApO1xuICAgIGNvbnN0IHJlc3RhdXJhbnQgPSByZXN0YXVyYW50TGlzdFtpbmRleF07XG4gICAgcmV0dXJuIHJlc3RhdXJhbnQ7XG59O1xuIiwiaW1wb3J0ICcuLi9jc3Mvc3R5bGUuY3NzJztcbmltcG9ydCBSZXN0YXVyYW50TWFuYWdlciBmcm9tICcuL2RvbWFpbnMvcmVzdGF1cmFudE1hbmFnZXInO1xuaW1wb3J0IHsgY29tcG9uZW50cyB9IGZyb20gJy4vY29tcG9uZW50cy9jb21wb25lbnRzJztcbmltcG9ydCB7IGV2ZW50TGlzdGVuZXIgfSBmcm9tICcuL2hhbmRsZVVpL2V2ZW50TGlzdGVuZXInO1xuY29uc3QgQXBwID0ge1xuICAgIFJlc3RhdXJhbnRNYW5hZ2VyOiBSZXN0YXVyYW50TWFuYWdlci5nZXRJbnN0YW5jZSgpLFxuICAgIGluaXQoKSB7XG4gICAgICAgIHRoaXMuUmVzdGF1cmFudE1hbmFnZXIuaW5pdFJlc3RhdXJhbnRMaXN0KCk7XG4gICAgICAgIGNvbXBvbmVudHMuaW5pdFJlbmRlcigpO1xuICAgICAgICBldmVudExpc3RlbmVyLmluaXRFdmVudExpc3RlbmVycyh0aGlzLlJlc3RhdXJhbnRNYW5hZ2VyKTtcbiAgICB9LFxufTtcbkFwcC5pbml0KCk7XG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicmVwbGFjZSIsInAiLCJuYyIsImxvY2FsU3RvcmFnZSIsInNhdmVMaXN0T25Mb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwiZ2V0TGlzdE9uTG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInZhbHVlcyIsInBhcnNlIiwiUkVHRVhfU1BFQ0lBTF9DSEFSQUNURVJTIiwiTE9DQUxfU1RPUkFHRV9LRVkiLCJpbml0aWFsUmVzdGF1cmFudExpc3QiLCJudW1iZXIiLCJjYXRlZ29yeSIsIm5hbWUiLCJkaXN0YW5jZSIsImRlc2NyaXB0aW9uIiwibGluayIsImlzRmF2b3JpdGUiLCJyZXN0YXVyYW50TWFuYWdlciIsImNvbnN0cnVjdG9yIiwicmVzdGF1cmFudExpc3QiLCJmYXZvcml0ZUxpc3QiLCJpbnN0YW5jZSIsInN0YXRpYyIsImluaXRSZXN0YXVyYW50TGlzdCIsImlzRXhpc3RSZXN0YXVyYW50TGlzdCIsImlzRXhpc3RGYXZvcml0ZUxpc3QiLCJhZGROZXdSZXN0YXVyYW50IiwiZXZlbnQiLCJuZXdSZXN0YXVyYW50IiwiZ2V0TmV3UmVzdGF1cmFudCIsImlucHV0IiwidGVzdCIsImNoZWNrUmVzdGF1cmFudE5hbWUiLCJyZXN0YXVyYW50TmFtZSIsImNoZWNrSW5wdXRMZW5ndGgiLCJmaW5kIiwicmVzdGF1cmFudCIsImNoZWNrRHVwbGljYXRlTmFtZUluUmVzdGF1cmFudExpc3QiLCJ1cGRhdGVSZXN0YXVyYW50TGlzdCIsImVycm9yIiwiYWxlcnQiLCJtZXNzYWdlIiwidHJpbW1lZE5ld1Jlc3RhdXJhbnQiLCJGb3JtRGF0YSIsImdldEZvcm1EYXRhIiwidmFsdWUiLCJTdHJpbmciLCJ0cmltIiwiZnJvbUVudHJpZXMiLCJ1cGRhdGVGYXZvcml0ZUxpc3QiLCIkIiwic2VsZWN0b3IiLCJfSGVhZGVyX2luc3RhbmNlcyIsIl9IZWFkZXJfc3RhdGUiLCJfSGVhZGVyX3RlbXBsYXRlIiwiX19jbGFzc1ByaXZhdGVGaWVsZEdldCIsInJlY2VpdmVyIiwic3RhdGUiLCJraW5kIiwiZiIsIlR5cGVFcnJvciIsImhhcyIsIldlYWtNYXAiLCJXZWFrU2V0IiwidGl0bGUiLCJfTmF2aWdhdGlvbl9pbnN0YW5jZXMiLCJfTmF2aWdhdGlvbl9zdGF0ZSIsIl9OYXZpZ2F0aW9uX3RlbXBsYXRlIiwiY2xhc3MiLCJfU2VsZWN0X2luc3RhbmNlcyIsIl9TZWxlY3Rfc3RhdGUiLCJfU2VsZWN0X3RlbXBsYXRlIiwib3B0aW9uTGlzdCIsIm9wdGlvbiIsInRleHQiLCJhZGQiLCJzZXQiLCJyZW5kZXIiLCJpbnNlcnRBZGphY2VudEhUTUwiLCJzaG93IiwiY2xhc3NMaXN0IiwiaGlkZSIsIkNBVEVHT1JZX0lNQUdFUyIsIl9SZXN0YXVyYW50TGlzdF9pbnN0YW5jZXMiLCJfUmVzdGF1cmFudExpc3Rfc3RhdGUiLCJfUmVzdGF1cmFudExpc3RfdGVtcGxhdGUiLCJfTW9kYWxfaW5zdGFuY2VzIiwiX01vZGFsX3N0YXRlIiwiX01vZGFsX3RlbXBsYXRlIiwiYmFja2Ryb3AiLCJjb250YWluZXIiLCJDQVRFR09SWV9MSVNUIiwiRElTVEFOQ0VfTElTVCIsIl9yZXN0YXVyYW50QWRkQ29udGFpbmVyX2luc3RhbmNlcyIsIl9yZXN0YXVyYW50QWRkQ29udGFpbmVyX3N0YXRlIiwiX3Jlc3RhdXJhbnRBZGRDb250YWluZXJfdGVtcGxhdGUiLCJfcmVzdGF1cmFudEJvdHRvbVNoZWV0X2luc3RhbmNlcyIsIl9yZXN0YXVyYW50Qm90dG9tU2hlZXRfc3RhdGUiLCJfcmVzdGF1cmFudEJvdHRvbVNoZWV0X3RlbXBsYXRlIiwiRklMVEVSX0NMQVNTIiwiU0VMRUNUX09QVElPTl9MSVNUIiwiQ0FURUdPUlkiLCJTT1JUSU5HIiwiY29tcG9uZW50cyIsImhlYWRlciIsIl9fY2xhc3NQcml2YXRlRmllbGRTZXQiLCJuYXZCYXIiLCJjYXRlZ29yeUZpbHRlciIsInNvcnRpbmdGaWx0ZXIiLCJsaXN0UmVuZGVyU2VsZWN0b3IiLCJhZGRpdGlvblJlbmRlclNlbGVjdG9yIiwicmVzdGF1cmFudExpc3RIVE1MIiwiaW5mbyIsImlubmVySFRNTCIsInJlbmRlckFkZGl0aW9uUmVzdGF1cmFudCIsInJlc3RhdXJhbnRBZGRNb2RhbCIsInJlc3RhdXJhbnRBZGRDb250YWluZXIiLCJyZXN0YXVyYW50Qm90dG9tU2hlZXQiLCJyZXN0YXVyYW50Qm90dG9tU2hlZXRDb250YWluZXIiLCJpbml0UmVuZGVyIiwicmVzZXRGb3JtIiwiZm9ybVNlbGVjdG9yIiwiJGZvcm0iLCJIVE1MRm9ybUVsZW1lbnQiLCJyZXNldCIsInNjcm9sbFRvVG9wRm9ybSIsIiR0YXJnZXQiLCJzY3JvbGxUbyIsImhhbmRsZU1vZGFsQ2xvc2UiLCJoYW5kbGVNb2RhbE9wZW4iLCJTRUxFQ1RFRF9DTEFTU19OQU1FIiwidG9nZ2xlU2VsZWN0ZWQiLCJpc0FsbFJlc3RhdXJhbnRzIiwiJG5hdmlnYXRpb24iLCIkcHJpbWFyeVRleHQiLCIkcHJpbWFyeUJhciIsIiRzZWNvbmRhcnlUZXh0IiwiJHNlY29uZGFyeUJhciIsInNvcnRCeU9wdGlvbiIsInNvcnRpbmdPcHRpb24iLCJzb3J0QnlOYW1lIiwic29ydEJ5RGlzdGFuY2UiLCJzb3J0QnlDYXRlZ29yaWVzIiwic29ydCIsImIiLCJOdW1iZXIiLCJmaWx0ZXIiLCJpc1Jlc3RhdXJhbnRMaXN0IiwiZXZlcnkiLCJpc1Jlc3RhdXJhbnQiLCJoYW5kbGVGYXZvcml0ZUljb25DbGljayIsIlJlc3RhdXJhbnRNYW5hZ2VyIiwicGFyc2VJbnQiLCJjbGFzc05hbWUiLCJzcGxpdCIsInRvZ2dsZUZhdm9yaXRlSWNvbiIsImFkZEZhdm9yaXRlSXRlbSIsInJlbW92ZUZhdm9yaXRlSXRlbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwidG9nZ2xlIiwiaXNGaWxsZWQiLCJjb250YWlucyIsInNlbGVjdGVkIiwiZmF2b3JpdGUiLCJpc0Zhdm9yaXRlSXRlbSIsImZpbmRJbmRleCIsImhhbmRsZU5ld1Jlc3RhdXJhbnRDbG9zZSIsImV4ZWN1dGVFdmVudExpc3RlbmVyIiwidHlwZSIsImNhbGxiYWNrIiwiYWRkRXZlbnRMaXN0ZW5lciIsImRlbGV0ZUZhdm9yaXRlSXRlbSIsImZhdm9yaXRlSW5kZXgiLCJkZWxldGVSZXN0YXVyYW50SXRlbSIsImV2ZW50TGlzdGVuZXIiLCJpbml0RXZlbnRMaXN0ZW5lcnMiLCJjb250cm9sSGVhZGVyIiwiY29udHJvbE5hdmlnYXRpb24iLCJjb250cm9sRmlsdGVyIiwiY29udHJvbFJlc3RhdXJhbnRMaXN0IiwiY29udHJvbFJlc3RhdXJhbnRBZGRDb250YWluZXIiLCJIVE1MSGVhZGluZ0VsZW1lbnQiLCJyZWxvYWQiLCJIVE1MSW1hZ2VFbGVtZW50IiwiSFRNTEJ1dHRvbkVsZW1lbnQiLCJhcmlhTGFiZWwiLCJoYW5kbGVOYXZpZ2F0aW9uQ2xpY2siLCJIVE1MU2VsZWN0RWxlbWVudCIsImhhbmRsZUZpbHRlckNoYW5nZSIsImFsdCIsImhhbmRsZVJlc3RhdXJhbnRJdGVtQ2xpY2siLCJjb250cm9sUmVzdGF1cmFudEJvdHRvbVNoZWV0IiwicHJldmVudERlZmF1bHQiLCJIVE1MRGl2RWxlbWVudCIsImRlbGV0ZUl0ZW0iLCJoYW5kbGVEZWxldGVDbGljayIsImluaXQiXSwic291cmNlUm9vdCI6IiJ9